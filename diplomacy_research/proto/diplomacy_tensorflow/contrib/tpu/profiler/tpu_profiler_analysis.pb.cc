// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler_analysis.proto

#include "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler_analysis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ProfileRequest;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProfileSessionDataRequest_ParametersEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProfileSessionInfo;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto
namespace diplomacy {
namespace tensorflow {
class NewProfileSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewProfileSessionRequest>
      _instance;
} _NewProfileSessionRequest_default_instance_;
class NewProfileSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewProfileSessionResponse>
      _instance;
} _NewProfileSessionResponse_default_instance_;
class EnumProfileSessionsAndToolsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumProfileSessionsAndToolsRequest>
      _instance;
} _EnumProfileSessionsAndToolsRequest_default_instance_;
class ProfileSessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileSessionInfo>
      _instance;
} _ProfileSessionInfo_default_instance_;
class EnumProfileSessionsAndToolsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumProfileSessionsAndToolsResponse>
      _instance;
} _EnumProfileSessionsAndToolsResponse_default_instance_;
class ProfileSessionDataRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileSessionDataRequest_ParametersEntry_DoNotUse>
      _instance;
} _ProfileSessionDataRequest_ParametersEntry_DoNotUse_default_instance_;
class ProfileSessionDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileSessionDataRequest>
      _instance;
} _ProfileSessionDataRequest_default_instance_;
class ProfileSessionDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileSessionDataResponse>
      _instance;
} _ProfileSessionDataResponse_default_instance_;
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto {
static void InitDefaultsNewProfileSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_NewProfileSessionRequest_default_instance_;
    new (ptr) ::diplomacy::tensorflow::NewProfileSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::NewProfileSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NewProfileSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNewProfileSessionRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileRequest.base,}};

static void InitDefaultsNewProfileSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_NewProfileSessionResponse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::NewProfileSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::NewProfileSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewProfileSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNewProfileSessionResponse}, {}};

static void InitDefaultsEnumProfileSessionsAndToolsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_EnumProfileSessionsAndToolsRequest_default_instance_;
    new (ptr) ::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnumProfileSessionsAndToolsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnumProfileSessionsAndToolsRequest}, {}};

static void InitDefaultsProfileSessionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileSessionInfo_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileSessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileSessionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileSessionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileSessionInfo}, {}};

static void InitDefaultsEnumProfileSessionsAndToolsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_EnumProfileSessionsAndToolsResponse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnumProfileSessionsAndToolsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnumProfileSessionsAndToolsResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionInfo.base,}};

static void InitDefaultsProfileSessionDataRequest_ParametersEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileSessionDataRequest_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse();
  }
  ::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileSessionDataRequest_ParametersEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileSessionDataRequest_ParametersEntry_DoNotUse}, {}};

static void InitDefaultsProfileSessionDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileSessionDataRequest_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileSessionDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileSessionDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProfileSessionDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProfileSessionDataRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionDataRequest_ParametersEntry_DoNotUse.base,}};

static void InitDefaultsProfileSessionDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileSessionDataResponse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileSessionDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileSessionDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileSessionDataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileSessionDataResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NewProfileSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewProfileSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnumProfileSessionsAndToolsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileSessionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnumProfileSessionsAndToolsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileSessionDataRequest_ParametersEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileSessionDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileSessionDataResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionRequest, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionRequest, repository_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionRequest, hosts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionRequest, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::NewProfileSessionResponse, empty_trace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest, repository_root_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionInfo, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionInfo, available_tools_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse, sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, repository_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, tool_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataRequest, parameters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataResponse, output_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileSessionDataResponse, output_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::diplomacy::tensorflow::NewProfileSessionRequest)},
  { 9, -1, sizeof(::diplomacy::tensorflow::NewProfileSessionResponse)},
  { 16, -1, sizeof(::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest)},
  { 22, -1, sizeof(::diplomacy::tensorflow::ProfileSessionInfo)},
  { 29, -1, sizeof(::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse)},
  { 36, 43, sizeof(::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse)},
  { 45, -1, sizeof(::diplomacy::tensorflow::ProfileSessionDataRequest)},
  { 55, -1, sizeof(::diplomacy::tensorflow::ProfileSessionDataResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_NewProfileSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_NewProfileSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_EnumProfileSessionsAndToolsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_EnumProfileSessionsAndToolsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileSessionDataRequest_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileSessionDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileSessionDataResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler_analysis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nEdiplomacy_tensorflow/contrib/tpu/profi"
      "ler/tpu_profiler_analysis.proto\022\024diploma"
      "cy.tensorflow\032<diplomacy_tensorflow/cont"
      "rib/tpu/profiler/tpu_profiler.proto\"\215\001\n\030"
      "NewProfileSessionRequest\0225\n\007request\030\001 \001("
      "\0132$.diplomacy.tensorflow.ProfileRequest\022"
      "\027\n\017repository_root\030\002 \001(\t\022\r\n\005hosts\030\003 \003(\t\022"
      "\022\n\nsession_id\030\004 \001(\t\"G\n\031NewProfileSession"
      "Response\022\025\n\rerror_message\030\001 \001(\t\022\023\n\013empty"
      "_trace\030\002 \001(\010\"=\n\"EnumProfileSessionsAndTo"
      "olsRequest\022\027\n\017repository_root\030\001 \001(\t\"A\n\022P"
      "rofileSessionInfo\022\022\n\nsession_id\030\001 \001(\t\022\027\n"
      "\017available_tools\030\002 \003(\t\"x\n#EnumProfileSes"
      "sionsAndToolsResponse\022\025\n\rerror_message\030\001"
      " \001(\t\022:\n\010sessions\030\002 \003(\0132(.diplomacy.tenso"
      "rflow.ProfileSessionInfo\"\366\001\n\031ProfileSess"
      "ionDataRequest\022\027\n\017repository_root\030\001 \001(\t\022"
      "\022\n\nsession_id\030\002 \001(\t\022\021\n\thost_name\030\005 \001(\t\022\021"
      "\n\ttool_name\030\003 \001(\t\022S\n\nparameters\030\004 \003(\0132\?."
      "diplomacy.tensorflow.ProfileSessionDataR"
      "equest.ParametersEntry\0321\n\017ParametersEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"Z\n\032Pro"
      "fileSessionDataResponse\022\025\n\rerror_message"
      "\030\001 \001(\t\022\025\n\routput_format\030\002 \001(\t\022\016\n\006output\030"
      "\003 \001(\0142\210\003\n\022TPUProfileAnalysis\022o\n\nNewSessi"
      "on\022..diplomacy.tensorflow.NewProfileSess"
      "ionRequest\032/.diplomacy.tensorflow.NewPro"
      "fileSessionResponse\"\000\022\205\001\n\014EnumSessions\0228"
      ".diplomacy.tensorflow.EnumProfileSession"
      "sAndToolsRequest\0329.diplomacy.tensorflow."
      "EnumProfileSessionsAndToolsResponse\"\000\022y\n"
      "\022GetSessionToolData\022/.diplomacy.tensorfl"
      "ow.ProfileSessionDataRequest\0320.diplomacy"
      ".tensorflow.ProfileSessionDataResponse\"\000"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1368);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler_analysis.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto
namespace diplomacy {
namespace tensorflow {

// ===================================================================

void NewProfileSessionRequest::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::_NewProfileSessionRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::diplomacy::tensorflow::ProfileRequest*>(
      ::diplomacy::tensorflow::ProfileRequest::internal_default_instance());
}
void NewProfileSessionRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewProfileSessionRequest::kRequestFieldNumber;
const int NewProfileSessionRequest::kRepositoryRootFieldNumber;
const int NewProfileSessionRequest::kHostsFieldNumber;
const int NewProfileSessionRequest::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewProfileSessionRequest::NewProfileSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_NewProfileSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.NewProfileSessionRequest)
}
NewProfileSessionRequest::NewProfileSessionRequest(const NewProfileSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hosts_(from.hosts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repository_root().size() > 0) {
    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_request()) {
    request_ = new ::diplomacy::tensorflow::ProfileRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.NewProfileSessionRequest)
}

void NewProfileSessionRequest::SharedCtor() {
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = NULL;
}

NewProfileSessionRequest::~NewProfileSessionRequest() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.NewProfileSessionRequest)
  SharedDtor();
}

void NewProfileSessionRequest::SharedDtor() {
  repository_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void NewProfileSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewProfileSessionRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewProfileSessionRequest& NewProfileSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_NewProfileSessionRequest.base);
  return *internal_default_instance();
}


void NewProfileSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.NewProfileSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hosts_.Clear();
  repository_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool NewProfileSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.NewProfileSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.ProfileRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repository_root = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_root().data(), static_cast<int>(this->repository_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.NewProfileSessionRequest.repository_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string hosts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_hosts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hosts(this->hosts_size() - 1).data(),
            static_cast<int>(this->hosts(this->hosts_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.NewProfileSessionRequest.hosts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.NewProfileSessionRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.NewProfileSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.NewProfileSessionRequest)
  return false;
#undef DO_
}

void NewProfileSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.NewProfileSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.ProfileRequest request = 1;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_request(), output);
  }

  // string repository_root = 2;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.repository_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repository_root(), output);
  }

  // repeated string hosts = 3;
  for (int i = 0, n = this->hosts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hosts(i).data(), static_cast<int>(this->hosts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.hosts");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->hosts(i), output);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.NewProfileSessionRequest)
}

::google::protobuf::uint8* NewProfileSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.NewProfileSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.ProfileRequest request = 1;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_request(), deterministic, target);
  }

  // string repository_root = 2;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.repository_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repository_root(), target);
  }

  // repeated string hosts = 3;
  for (int i = 0, n = this->hosts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hosts(i).data(), static_cast<int>(this->hosts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.hosts");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->hosts(i), target);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.NewProfileSessionRequest)
  return target;
}

size_t NewProfileSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.NewProfileSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string hosts = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hosts_size());
  for (int i = 0, n = this->hosts_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->hosts(i));
  }

  // string repository_root = 2;
  if (this->repository_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_root());
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // .diplomacy.tensorflow.ProfileRequest request = 1;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewProfileSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.NewProfileSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewProfileSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewProfileSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.NewProfileSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.NewProfileSessionRequest)
    MergeFrom(*source);
  }
}

void NewProfileSessionRequest::MergeFrom(const NewProfileSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.NewProfileSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hosts_.MergeFrom(from.hosts_);
  if (from.repository_root().size() > 0) {

    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_request()) {
    mutable_request()->::diplomacy::tensorflow::ProfileRequest::MergeFrom(from.request());
  }
}

void NewProfileSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.NewProfileSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewProfileSessionRequest::CopyFrom(const NewProfileSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.NewProfileSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewProfileSessionRequest::IsInitialized() const {
  return true;
}

void NewProfileSessionRequest::Swap(NewProfileSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewProfileSessionRequest::InternalSwap(NewProfileSessionRequest* other) {
  using std::swap;
  hosts_.InternalSwap(CastToBase(&other->hosts_));
  repository_root_.Swap(&other->repository_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewProfileSessionRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewProfileSessionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewProfileSessionResponse::kErrorMessageFieldNumber;
const int NewProfileSessionResponse::kEmptyTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewProfileSessionResponse::NewProfileSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_NewProfileSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.NewProfileSessionResponse)
}
NewProfileSessionResponse::NewProfileSessionResponse(const NewProfileSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  empty_trace_ = from.empty_trace_;
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.NewProfileSessionResponse)
}

void NewProfileSessionResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  empty_trace_ = false;
}

NewProfileSessionResponse::~NewProfileSessionResponse() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.NewProfileSessionResponse)
  SharedDtor();
}

void NewProfileSessionResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewProfileSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewProfileSessionResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewProfileSessionResponse& NewProfileSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_NewProfileSessionResponse.base);
  return *internal_default_instance();
}


void NewProfileSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.NewProfileSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  empty_trace_ = false;
  _internal_metadata_.Clear();
}

bool NewProfileSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.NewProfileSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.NewProfileSessionResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool empty_trace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &empty_trace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.NewProfileSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.NewProfileSessionResponse)
  return false;
#undef DO_
}

void NewProfileSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.NewProfileSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // bool empty_trace = 2;
  if (this->empty_trace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->empty_trace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.NewProfileSessionResponse)
}

::google::protobuf::uint8* NewProfileSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.NewProfileSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.NewProfileSessionResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // bool empty_trace = 2;
  if (this->empty_trace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->empty_trace(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.NewProfileSessionResponse)
  return target;
}

size_t NewProfileSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.NewProfileSessionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 1;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bool empty_trace = 2;
  if (this->empty_trace() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewProfileSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.NewProfileSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NewProfileSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewProfileSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.NewProfileSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.NewProfileSessionResponse)
    MergeFrom(*source);
  }
}

void NewProfileSessionResponse::MergeFrom(const NewProfileSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.NewProfileSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.empty_trace() != 0) {
    set_empty_trace(from.empty_trace());
  }
}

void NewProfileSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.NewProfileSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewProfileSessionResponse::CopyFrom(const NewProfileSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.NewProfileSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewProfileSessionResponse::IsInitialized() const {
  return true;
}

void NewProfileSessionResponse::Swap(NewProfileSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewProfileSessionResponse::InternalSwap(NewProfileSessionResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(empty_trace_, other->empty_trace_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewProfileSessionResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumProfileSessionsAndToolsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumProfileSessionsAndToolsRequest::kRepositoryRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumProfileSessionsAndToolsRequest::EnumProfileSessionsAndToolsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_EnumProfileSessionsAndToolsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
}
EnumProfileSessionsAndToolsRequest::EnumProfileSessionsAndToolsRequest(const EnumProfileSessionsAndToolsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repository_root().size() > 0) {
    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
}

void EnumProfileSessionsAndToolsRequest::SharedCtor() {
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EnumProfileSessionsAndToolsRequest::~EnumProfileSessionsAndToolsRequest() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  SharedDtor();
}

void EnumProfileSessionsAndToolsRequest::SharedDtor() {
  repository_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnumProfileSessionsAndToolsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnumProfileSessionsAndToolsRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumProfileSessionsAndToolsRequest& EnumProfileSessionsAndToolsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_EnumProfileSessionsAndToolsRequest.base);
  return *internal_default_instance();
}


void EnumProfileSessionsAndToolsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repository_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EnumProfileSessionsAndToolsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repository_root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_root().data(), static_cast<int>(this->repository_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest.repository_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  return false;
#undef DO_
}

void EnumProfileSessionsAndToolsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest.repository_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->repository_root(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
}

::google::protobuf::uint8* EnumProfileSessionsAndToolsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest.repository_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->repository_root(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  return target;
}

size_t EnumProfileSessionsAndToolsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_root());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnumProfileSessionsAndToolsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumProfileSessionsAndToolsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumProfileSessionsAndToolsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
    MergeFrom(*source);
  }
}

void EnumProfileSessionsAndToolsRequest::MergeFrom(const EnumProfileSessionsAndToolsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.repository_root().size() > 0) {

    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
}

void EnumProfileSessionsAndToolsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumProfileSessionsAndToolsRequest::CopyFrom(const EnumProfileSessionsAndToolsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumProfileSessionsAndToolsRequest::IsInitialized() const {
  return true;
}

void EnumProfileSessionsAndToolsRequest::Swap(EnumProfileSessionsAndToolsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumProfileSessionsAndToolsRequest::InternalSwap(EnumProfileSessionsAndToolsRequest* other) {
  using std::swap;
  repository_root_.Swap(&other->repository_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnumProfileSessionsAndToolsRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileSessionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileSessionInfo::kSessionIdFieldNumber;
const int ProfileSessionInfo::kAvailableToolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileSessionInfo::ProfileSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileSessionInfo)
}
ProfileSessionInfo::ProfileSessionInfo(const ProfileSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      available_tools_(from.available_tools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileSessionInfo)
}

void ProfileSessionInfo::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProfileSessionInfo::~ProfileSessionInfo() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileSessionInfo)
  SharedDtor();
}

void ProfileSessionInfo::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProfileSessionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileSessionInfo::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileSessionInfo& ProfileSessionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionInfo.base);
  return *internal_default_instance();
}


void ProfileSessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_tools_.Clear();
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProfileSessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileSessionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionInfo.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string available_tools = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_available_tools()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->available_tools(this->available_tools_size() - 1).data(),
            static_cast<int>(this->available_tools(this->available_tools_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionInfo.available_tools"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileSessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileSessionInfo)
  return false;
#undef DO_
}

void ProfileSessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionInfo.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  // repeated string available_tools = 2;
  for (int i = 0, n = this->available_tools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->available_tools(i).data(), static_cast<int>(this->available_tools(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionInfo.available_tools");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->available_tools(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileSessionInfo)
}

::google::protobuf::uint8* ProfileSessionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionInfo.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  // repeated string available_tools = 2;
  for (int i = 0, n = this->available_tools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->available_tools(i).data(), static_cast<int>(this->available_tools(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionInfo.available_tools");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->available_tools(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileSessionInfo)
  return target;
}

size_t ProfileSessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileSessionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string available_tools = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->available_tools_size());
  for (int i = 0, n = this->available_tools_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->available_tools(i));
  }

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileSessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileSessionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileSessionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileSessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileSessionInfo)
    MergeFrom(*source);
  }
}

void ProfileSessionInfo::MergeFrom(const ProfileSessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  available_tools_.MergeFrom(from.available_tools_);
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void ProfileSessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileSessionInfo::CopyFrom(const ProfileSessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileSessionInfo::IsInitialized() const {
  return true;
}

void ProfileSessionInfo::Swap(ProfileSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileSessionInfo::InternalSwap(ProfileSessionInfo* other) {
  using std::swap;
  available_tools_.InternalSwap(CastToBase(&other->available_tools_));
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileSessionInfo::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumProfileSessionsAndToolsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumProfileSessionsAndToolsResponse::kErrorMessageFieldNumber;
const int EnumProfileSessionsAndToolsResponse::kSessionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumProfileSessionsAndToolsResponse::EnumProfileSessionsAndToolsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_EnumProfileSessionsAndToolsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
}
EnumProfileSessionsAndToolsResponse::EnumProfileSessionsAndToolsResponse(const EnumProfileSessionsAndToolsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
}

void EnumProfileSessionsAndToolsResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EnumProfileSessionsAndToolsResponse::~EnumProfileSessionsAndToolsResponse() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  SharedDtor();
}

void EnumProfileSessionsAndToolsResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnumProfileSessionsAndToolsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnumProfileSessionsAndToolsResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumProfileSessionsAndToolsResponse& EnumProfileSessionsAndToolsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_EnumProfileSessionsAndToolsResponse.base);
  return *internal_default_instance();
}


void EnumProfileSessionsAndToolsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EnumProfileSessionsAndToolsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .diplomacy.tensorflow.ProfileSessionInfo sessions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sessions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  return false;
#undef DO_
}

void EnumProfileSessionsAndToolsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // repeated .diplomacy.tensorflow.ProfileSessionInfo sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->sessions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
}

::google::protobuf::uint8* EnumProfileSessionsAndToolsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // repeated .diplomacy.tensorflow.ProfileSessionInfo sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sessions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  return target;
}

size_t EnumProfileSessionsAndToolsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .diplomacy.tensorflow.ProfileSessionInfo sessions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sessions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sessions(static_cast<int>(i)));
    }
  }

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnumProfileSessionsAndToolsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumProfileSessionsAndToolsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumProfileSessionsAndToolsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
    MergeFrom(*source);
  }
}

void EnumProfileSessionsAndToolsResponse::MergeFrom(const EnumProfileSessionsAndToolsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
}

void EnumProfileSessionsAndToolsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumProfileSessionsAndToolsResponse::CopyFrom(const EnumProfileSessionsAndToolsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.EnumProfileSessionsAndToolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumProfileSessionsAndToolsResponse::IsInitialized() const {
  return true;
}

void EnumProfileSessionsAndToolsResponse::Swap(EnumProfileSessionsAndToolsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumProfileSessionsAndToolsResponse::InternalSwap(EnumProfileSessionsAndToolsResponse* other) {
  using std::swap;
  CastToBase(&sessions_)->InternalSwap(CastToBase(&other->sessions_));
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnumProfileSessionsAndToolsResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ProfileSessionDataRequest_ParametersEntry_DoNotUse::ProfileSessionDataRequest_ParametersEntry_DoNotUse() {}
ProfileSessionDataRequest_ParametersEntry_DoNotUse::ProfileSessionDataRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ProfileSessionDataRequest_ParametersEntry_DoNotUse::MergeFrom(const ProfileSessionDataRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ProfileSessionDataRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[5];
}
void ProfileSessionDataRequest_ParametersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ProfileSessionDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileSessionDataRequest::kRepositoryRootFieldNumber;
const int ProfileSessionDataRequest::kSessionIdFieldNumber;
const int ProfileSessionDataRequest::kHostNameFieldNumber;
const int ProfileSessionDataRequest::kToolNameFieldNumber;
const int ProfileSessionDataRequest::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileSessionDataRequest::ProfileSessionDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileSessionDataRequest)
}
ProfileSessionDataRequest::ProfileSessionDataRequest(const ProfileSessionDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repository_root().size() > 0) {
    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  tool_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tool_name().size() > 0) {
    tool_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tool_name_);
  }
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_name().size() > 0) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileSessionDataRequest)
}

void ProfileSessionDataRequest::SharedCtor() {
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tool_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProfileSessionDataRequest::~ProfileSessionDataRequest() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileSessionDataRequest)
  SharedDtor();
}

void ProfileSessionDataRequest::SharedDtor() {
  repository_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tool_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProfileSessionDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileSessionDataRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileSessionDataRequest& ProfileSessionDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionDataRequest.base);
  return *internal_default_instance();
}


void ProfileSessionDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  repository_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tool_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProfileSessionDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repository_root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_root().data(), static_cast<int>(this->repository_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.repository_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tool_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tool_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tool_name().data(), static_cast<int>(this->tool_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.tool_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> parameters = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ProfileSessionDataRequest_ParametersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ProfileSessionDataRequest_ParametersEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataRequest.host_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileSessionDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileSessionDataRequest)
  return false;
#undef DO_
}

void ProfileSessionDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.repository_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->repository_root(), output);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_id(), output);
  }

  // string tool_name = 3;
  if (this->tool_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tool_name().data(), static_cast<int>(this->tool_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.tool_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tool_name(), output);
  }

  // map<string, string> parameters = 4;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ProfileSessionDataRequest_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ProfileSessionDataRequest_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string host_name = 5;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->host_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileSessionDataRequest)
}

::google::protobuf::uint8* ProfileSessionDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.repository_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->repository_root(), target);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_id(), target);
  }

  // string tool_name = 3;
  if (this->tool_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tool_name().data(), static_cast<int>(this->tool_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.tool_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tool_name(), target);
  }

  // map<string, string> parameters = 4;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileSessionDataRequest.ParametersEntry.value");
      }
    };

    if (deterministic &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ProfileSessionDataRequest_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ProfileSessionDataRequest_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string host_name = 5;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataRequest.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->host_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileSessionDataRequest)
  return target;
}

size_t ProfileSessionDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> parameters = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  {
    ::std::unique_ptr<ProfileSessionDataRequest_ParametersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string repository_root = 1;
  if (this->repository_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_root());
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string tool_name = 3;
  if (this->tool_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tool_name());
  }

  // string host_name = 5;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileSessionDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileSessionDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileSessionDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileSessionDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileSessionDataRequest)
    MergeFrom(*source);
  }
}

void ProfileSessionDataRequest::MergeFrom(const ProfileSessionDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.repository_root().size() > 0) {

    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.tool_name().size() > 0) {

    tool_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tool_name_);
  }
  if (from.host_name().size() > 0) {

    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
}

void ProfileSessionDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileSessionDataRequest::CopyFrom(const ProfileSessionDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileSessionDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileSessionDataRequest::IsInitialized() const {
  return true;
}

void ProfileSessionDataRequest::Swap(ProfileSessionDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileSessionDataRequest::InternalSwap(ProfileSessionDataRequest* other) {
  using std::swap;
  parameters_.Swap(&other->parameters_);
  repository_root_.Swap(&other->repository_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tool_name_.Swap(&other->tool_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileSessionDataRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileSessionDataResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileSessionDataResponse::kErrorMessageFieldNumber;
const int ProfileSessionDataResponse::kOutputFormatFieldNumber;
const int ProfileSessionDataResponse::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileSessionDataResponse::ProfileSessionDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionDataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileSessionDataResponse)
}
ProfileSessionDataResponse::ProfileSessionDataResponse(const ProfileSessionDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  output_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_format().size() > 0) {
    output_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_format_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output().size() > 0) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileSessionDataResponse)
}

void ProfileSessionDataResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProfileSessionDataResponse::~ProfileSessionDataResponse() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileSessionDataResponse)
  SharedDtor();
}

void ProfileSessionDataResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProfileSessionDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileSessionDataResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileSessionDataResponse& ProfileSessionDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::scc_info_ProfileSessionDataResponse.base);
  return *internal_default_instance();
}


void ProfileSessionDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProfileSessionDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_format().data(), static_cast<int>(this->output_format().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileSessionDataResponse.output_format"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes output = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileSessionDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileSessionDataResponse)
  return false;
#undef DO_
}

void ProfileSessionDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // string output_format = 2;
  if (this->output_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_format().data(), static_cast<int>(this->output_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataResponse.output_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->output_format(), output);
  }

  // bytes output = 3;
  if (this->output().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->output(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileSessionDataResponse)
}

::google::protobuf::uint8* ProfileSessionDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // string output_format = 2;
  if (this->output_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_format().data(), static_cast<int>(this->output_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileSessionDataResponse.output_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->output_format(), target);
  }

  // bytes output = 3;
  if (this->output().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->output(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileSessionDataResponse)
  return target;
}

size_t ProfileSessionDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 1;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // string output_format = 2;
  if (this->output_format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_format());
  }

  // bytes output = 3;
  if (this->output().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->output());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileSessionDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileSessionDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileSessionDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileSessionDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileSessionDataResponse)
    MergeFrom(*source);
  }
}

void ProfileSessionDataResponse::MergeFrom(const ProfileSessionDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.output_format().size() > 0) {

    output_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_format_);
  }
  if (from.output().size() > 0) {

    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
}

void ProfileSessionDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileSessionDataResponse::CopyFrom(const ProfileSessionDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileSessionDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileSessionDataResponse::IsInitialized() const {
  return true;
}

void ProfileSessionDataResponse::Swap(ProfileSessionDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileSessionDataResponse::InternalSwap(ProfileSessionDataResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_format_.Swap(&other->output_format_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_.Swap(&other->output_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileSessionDataResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_5fanalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::NewProfileSessionRequest* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::NewProfileSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::NewProfileSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::NewProfileSessionResponse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::NewProfileSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::NewProfileSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::EnumProfileSessionsAndToolsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileSessionInfo* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileSessionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileSessionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::EnumProfileSessionsAndToolsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileSessionDataRequest_ParametersEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileSessionDataRequest* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileSessionDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileSessionDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileSessionDataResponse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileSessionDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileSessionDataResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
