// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler.proto

#include "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2fop_5fprofile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2fop_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Profile;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2fop_5fprofile_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProfileOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProfileToolData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ToolRequestOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProfileRequest_ToolOptionsEntry_DoNotUse;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcore_2fframework_2fgraph_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcore_2fframework_2fgraph_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_GraphDef;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcore_2fframework_2fgraph_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RunMetadata;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fconfig_2eproto
namespace diplomacy {
namespace tensorflow {
class ProfileOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileOptions>
      _instance;
} _ProfileOptions_default_instance_;
class ToolRequestOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToolRequestOptions>
      _instance;
} _ToolRequestOptions_default_instance_;
class ProfileRequest_ToolOptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileRequest_ToolOptionsEntry_DoNotUse>
      _instance;
} _ProfileRequest_ToolOptionsEntry_DoNotUse_default_instance_;
class ProfileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileRequest>
      _instance;
} _ProfileRequest_default_instance_;
class ProfileToolDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileToolData>
      _instance;
} _ProfileToolData_default_instance_;
class ProfileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileResponse>
      _instance;
} _ProfileResponse_default_instance_;
class MonitorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitorRequest>
      _instance;
} _MonitorRequest_default_instance_;
class MonitorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitorResponse>
      _instance;
} _MonitorResponse_default_instance_;
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto {
static void InitDefaultsProfileOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileOptions_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileOptions}, {}};

static void InitDefaultsToolRequestOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ToolRequestOptions_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ToolRequestOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ToolRequestOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ToolRequestOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsToolRequestOptions}, {}};

static void InitDefaultsProfileRequest_ToolOptionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileRequest_ToolOptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse();
  }
  ::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProfileRequest_ToolOptionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProfileRequest_ToolOptionsEntry_DoNotUse}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ToolRequestOptions.base,}};

static void InitDefaultsProfileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileRequest_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProfileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProfileRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileRequest_ToolOptionsEntry_DoNotUse.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileOptions.base,}};

static void InitDefaultsProfileToolData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileToolData_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileToolData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileToolData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileToolData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileToolData}, {}};

static void InitDefaultsProfileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_ProfileResponse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::ProfileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::ProfileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ProfileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsProfileResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcore_2fframework_2fgraph_2eproto::scc_info_GraphDef.base,
      &protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fconfig_2eproto::scc_info_RunMetadata.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2fop_5fprofile_2eproto::scc_info_Profile.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileToolData.base,}};

static void InitDefaultsMonitorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_MonitorRequest_default_instance_;
    new (ptr) ::diplomacy::tensorflow::MonitorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::MonitorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonitorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonitorRequest}, {}};

static void InitDefaultsMonitorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_MonitorResponse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::MonitorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::MonitorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonitorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonitorResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToolRequestOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileRequest_ToolOptionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileToolData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitorResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileOptions, include_dataset_ops_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ToolRequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ToolRequestOptions, output_formats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ToolRequestOptions, save_to_repo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, duration_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, max_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, tools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, tool_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, opts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, repository_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileRequest, host_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileToolData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileToolData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileToolData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, computation_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, hlo_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, encoded_trace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, op_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, tool_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::ProfileResponse, empty_trace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::MonitorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::MonitorRequest, duration_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::MonitorRequest, monitoring_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::MonitorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::MonitorResponse, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::diplomacy::tensorflow::ProfileOptions)},
  { 6, -1, sizeof(::diplomacy::tensorflow::ToolRequestOptions)},
  { 13, 20, sizeof(::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse)},
  { 22, -1, sizeof(::diplomacy::tensorflow::ProfileRequest)},
  { 35, -1, sizeof(::diplomacy::tensorflow::ProfileToolData)},
  { 42, -1, sizeof(::diplomacy::tensorflow::ProfileResponse)},
  { 53, -1, sizeof(::diplomacy::tensorflow::MonitorRequest)},
  { 60, -1, sizeof(::diplomacy::tensorflow::MonitorResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ToolRequestOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileRequest_ToolOptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileToolData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_ProfileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_MonitorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_MonitorResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n<diplomacy_tensorflow/contrib/tpu/profi"
      "ler/tpu_profiler.proto\022\024diplomacy.tensor"
      "flow\032/diplomacy_tensorflow/core/framewor"
      "k/graph.proto\032/diplomacy_tensorflow/core"
      "/protobuf/config.proto\032:diplomacy_tensor"
      "flow/contrib/tpu/profiler/op_profile.pro"
      "to\"-\n\016ProfileOptions\022\033\n\023include_dataset_"
      "ops\030\001 \001(\010\"B\n\022ToolRequestOptions\022\026\n\016outpu"
      "t_formats\030\002 \001(\t\022\024\n\014save_to_repo\030\003 \001(\010\"\347\002"
      "\n\016ProfileRequest\022\023\n\013duration_ms\030\001 \001(\004\022\022\n"
      "\nmax_events\030\002 \001(\004\022\r\n\005tools\030\003 \003(\t\022K\n\014tool"
      "_options\030\010 \003(\01325.diplomacy.tensorflow.Pr"
      "ofileRequest.ToolOptionsEntry\0222\n\004opts\030\004 "
      "\001(\0132$.diplomacy.tensorflow.ProfileOption"
      "s\022\027\n\017repository_root\030\005 \001(\t\022\022\n\nsession_id"
      "\030\006 \001(\t\022\021\n\thost_name\030\007 \001(\t\032\\\n\020ToolOptions"
      "Entry\022\013\n\003key\030\001 \001(\t\0227\n\005value\030\002 \001(\0132(.dipl"
      "omacy.tensorflow.ToolRequestOptions:\0028\001\""
      "-\n\017ProfileToolData\022\014\n\004name\030\001 \001(\t\022\014\n\004data"
      "\030\002 \001(\014\"\263\002\n\017ProfileResponse\0229\n\021computatio"
      "n_graph\030\002 \003(\0132\036.diplomacy.tensorflow.Gra"
      "phDef\0227\n\014hlo_metadata\030\005 \001(\0132!.diplomacy."
      "tensorflow.RunMetadata\022\025\n\rencoded_trace\030"
      "\003 \001(\014\022@\n\nop_profile\030\004 \001(\0132,.diplomacy.te"
      "nsorflow.tpu.op_profile.Profile\0228\n\ttool_"
      "data\030\006 \003(\0132%.diplomacy.tensorflow.Profil"
      "eToolData\022\023\n\013empty_trace\030\007 \001(\010J\004\010\001\020\002\"\?\n\016"
      "MonitorRequest\022\023\n\013duration_ms\030\001 \001(\004\022\030\n\020m"
      "onitoring_level\030\002 \001(\005\"\037\n\017MonitorResponse"
      "\022\014\n\004data\030\001 \001(\t2\301\001\n\013TPUProfiler\022X\n\007Profil"
      "e\022$.diplomacy.tensorflow.ProfileRequest\032"
      "%.diplomacy.tensorflow.ProfileResponse\"\000"
      "\022X\n\007Monitor\022$.diplomacy.tensorflow.Monit"
      "orRequest\032%.diplomacy.tensorflow.Monitor"
      "Response\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1378);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/contrib/tpu/profiler/tpu_profiler.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2fop_5fprofile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto
namespace diplomacy {
namespace tensorflow {

// ===================================================================

void ProfileOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileOptions::kIncludeDatasetOpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileOptions::ProfileOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileOptions)
}
ProfileOptions::ProfileOptions(const ProfileOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  include_dataset_ops_ = from.include_dataset_ops_;
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileOptions)
}

void ProfileOptions::SharedCtor() {
  include_dataset_ops_ = false;
}

ProfileOptions::~ProfileOptions() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileOptions)
  SharedDtor();
}

void ProfileOptions::SharedDtor() {
}

void ProfileOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileOptions::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileOptions& ProfileOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileOptions.base);
  return *internal_default_instance();
}


void ProfileOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  include_dataset_ops_ = false;
  _internal_metadata_.Clear();
}

bool ProfileOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool include_dataset_ops = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_dataset_ops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileOptions)
  return false;
#undef DO_
}

void ProfileOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool include_dataset_ops = 1;
  if (this->include_dataset_ops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->include_dataset_ops(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileOptions)
}

::google::protobuf::uint8* ProfileOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool include_dataset_ops = 1;
  if (this->include_dataset_ops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->include_dataset_ops(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileOptions)
  return target;
}

size_t ProfileOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool include_dataset_ops = 1;
  if (this->include_dataset_ops() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileOptions)
    MergeFrom(*source);
  }
}

void ProfileOptions::MergeFrom(const ProfileOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.include_dataset_ops() != 0) {
    set_include_dataset_ops(from.include_dataset_ops());
  }
}

void ProfileOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileOptions::CopyFrom(const ProfileOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileOptions::IsInitialized() const {
  return true;
}

void ProfileOptions::Swap(ProfileOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileOptions::InternalSwap(ProfileOptions* other) {
  using std::swap;
  swap(include_dataset_ops_, other->include_dataset_ops_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileOptions::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToolRequestOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToolRequestOptions::kOutputFormatsFieldNumber;
const int ToolRequestOptions::kSaveToRepoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToolRequestOptions::ToolRequestOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ToolRequestOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ToolRequestOptions)
}
ToolRequestOptions::ToolRequestOptions(const ToolRequestOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_formats_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_formats().size() > 0) {
    output_formats_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_formats_);
  }
  save_to_repo_ = from.save_to_repo_;
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ToolRequestOptions)
}

void ToolRequestOptions::SharedCtor() {
  output_formats_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_to_repo_ = false;
}

ToolRequestOptions::~ToolRequestOptions() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ToolRequestOptions)
  SharedDtor();
}

void ToolRequestOptions::SharedDtor() {
  output_formats_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ToolRequestOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToolRequestOptions::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToolRequestOptions& ToolRequestOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ToolRequestOptions.base);
  return *internal_default_instance();
}


void ToolRequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ToolRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_formats_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_to_repo_ = false;
  _internal_metadata_.Clear();
}

bool ToolRequestOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ToolRequestOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string output_formats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_formats()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_formats().data(), static_cast<int>(this->output_formats().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ToolRequestOptions.output_formats"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool save_to_repo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &save_to_repo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ToolRequestOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ToolRequestOptions)
  return false;
#undef DO_
}

void ToolRequestOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ToolRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_formats = 2;
  if (this->output_formats().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_formats().data(), static_cast<int>(this->output_formats().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ToolRequestOptions.output_formats");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->output_formats(), output);
  }

  // bool save_to_repo = 3;
  if (this->save_to_repo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->save_to_repo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ToolRequestOptions)
}

::google::protobuf::uint8* ToolRequestOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ToolRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_formats = 2;
  if (this->output_formats().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_formats().data(), static_cast<int>(this->output_formats().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ToolRequestOptions.output_formats");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->output_formats(), target);
  }

  // bool save_to_repo = 3;
  if (this->save_to_repo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->save_to_repo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ToolRequestOptions)
  return target;
}

size_t ToolRequestOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ToolRequestOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string output_formats = 2;
  if (this->output_formats().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_formats());
  }

  // bool save_to_repo = 3;
  if (this->save_to_repo() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToolRequestOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ToolRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ToolRequestOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToolRequestOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ToolRequestOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ToolRequestOptions)
    MergeFrom(*source);
  }
}

void ToolRequestOptions::MergeFrom(const ToolRequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ToolRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_formats().size() > 0) {

    output_formats_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_formats_);
  }
  if (from.save_to_repo() != 0) {
    set_save_to_repo(from.save_to_repo());
  }
}

void ToolRequestOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ToolRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToolRequestOptions::CopyFrom(const ToolRequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ToolRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolRequestOptions::IsInitialized() const {
  return true;
}

void ToolRequestOptions::Swap(ToolRequestOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToolRequestOptions::InternalSwap(ToolRequestOptions* other) {
  using std::swap;
  output_formats_.Swap(&other->output_formats_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(save_to_repo_, other->save_to_repo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToolRequestOptions::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ProfileRequest_ToolOptionsEntry_DoNotUse::ProfileRequest_ToolOptionsEntry_DoNotUse() {}
ProfileRequest_ToolOptionsEntry_DoNotUse::ProfileRequest_ToolOptionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ProfileRequest_ToolOptionsEntry_DoNotUse::MergeFrom(const ProfileRequest_ToolOptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ProfileRequest_ToolOptionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[2];
}
void ProfileRequest_ToolOptionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ProfileRequest::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::_ProfileRequest_default_instance_._instance.get_mutable()->opts_ = const_cast< ::diplomacy::tensorflow::ProfileOptions*>(
      ::diplomacy::tensorflow::ProfileOptions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileRequest::kDurationMsFieldNumber;
const int ProfileRequest::kMaxEventsFieldNumber;
const int ProfileRequest::kToolsFieldNumber;
const int ProfileRequest::kToolOptionsFieldNumber;
const int ProfileRequest::kOptsFieldNumber;
const int ProfileRequest::kRepositoryRootFieldNumber;
const int ProfileRequest::kSessionIdFieldNumber;
const int ProfileRequest::kHostNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileRequest::ProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileRequest)
}
ProfileRequest::ProfileRequest(const ProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tools_(from.tools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tool_options_.MergeFrom(from.tool_options_);
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repository_root().size() > 0) {
    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_name().size() > 0) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  if (from.has_opts()) {
    opts_ = new ::diplomacy::tensorflow::ProfileOptions(*from.opts_);
  } else {
    opts_ = NULL;
  }
  ::memcpy(&duration_ms_, &from.duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_events_) -
    reinterpret_cast<char*>(&duration_ms_)) + sizeof(max_events_));
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileRequest)
}

void ProfileRequest::SharedCtor() {
  repository_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_events_) -
      reinterpret_cast<char*>(&opts_)) + sizeof(max_events_));
}

ProfileRequest::~ProfileRequest() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileRequest)
  SharedDtor();
}

void ProfileRequest::SharedDtor() {
  repository_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete opts_;
}

void ProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileRequest& ProfileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileRequest.base);
  return *internal_default_instance();
}


void ProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tools_.Clear();
  tool_options_.Clear();
  repository_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && opts_ != NULL) {
    delete opts_;
  }
  opts_ = NULL;
  ::memset(&duration_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_events_) -
      reinterpret_cast<char*>(&duration_ms_)) + sizeof(max_events_));
  _internal_metadata_.Clear();
}

bool ProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 duration_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 max_events = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_events_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tools = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tools()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tools(this->tools_size() - 1).data(),
            static_cast<int>(this->tools(this->tools_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileRequest.tools"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.ProfileOptions opts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repository_root = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_root().data(), static_cast<int>(this->repository_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileRequest.repository_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileRequest.host_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .diplomacy.tensorflow.ToolRequestOptions> tool_options = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ProfileRequest_ToolOptionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ProfileRequest_ToolOptionsEntry_DoNotUse,
              ::std::string, ::diplomacy::tensorflow::ToolRequestOptions,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions > > parser(&tool_options_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileRequest.ToolOptionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileRequest)
  return false;
#undef DO_
}

void ProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->duration_ms(), output);
  }

  // uint64 max_events = 2;
  if (this->max_events() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_events(), output);
  }

  // repeated string tools = 3;
  for (int i = 0, n = this->tools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tools(i).data(), static_cast<int>(this->tools(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.tools");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tools(i), output);
  }

  // .diplomacy.tensorflow.ProfileOptions opts = 4;
  if (this->has_opts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_opts(), output);
  }

  // string repository_root = 5;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.repository_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->repository_root(), output);
  }

  // string session_id = 6;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->session_id(), output);
  }

  // string host_name = 7;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->host_name(), output);
  }

  // map<string, .diplomacy.tensorflow.ToolRequestOptions> tool_options = 8;
  if (!this->tool_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileRequest.ToolOptionsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tool_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tool_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_iterator
          it = this->tool_options().begin();
          it != this->tool_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ProfileRequest_ToolOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tool_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ProfileRequest_ToolOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_iterator
          it = this->tool_options().begin();
          it != this->tool_options().end(); ++it) {
        entry.reset(tool_options_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileRequest)
}

::google::protobuf::uint8* ProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->duration_ms(), target);
  }

  // uint64 max_events = 2;
  if (this->max_events() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_events(), target);
  }

  // repeated string tools = 3;
  for (int i = 0, n = this->tools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tools(i).data(), static_cast<int>(this->tools(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.tools");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->tools(i), target);
  }

  // .diplomacy.tensorflow.ProfileOptions opts = 4;
  if (this->has_opts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_opts(), deterministic, target);
  }

  // string repository_root = 5;
  if (this->repository_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_root().data(), static_cast<int>(this->repository_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.repository_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->repository_root(), target);
  }

  // string session_id = 6;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->session_id(), target);
  }

  // string host_name = 7;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileRequest.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->host_name(), target);
  }

  // map<string, .diplomacy.tensorflow.ToolRequestOptions> tool_options = 8;
  if (!this->tool_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.ProfileRequest.ToolOptionsEntry.key");
      }
    };

    if (deterministic &&
        this->tool_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tool_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_iterator
          it = this->tool_options().begin();
          it != this->tool_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ProfileRequest_ToolOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tool_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ProfileRequest_ToolOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_iterator
          it = this->tool_options().begin();
          it != this->tool_options().end(); ++it) {
        entry.reset(tool_options_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileRequest)
  return target;
}

size_t ProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string tools = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tools_size());
  for (int i = 0, n = this->tools_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tools(i));
  }

  // map<string, .diplomacy.tensorflow.ToolRequestOptions> tool_options = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tool_options_size());
  {
    ::std::unique_ptr<ProfileRequest_ToolOptionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::ToolRequestOptions >::const_iterator
        it = this->tool_options().begin();
        it != this->tool_options().end(); ++it) {
      entry.reset(tool_options_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string repository_root = 5;
  if (this->repository_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_root());
  }

  // string session_id = 6;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string host_name = 7;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  // .diplomacy.tensorflow.ProfileOptions opts = 4;
  if (this->has_opts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opts_);
  }

  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration_ms());
  }

  // uint64 max_events = 2;
  if (this->max_events() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_events());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileRequest)
    MergeFrom(*source);
  }
}

void ProfileRequest::MergeFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tools_.MergeFrom(from.tools_);
  tool_options_.MergeFrom(from.tool_options_);
  if (from.repository_root().size() > 0) {

    repository_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_root_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.host_name().size() > 0) {

    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  if (from.has_opts()) {
    mutable_opts()->::diplomacy::tensorflow::ProfileOptions::MergeFrom(from.opts());
  }
  if (from.duration_ms() != 0) {
    set_duration_ms(from.duration_ms());
  }
  if (from.max_events() != 0) {
    set_max_events(from.max_events());
  }
}

void ProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileRequest::CopyFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileRequest::IsInitialized() const {
  return true;
}

void ProfileRequest::Swap(ProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileRequest::InternalSwap(ProfileRequest* other) {
  using std::swap;
  tools_.InternalSwap(CastToBase(&other->tools_));
  tool_options_.Swap(&other->tool_options_);
  repository_root_.Swap(&other->repository_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(opts_, other->opts_);
  swap(duration_ms_, other->duration_ms_);
  swap(max_events_, other->max_events_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileToolData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileToolData::kNameFieldNumber;
const int ProfileToolData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileToolData::ProfileToolData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileToolData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileToolData)
}
ProfileToolData::ProfileToolData(const ProfileToolData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileToolData)
}

void ProfileToolData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProfileToolData::~ProfileToolData() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileToolData)
  SharedDtor();
}

void ProfileToolData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProfileToolData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileToolData::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileToolData& ProfileToolData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileToolData.base);
  return *internal_default_instance();
}


void ProfileToolData::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileToolData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProfileToolData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileToolData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.ProfileToolData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileToolData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileToolData)
  return false;
#undef DO_
}

void ProfileToolData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileToolData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileToolData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileToolData)
}

::google::protobuf::uint8* ProfileToolData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileToolData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.ProfileToolData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileToolData)
  return target;
}

size_t ProfileToolData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileToolData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileToolData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileToolData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileToolData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileToolData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileToolData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileToolData)
    MergeFrom(*source);
  }
}

void ProfileToolData::MergeFrom(const ProfileToolData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileToolData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ProfileToolData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileToolData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileToolData::CopyFrom(const ProfileToolData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileToolData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileToolData::IsInitialized() const {
  return true;
}

void ProfileToolData::Swap(ProfileToolData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileToolData::InternalSwap(ProfileToolData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileToolData::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileResponse::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::_ProfileResponse_default_instance_._instance.get_mutable()->hlo_metadata_ = const_cast< ::diplomacy::tensorflow::RunMetadata*>(
      ::diplomacy::tensorflow::RunMetadata::internal_default_instance());
  ::diplomacy::tensorflow::_ProfileResponse_default_instance_._instance.get_mutable()->op_profile_ = const_cast< ::diplomacy::tensorflow::tpu::op_profile::Profile*>(
      ::diplomacy::tensorflow::tpu::op_profile::Profile::internal_default_instance());
}
void ProfileResponse::clear_computation_graph() {
  computation_graph_.Clear();
}
void ProfileResponse::clear_hlo_metadata() {
  if (GetArenaNoVirtual() == NULL && hlo_metadata_ != NULL) {
    delete hlo_metadata_;
  }
  hlo_metadata_ = NULL;
}
void ProfileResponse::clear_op_profile() {
  if (GetArenaNoVirtual() == NULL && op_profile_ != NULL) {
    delete op_profile_;
  }
  op_profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileResponse::kComputationGraphFieldNumber;
const int ProfileResponse::kHloMetadataFieldNumber;
const int ProfileResponse::kEncodedTraceFieldNumber;
const int ProfileResponse::kOpProfileFieldNumber;
const int ProfileResponse::kToolDataFieldNumber;
const int ProfileResponse::kEmptyTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileResponse::ProfileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.ProfileResponse)
}
ProfileResponse::ProfileResponse(const ProfileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      computation_graph_(from.computation_graph_),
      tool_data_(from.tool_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encoded_trace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encoded_trace().size() > 0) {
    encoded_trace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoded_trace_);
  }
  if (from.has_op_profile()) {
    op_profile_ = new ::diplomacy::tensorflow::tpu::op_profile::Profile(*from.op_profile_);
  } else {
    op_profile_ = NULL;
  }
  if (from.has_hlo_metadata()) {
    hlo_metadata_ = new ::diplomacy::tensorflow::RunMetadata(*from.hlo_metadata_);
  } else {
    hlo_metadata_ = NULL;
  }
  empty_trace_ = from.empty_trace_;
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.ProfileResponse)
}

void ProfileResponse::SharedCtor() {
  encoded_trace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_profile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&empty_trace_) -
      reinterpret_cast<char*>(&op_profile_)) + sizeof(empty_trace_));
}

ProfileResponse::~ProfileResponse() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.ProfileResponse)
  SharedDtor();
}

void ProfileResponse::SharedDtor() {
  encoded_trace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete op_profile_;
  if (this != internal_default_instance()) delete hlo_metadata_;
}

void ProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileResponse& ProfileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_ProfileResponse.base);
  return *internal_default_instance();
}


void ProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computation_graph_.Clear();
  tool_data_.Clear();
  encoded_trace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && op_profile_ != NULL) {
    delete op_profile_;
  }
  op_profile_ = NULL;
  if (GetArenaNoVirtual() == NULL && hlo_metadata_ != NULL) {
    delete hlo_metadata_;
  }
  hlo_metadata_ = NULL;
  empty_trace_ = false;
  _internal_metadata_.Clear();
}

bool ProfileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.ProfileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .diplomacy.tensorflow.GraphDef computation_graph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_computation_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes encoded_trace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encoded_trace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.tpu.op_profile.Profile op_profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.RunMetadata hlo_metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .diplomacy.tensorflow.ProfileToolData tool_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tool_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool empty_trace = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &empty_trace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.ProfileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.ProfileResponse)
  return false;
#undef DO_
}

void ProfileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .diplomacy.tensorflow.GraphDef computation_graph = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_graph_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->computation_graph(static_cast<int>(i)),
      output);
  }

  // bytes encoded_trace = 3;
  if (this->encoded_trace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->encoded_trace(), output);
  }

  // .diplomacy.tensorflow.tpu.op_profile.Profile op_profile = 4;
  if (this->has_op_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_op_profile(), output);
  }

  // .diplomacy.tensorflow.RunMetadata hlo_metadata = 5;
  if (this->has_hlo_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hlo_metadata(), output);
  }

  // repeated .diplomacy.tensorflow.ProfileToolData tool_data = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tool_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->tool_data(static_cast<int>(i)),
      output);
  }

  // bool empty_trace = 7;
  if (this->empty_trace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->empty_trace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.ProfileResponse)
}

::google::protobuf::uint8* ProfileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .diplomacy.tensorflow.GraphDef computation_graph = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_graph_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->computation_graph(static_cast<int>(i)), deterministic, target);
  }

  // bytes encoded_trace = 3;
  if (this->encoded_trace().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->encoded_trace(), target);
  }

  // .diplomacy.tensorflow.tpu.op_profile.Profile op_profile = 4;
  if (this->has_op_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_op_profile(), deterministic, target);
  }

  // .diplomacy.tensorflow.RunMetadata hlo_metadata = 5;
  if (this->has_hlo_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hlo_metadata(), deterministic, target);
  }

  // repeated .diplomacy.tensorflow.ProfileToolData tool_data = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tool_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->tool_data(static_cast<int>(i)), deterministic, target);
  }

  // bool empty_trace = 7;
  if (this->empty_trace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->empty_trace(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.ProfileResponse)
  return target;
}

size_t ProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.ProfileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .diplomacy.tensorflow.GraphDef computation_graph = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->computation_graph_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computation_graph(static_cast<int>(i)));
    }
  }

  // repeated .diplomacy.tensorflow.ProfileToolData tool_data = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->tool_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tool_data(static_cast<int>(i)));
    }
  }

  // bytes encoded_trace = 3;
  if (this->encoded_trace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->encoded_trace());
  }

  // .diplomacy.tensorflow.tpu.op_profile.Profile op_profile = 4;
  if (this->has_op_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *op_profile_);
  }

  // .diplomacy.tensorflow.RunMetadata hlo_metadata = 5;
  if (this->has_hlo_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_metadata_);
  }

  // bool empty_trace = 7;
  if (this->empty_trace() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.ProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.ProfileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.ProfileResponse)
    MergeFrom(*source);
  }
}

void ProfileResponse::MergeFrom(const ProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.ProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  computation_graph_.MergeFrom(from.computation_graph_);
  tool_data_.MergeFrom(from.tool_data_);
  if (from.encoded_trace().size() > 0) {

    encoded_trace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoded_trace_);
  }
  if (from.has_op_profile()) {
    mutable_op_profile()->::diplomacy::tensorflow::tpu::op_profile::Profile::MergeFrom(from.op_profile());
  }
  if (from.has_hlo_metadata()) {
    mutable_hlo_metadata()->::diplomacy::tensorflow::RunMetadata::MergeFrom(from.hlo_metadata());
  }
  if (from.empty_trace() != 0) {
    set_empty_trace(from.empty_trace());
  }
}

void ProfileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.ProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileResponse::CopyFrom(const ProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.ProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileResponse::IsInitialized() const {
  return true;
}

void ProfileResponse::Swap(ProfileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileResponse::InternalSwap(ProfileResponse* other) {
  using std::swap;
  CastToBase(&computation_graph_)->InternalSwap(CastToBase(&other->computation_graph_));
  CastToBase(&tool_data_)->InternalSwap(CastToBase(&other->tool_data_));
  encoded_trace_.Swap(&other->encoded_trace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_profile_, other->op_profile_);
  swap(hlo_metadata_, other->hlo_metadata_);
  swap(empty_trace_, other->empty_trace_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorRequest::kDurationMsFieldNumber;
const int MonitorRequest::kMonitoringLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorRequest::MonitorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_MonitorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.MonitorRequest)
}
MonitorRequest::MonitorRequest(const MonitorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duration_ms_, &from.duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&monitoring_level_) -
    reinterpret_cast<char*>(&duration_ms_)) + sizeof(monitoring_level_));
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.MonitorRequest)
}

void MonitorRequest::SharedCtor() {
  ::memset(&duration_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monitoring_level_) -
      reinterpret_cast<char*>(&duration_ms_)) + sizeof(monitoring_level_));
}

MonitorRequest::~MonitorRequest() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.MonitorRequest)
  SharedDtor();
}

void MonitorRequest::SharedDtor() {
}

void MonitorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonitorRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorRequest& MonitorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_MonitorRequest.base);
  return *internal_default_instance();
}


void MonitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.MonitorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&duration_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monitoring_level_) -
      reinterpret_cast<char*>(&duration_ms_)) + sizeof(monitoring_level_));
  _internal_metadata_.Clear();
}

bool MonitorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.MonitorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 duration_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 monitoring_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monitoring_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.MonitorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.MonitorRequest)
  return false;
#undef DO_
}

void MonitorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.MonitorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->duration_ms(), output);
  }

  // int32 monitoring_level = 2;
  if (this->monitoring_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->monitoring_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.MonitorRequest)
}

::google::protobuf::uint8* MonitorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.MonitorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->duration_ms(), target);
  }

  // int32 monitoring_level = 2;
  if (this->monitoring_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->monitoring_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.MonitorRequest)
  return target;
}

size_t MonitorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.MonitorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 duration_ms = 1;
  if (this->duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration_ms());
  }

  // int32 monitoring_level = 2;
  if (this->monitoring_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->monitoring_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.MonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.MonitorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.MonitorRequest)
    MergeFrom(*source);
  }
}

void MonitorRequest::MergeFrom(const MonitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.MonitorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.duration_ms() != 0) {
    set_duration_ms(from.duration_ms());
  }
  if (from.monitoring_level() != 0) {
    set_monitoring_level(from.monitoring_level());
  }
}

void MonitorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.MonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorRequest::CopyFrom(const MonitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.MonitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorRequest::IsInitialized() const {
  return true;
}

void MonitorRequest::Swap(MonitorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorRequest::InternalSwap(MonitorRequest* other) {
  using std::swap;
  swap(duration_ms_, other->duration_ms_);
  swap(monitoring_level_, other->monitoring_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonitorRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorResponse::MonitorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_MonitorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.MonitorResponse)
}
MonitorResponse::MonitorResponse(const MonitorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.MonitorResponse)
}

void MonitorResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MonitorResponse::~MonitorResponse() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.MonitorResponse)
  SharedDtor();
}

void MonitorResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonitorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonitorResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorResponse& MonitorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::scc_info_MonitorResponse.base);
  return *internal_default_instance();
}


void MonitorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.MonitorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MonitorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.MonitorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.MonitorResponse.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.MonitorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.MonitorResponse)
  return false;
#undef DO_
}

void MonitorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.MonitorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.MonitorResponse.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.MonitorResponse)
}

::google::protobuf::uint8* MonitorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.MonitorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.MonitorResponse.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.MonitorResponse)
  return target;
}

size_t MonitorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.MonitorResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.MonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.MonitorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.MonitorResponse)
    MergeFrom(*source);
  }
}

void MonitorResponse::MergeFrom(const MonitorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.MonitorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MonitorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.MonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorResponse::CopyFrom(const MonitorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.MonitorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorResponse::IsInitialized() const {
  return true;
}

void MonitorResponse::Swap(MonitorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorResponse::InternalSwap(MonitorResponse* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonitorResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftpu_2fprofiler_2ftpu_5fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileOptions* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileOptions >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ToolRequestOptions* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ToolRequestOptions >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ToolRequestOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileRequest_ToolOptionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileRequest* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileToolData* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileToolData >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileToolData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::ProfileResponse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::ProfileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::ProfileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::MonitorRequest* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::MonitorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::MonitorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::MonitorResponse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::MonitorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::MonitorResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
