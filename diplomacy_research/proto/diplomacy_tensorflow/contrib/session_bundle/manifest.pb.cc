// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/contrib/session_bundle/manifest.proto

#include "diplomacy_tensorflow/contrib/session_bundle/manifest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TensorBinding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClassificationSignature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GenericSignature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GenericSignature_MapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegressionSignature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Signatures_NamedSignaturesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Signature;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto
namespace diplomacy {
namespace tensorflow {
namespace serving {
class Signatures_NamedSignaturesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signatures_NamedSignaturesEntry_DoNotUse>
      _instance;
} _Signatures_NamedSignaturesEntry_DoNotUse_default_instance_;
class SignaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signatures>
      _instance;
} _Signatures_default_instance_;
class TensorBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TensorBinding>
      _instance;
} _TensorBinding_default_instance_;
class AssetFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetFile>
      _instance;
} _AssetFile_default_instance_;
class SignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signature>
      _instance;
  const ::diplomacy::tensorflow::serving::RegressionSignature* regression_signature_;
  const ::diplomacy::tensorflow::serving::ClassificationSignature* classification_signature_;
  const ::diplomacy::tensorflow::serving::GenericSignature* generic_signature_;
} _Signature_default_instance_;
class RegressionSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegressionSignature>
      _instance;
} _RegressionSignature_default_instance_;
class ClassificationSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassificationSignature>
      _instance;
} _ClassificationSignature_default_instance_;
class GenericSignature_MapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericSignature_MapEntry_DoNotUse>
      _instance;
} _GenericSignature_MapEntry_DoNotUse_default_instance_;
class GenericSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericSignature>
      _instance;
} _GenericSignature_default_instance_;
}  // namespace serving
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto {
static void InitDefaultsSignatures_NamedSignaturesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_Signatures_NamedSignaturesEntry_DoNotUse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse();
  }
  ::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Signatures_NamedSignaturesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignatures_NamedSignaturesEntry_DoNotUse}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signature.base,}};

static void InitDefaultsSignatures() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_Signatures_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::Signatures();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::Signatures::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Signatures =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSignatures}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signature.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signatures_NamedSignaturesEntry_DoNotUse.base,}};

static void InitDefaultsTensorBinding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_TensorBinding_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::TensorBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::TensorBinding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TensorBinding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTensorBinding}, {}};

static void InitDefaultsAssetFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_AssetFile_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::AssetFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::AssetFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssetFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssetFile}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base,}};

static void InitDefaultsSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_Signature_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::Signature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::Signature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Signature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSignature}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_RegressionSignature.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_ClassificationSignature.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_GenericSignature.base,}};

static void InitDefaultsRegressionSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_RegressionSignature_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::RegressionSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::RegressionSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegressionSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegressionSignature}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base,}};

static void InitDefaultsClassificationSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_ClassificationSignature_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::ClassificationSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::ClassificationSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClassificationSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClassificationSignature}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base,}};

static void InitDefaultsGenericSignature_MapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_GenericSignature_MapEntry_DoNotUse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse();
  }
  ::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenericSignature_MapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenericSignature_MapEntry_DoNotUse}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base,}};

static void InitDefaultsGenericSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::serving::_GenericSignature_default_instance_;
    new (ptr) ::diplomacy::tensorflow::serving::GenericSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::serving::GenericSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenericSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenericSignature}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_GenericSignature_MapEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Signatures_NamedSignaturesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Signatures.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TensorBinding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssetFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Signature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegressionSignature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClassificationSignature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericSignature_MapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericSignature.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures, default_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signatures, named_signatures_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::TensorBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::TensorBinding, tensor_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::AssetFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::AssetFile, tensor_binding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::AssetFile, filename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signature, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signature, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::diplomacy::tensorflow::serving::SignatureDefaultTypeInternal, regression_signature_),
  offsetof(::diplomacy::tensorflow::serving::SignatureDefaultTypeInternal, classification_signature_),
  offsetof(::diplomacy::tensorflow::serving::SignatureDefaultTypeInternal, generic_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::Signature, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::RegressionSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::RegressionSignature, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::RegressionSignature, output_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::ClassificationSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::ClassificationSignature, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::ClassificationSignature, classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::ClassificationSignature, scores_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::serving::GenericSignature, map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse)},
  { 9, -1, sizeof(::diplomacy::tensorflow::serving::Signatures)},
  { 16, -1, sizeof(::diplomacy::tensorflow::serving::TensorBinding)},
  { 22, -1, sizeof(::diplomacy::tensorflow::serving::AssetFile)},
  { 29, -1, sizeof(::diplomacy::tensorflow::serving::Signature)},
  { 38, -1, sizeof(::diplomacy::tensorflow::serving::RegressionSignature)},
  { 45, -1, sizeof(::diplomacy::tensorflow::serving::ClassificationSignature)},
  { 53, 60, sizeof(::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse)},
  { 62, -1, sizeof(::diplomacy::tensorflow::serving::GenericSignature)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_Signatures_NamedSignaturesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_Signatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_TensorBinding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_AssetFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_Signature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_RegressionSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_ClassificationSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_GenericSignature_MapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::serving::_GenericSignature_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/contrib/session_bundle/manifest.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n:diplomacy_tensorflow/contrib/session_b"
      "undle/manifest.proto\022\034diplomacy.tensorfl"
      "ow.serving\"\212\002\n\nSignatures\022B\n\021default_sig"
      "nature\030\001 \001(\0132\'.diplomacy.tensorflow.serv"
      "ing.Signature\022W\n\020named_signatures\030\002 \003(\0132"
      "=.diplomacy.tensorflow.serving.Signature"
      "s.NamedSignaturesEntry\032_\n\024NamedSignature"
      "sEntry\022\013\n\003key\030\001 \001(\t\0226\n\005value\030\002 \001(\0132\'.dip"
      "lomacy.tensorflow.serving.Signature:\0028\001\""
      "$\n\rTensorBinding\022\023\n\013tensor_name\030\001 \001(\t\"b\n"
      "\tAssetFile\022C\n\016tensor_binding\030\001 \001(\0132+.dip"
      "lomacy.tensorflow.serving.TensorBinding\022"
      "\020\n\010filename\030\002 \001(\t\"\216\002\n\tSignature\022Q\n\024regre"
      "ssion_signature\030\001 \001(\01321.diplomacy.tensor"
      "flow.serving.RegressionSignatureH\000\022Y\n\030cl"
      "assification_signature\030\002 \001(\01325.diplomacy"
      ".tensorflow.serving.ClassificationSignat"
      "ureH\000\022K\n\021generic_signature\030\003 \001(\0132..diplo"
      "macy.tensorflow.serving.GenericSignature"
      "H\000B\006\n\004type\"\216\001\n\023RegressionSignature\022:\n\005in"
      "put\030\001 \001(\0132+.diplomacy.tensorflow.serving"
      ".TensorBinding\022;\n\006output\030\002 \001(\0132+.diploma"
      "cy.tensorflow.serving.TensorBinding\"\320\001\n\027"
      "ClassificationSignature\022:\n\005input\030\001 \001(\0132+"
      ".diplomacy.tensorflow.serving.TensorBind"
      "ing\022<\n\007classes\030\002 \001(\0132+.diplomacy.tensorf"
      "low.serving.TensorBinding\022;\n\006scores\030\003 \001("
      "\0132+.diplomacy.tensorflow.serving.TensorB"
      "inding\"\261\001\n\020GenericSignature\022D\n\003map\030\001 \003(\013"
      "27.diplomacy.tensorflow.serving.GenericS"
      "ignature.MapEntry\032W\n\010MapEntry\022\013\n\003key\030\001 \001"
      "(\t\022:\n\005value\030\002 \001(\0132+.diplomacy.tensorflow"
      ".serving.TensorBinding:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1314);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/contrib/session_bundle/manifest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto
namespace diplomacy {
namespace tensorflow {
namespace serving {

// ===================================================================

Signatures_NamedSignaturesEntry_DoNotUse::Signatures_NamedSignaturesEntry_DoNotUse() {}
Signatures_NamedSignaturesEntry_DoNotUse::Signatures_NamedSignaturesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Signatures_NamedSignaturesEntry_DoNotUse::MergeFrom(const Signatures_NamedSignaturesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Signatures_NamedSignaturesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[0];
}
void Signatures_NamedSignaturesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Signatures::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::serving::_Signatures_default_instance_._instance.get_mutable()->default_signature_ = const_cast< ::diplomacy::tensorflow::serving::Signature*>(
      ::diplomacy::tensorflow::serving::Signature::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signatures::kDefaultSignatureFieldNumber;
const int Signatures::kNamedSignaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signatures::Signatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signatures.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.Signatures)
}
Signatures::Signatures(const Signatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  named_signatures_.MergeFrom(from.named_signatures_);
  if (from.has_default_signature()) {
    default_signature_ = new ::diplomacy::tensorflow::serving::Signature(*from.default_signature_);
  } else {
    default_signature_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.Signatures)
}

void Signatures::SharedCtor() {
  default_signature_ = NULL;
}

Signatures::~Signatures() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.Signatures)
  SharedDtor();
}

void Signatures::SharedDtor() {
  if (this != internal_default_instance()) delete default_signature_;
}

void Signatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signatures::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signatures& Signatures::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signatures.base);
  return *internal_default_instance();
}


void Signatures::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.Signatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  named_signatures_.Clear();
  if (GetArenaNoVirtual() == NULL && default_signature_ != NULL) {
    delete default_signature_;
  }
  default_signature_ = NULL;
  _internal_metadata_.Clear();
}

bool Signatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.Signatures)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.serving.Signature default_signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .diplomacy.tensorflow.serving.Signature> named_signatures = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Signatures_NamedSignaturesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Signatures_NamedSignaturesEntry_DoNotUse,
              ::std::string, ::diplomacy::tensorflow::serving::Signature,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature > > parser(&named_signatures_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.serving.Signatures.NamedSignaturesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.Signatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.Signatures)
  return false;
#undef DO_
}

void Signatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.Signatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.Signature default_signature = 1;
  if (this->has_default_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_default_signature(), output);
  }

  // map<string, .diplomacy.tensorflow.serving.Signature> named_signatures = 2;
  if (!this->named_signatures().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.serving.Signatures.NamedSignaturesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->named_signatures().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->named_signatures().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_iterator
          it = this->named_signatures().begin();
          it != this->named_signatures().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Signatures_NamedSignaturesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(named_signatures_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Signatures_NamedSignaturesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_iterator
          it = this->named_signatures().begin();
          it != this->named_signatures().end(); ++it) {
        entry.reset(named_signatures_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.Signatures)
}

::google::protobuf::uint8* Signatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.Signatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.Signature default_signature = 1;
  if (this->has_default_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_default_signature(), deterministic, target);
  }

  // map<string, .diplomacy.tensorflow.serving.Signature> named_signatures = 2;
  if (!this->named_signatures().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.serving.Signatures.NamedSignaturesEntry.key");
      }
    };

    if (deterministic &&
        this->named_signatures().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->named_signatures().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_iterator
          it = this->named_signatures().begin();
          it != this->named_signatures().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Signatures_NamedSignaturesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(named_signatures_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Signatures_NamedSignaturesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_iterator
          it = this->named_signatures().begin();
          it != this->named_signatures().end(); ++it) {
        entry.reset(named_signatures_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.Signatures)
  return target;
}

size_t Signatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.Signatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .diplomacy.tensorflow.serving.Signature> named_signatures = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->named_signatures_size());
  {
    ::std::unique_ptr<Signatures_NamedSignaturesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::Signature >::const_iterator
        it = this->named_signatures().begin();
        it != this->named_signatures().end(); ++it) {
      entry.reset(named_signatures_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .diplomacy.tensorflow.serving.Signature default_signature = 1;
  if (this->has_default_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *default_signature_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.Signatures)
  GOOGLE_DCHECK_NE(&from, this);
  const Signatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.Signatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.Signatures)
    MergeFrom(*source);
  }
}

void Signatures::MergeFrom(const Signatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.Signatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  named_signatures_.MergeFrom(from.named_signatures_);
  if (from.has_default_signature()) {
    mutable_default_signature()->::diplomacy::tensorflow::serving::Signature::MergeFrom(from.default_signature());
  }
}

void Signatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.Signatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signatures::CopyFrom(const Signatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.Signatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signatures::IsInitialized() const {
  return true;
}

void Signatures::Swap(Signatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signatures::InternalSwap(Signatures* other) {
  using std::swap;
  named_signatures_.Swap(&other->named_signatures_);
  swap(default_signature_, other->default_signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signatures::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TensorBinding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorBinding::kTensorNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorBinding::TensorBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.TensorBinding)
}
TensorBinding::TensorBinding(const TensorBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tensor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tensor_name().size() > 0) {
    tensor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_name_);
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.TensorBinding)
}

void TensorBinding::SharedCtor() {
  tensor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TensorBinding::~TensorBinding() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.TensorBinding)
  SharedDtor();
}

void TensorBinding::SharedDtor() {
  tensor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TensorBinding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TensorBinding::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorBinding& TensorBinding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_TensorBinding.base);
  return *internal_default_instance();
}


void TensorBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.TensorBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TensorBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.TensorBinding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tensor_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tensor_name().data(), static_cast<int>(this->tensor_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.serving.TensorBinding.tensor_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.TensorBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.TensorBinding)
  return false;
#undef DO_
}

void TensorBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.TensorBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_name().data(), static_cast<int>(this->tensor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.serving.TensorBinding.tensor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tensor_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.TensorBinding)
}

::google::protobuf::uint8* TensorBinding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.TensorBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_name().data(), static_cast<int>(this->tensor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.serving.TensorBinding.tensor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tensor_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.TensorBinding)
  return target;
}

size_t TensorBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.TensorBinding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tensor_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.TensorBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorBinding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorBinding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.TensorBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.TensorBinding)
    MergeFrom(*source);
  }
}

void TensorBinding::MergeFrom(const TensorBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.TensorBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tensor_name().size() > 0) {

    tensor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_name_);
  }
}

void TensorBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.TensorBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorBinding::CopyFrom(const TensorBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.TensorBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorBinding::IsInitialized() const {
  return true;
}

void TensorBinding::Swap(TensorBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorBinding::InternalSwap(TensorBinding* other) {
  using std::swap;
  tensor_name_.Swap(&other->tensor_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TensorBinding::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetFile::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::serving::_AssetFile_default_instance_._instance.get_mutable()->tensor_binding_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetFile::kTensorBindingFieldNumber;
const int AssetFile::kFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetFile::AssetFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_AssetFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.AssetFile)
}
AssetFile::AssetFile(const AssetFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.has_tensor_binding()) {
    tensor_binding_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.tensor_binding_);
  } else {
    tensor_binding_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.AssetFile)
}

void AssetFile::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tensor_binding_ = NULL;
}

AssetFile::~AssetFile() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.AssetFile)
  SharedDtor();
}

void AssetFile::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tensor_binding_;
}

void AssetFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssetFile::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetFile& AssetFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_AssetFile.base);
  return *internal_default_instance();
}


void AssetFile::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.AssetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && tensor_binding_ != NULL) {
    delete tensor_binding_;
  }
  tensor_binding_ = NULL;
  _internal_metadata_.Clear();
}

bool AssetFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.AssetFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.serving.TensorBinding tensor_binding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor_binding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.serving.AssetFile.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.AssetFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.AssetFile)
  return false;
#undef DO_
}

void AssetFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.AssetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding tensor_binding = 1;
  if (this->has_tensor_binding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tensor_binding(), output);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.serving.AssetFile.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.AssetFile)
}

::google::protobuf::uint8* AssetFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.AssetFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding tensor_binding = 1;
  if (this->has_tensor_binding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tensor_binding(), deterministic, target);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "diplomacy.tensorflow.serving.AssetFile.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.AssetFile)
  return target;
}

size_t AssetFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.AssetFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filename = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // .diplomacy.tensorflow.serving.TensorBinding tensor_binding = 1;
  if (this->has_tensor_binding()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_binding_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssetFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.AssetFile)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.AssetFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.AssetFile)
    MergeFrom(*source);
  }
}

void AssetFile::MergeFrom(const AssetFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.AssetFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.has_tensor_binding()) {
    mutable_tensor_binding()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.tensor_binding());
  }
}

void AssetFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.AssetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetFile::CopyFrom(const AssetFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.AssetFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetFile::IsInitialized() const {
  return true;
}

void AssetFile::Swap(AssetFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetFile::InternalSwap(AssetFile* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tensor_binding_, other->tensor_binding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssetFile::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signature::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::serving::_Signature_default_instance_.regression_signature_ = const_cast< ::diplomacy::tensorflow::serving::RegressionSignature*>(
      ::diplomacy::tensorflow::serving::RegressionSignature::internal_default_instance());
  ::diplomacy::tensorflow::serving::_Signature_default_instance_.classification_signature_ = const_cast< ::diplomacy::tensorflow::serving::ClassificationSignature*>(
      ::diplomacy::tensorflow::serving::ClassificationSignature::internal_default_instance());
  ::diplomacy::tensorflow::serving::_Signature_default_instance_.generic_signature_ = const_cast< ::diplomacy::tensorflow::serving::GenericSignature*>(
      ::diplomacy::tensorflow::serving::GenericSignature::internal_default_instance());
}
void Signature::set_allocated_regression_signature(::diplomacy::tensorflow::serving::RegressionSignature* regression_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (regression_signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      regression_signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, regression_signature, submessage_arena);
    }
    set_has_regression_signature();
    type_.regression_signature_ = regression_signature;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.serving.Signature.regression_signature)
}
void Signature::set_allocated_classification_signature(::diplomacy::tensorflow::serving::ClassificationSignature* classification_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (classification_signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification_signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification_signature, submessage_arena);
    }
    set_has_classification_signature();
    type_.classification_signature_ = classification_signature;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.serving.Signature.classification_signature)
}
void Signature::set_allocated_generic_signature(::diplomacy::tensorflow::serving::GenericSignature* generic_signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (generic_signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      generic_signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, generic_signature, submessage_arena);
    }
    set_has_generic_signature();
    type_.generic_signature_ = generic_signature;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.serving.Signature.generic_signature)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature::kRegressionSignatureFieldNumber;
const int Signature::kClassificationSignatureFieldNumber;
const int Signature::kGenericSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature::Signature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.Signature)
}
Signature::Signature(const Signature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kRegressionSignature: {
      mutable_regression_signature()->::diplomacy::tensorflow::serving::RegressionSignature::MergeFrom(from.regression_signature());
      break;
    }
    case kClassificationSignature: {
      mutable_classification_signature()->::diplomacy::tensorflow::serving::ClassificationSignature::MergeFrom(from.classification_signature());
      break;
    }
    case kGenericSignature: {
      mutable_generic_signature()->::diplomacy::tensorflow::serving::GenericSignature::MergeFrom(from.generic_signature());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.Signature)
}

void Signature::SharedCtor() {
  clear_has_type();
}

Signature::~Signature() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.Signature)
  SharedDtor();
}

void Signature::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Signature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signature::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signature& Signature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_Signature.base);
  return *internal_default_instance();
}


void Signature::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:diplomacy.tensorflow.serving.Signature)
  switch (type_case()) {
    case kRegressionSignature: {
      delete type_.regression_signature_;
      break;
    }
    case kClassificationSignature: {
      delete type_.classification_signature_;
      break;
    }
    case kGenericSignature: {
      delete type_.generic_signature_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool Signature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.Signature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.serving.RegressionSignature regression_signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_regression_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.serving.ClassificationSignature classification_signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.serving.GenericSignature generic_signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generic_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.Signature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.Signature)
  return false;
#undef DO_
}

void Signature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.RegressionSignature regression_signature = 1;
  if (has_regression_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_regression_signature(), output);
  }

  // .diplomacy.tensorflow.serving.ClassificationSignature classification_signature = 2;
  if (has_classification_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_classification_signature(), output);
  }

  // .diplomacy.tensorflow.serving.GenericSignature generic_signature = 3;
  if (has_generic_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_generic_signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.Signature)
}

::google::protobuf::uint8* Signature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.RegressionSignature regression_signature = 1;
  if (has_regression_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_regression_signature(), deterministic, target);
  }

  // .diplomacy.tensorflow.serving.ClassificationSignature classification_signature = 2;
  if (has_classification_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_classification_signature(), deterministic, target);
  }

  // .diplomacy.tensorflow.serving.GenericSignature generic_signature = 3;
  if (has_generic_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_generic_signature(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.Signature)
  return target;
}

size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.Signature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .diplomacy.tensorflow.serving.RegressionSignature regression_signature = 1;
    case kRegressionSignature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.regression_signature_);
      break;
    }
    // .diplomacy.tensorflow.serving.ClassificationSignature classification_signature = 2;
    case kClassificationSignature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.classification_signature_);
      break;
    }
    // .diplomacy.tensorflow.serving.GenericSignature generic_signature = 3;
    case kGenericSignature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.generic_signature_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  const Signature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.Signature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.Signature)
    MergeFrom(*source);
  }
}

void Signature::MergeFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kRegressionSignature: {
      mutable_regression_signature()->::diplomacy::tensorflow::serving::RegressionSignature::MergeFrom(from.regression_signature());
      break;
    }
    case kClassificationSignature: {
      mutable_classification_signature()->::diplomacy::tensorflow::serving::ClassificationSignature::MergeFrom(from.classification_signature());
      break;
    }
    case kGenericSignature: {
      mutable_generic_signature()->::diplomacy::tensorflow::serving::GenericSignature::MergeFrom(from.generic_signature());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Signature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature::IsInitialized() const {
  return true;
}

void Signature::Swap(Signature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature::InternalSwap(Signature* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegressionSignature::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::serving::_RegressionSignature_default_instance_._instance.get_mutable()->input_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
  ::diplomacy::tensorflow::serving::_RegressionSignature_default_instance_._instance.get_mutable()->output_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegressionSignature::kInputFieldNumber;
const int RegressionSignature::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegressionSignature::RegressionSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_RegressionSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.RegressionSignature)
}
RegressionSignature::RegressionSignature(const RegressionSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_output()) {
    output_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.output_);
  } else {
    output_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.RegressionSignature)
}

void RegressionSignature::SharedCtor() {
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&input_)) + sizeof(output_));
}

RegressionSignature::~RegressionSignature() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.RegressionSignature)
  SharedDtor();
}

void RegressionSignature::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete output_;
}

void RegressionSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegressionSignature::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegressionSignature& RegressionSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_RegressionSignature.base);
  return *internal_default_instance();
}


void RegressionSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.RegressionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
  _internal_metadata_.Clear();
}

bool RegressionSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.RegressionSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.serving.TensorBinding input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.serving.TensorBinding output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.RegressionSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.RegressionSignature)
  return false;
#undef DO_
}

void RegressionSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.RegressionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input(), output);
  }

  // .diplomacy.tensorflow.serving.TensorBinding output = 2;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_output(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.RegressionSignature)
}

::google::protobuf::uint8* RegressionSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.RegressionSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input(), deterministic, target);
  }

  // .diplomacy.tensorflow.serving.TensorBinding output = 2;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_output(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.RegressionSignature)
  return target;
}

size_t RegressionSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.RegressionSignature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .diplomacy.tensorflow.serving.TensorBinding output = 2;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegressionSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.RegressionSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const RegressionSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegressionSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.RegressionSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.RegressionSignature)
    MergeFrom(*source);
  }
}

void RegressionSignature::MergeFrom(const RegressionSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.RegressionSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    mutable_input()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.input());
  }
  if (from.has_output()) {
    mutable_output()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.output());
  }
}

void RegressionSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.RegressionSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegressionSignature::CopyFrom(const RegressionSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.RegressionSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionSignature::IsInitialized() const {
  return true;
}

void RegressionSignature::Swap(RegressionSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegressionSignature::InternalSwap(RegressionSignature* other) {
  using std::swap;
  swap(input_, other->input_);
  swap(output_, other->output_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegressionSignature::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassificationSignature::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::serving::_ClassificationSignature_default_instance_._instance.get_mutable()->input_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
  ::diplomacy::tensorflow::serving::_ClassificationSignature_default_instance_._instance.get_mutable()->classes_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
  ::diplomacy::tensorflow::serving::_ClassificationSignature_default_instance_._instance.get_mutable()->scores_ = const_cast< ::diplomacy::tensorflow::serving::TensorBinding*>(
      ::diplomacy::tensorflow::serving::TensorBinding::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassificationSignature::kInputFieldNumber;
const int ClassificationSignature::kClassesFieldNumber;
const int ClassificationSignature::kScoresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassificationSignature::ClassificationSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_ClassificationSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.ClassificationSignature)
}
ClassificationSignature::ClassificationSignature(const ClassificationSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_classes()) {
    classes_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.classes_);
  } else {
    classes_ = NULL;
  }
  if (from.has_scores()) {
    scores_ = new ::diplomacy::tensorflow::serving::TensorBinding(*from.scores_);
  } else {
    scores_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.ClassificationSignature)
}

void ClassificationSignature::SharedCtor() {
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scores_) -
      reinterpret_cast<char*>(&input_)) + sizeof(scores_));
}

ClassificationSignature::~ClassificationSignature() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.ClassificationSignature)
  SharedDtor();
}

void ClassificationSignature::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete classes_;
  if (this != internal_default_instance()) delete scores_;
}

void ClassificationSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClassificationSignature::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassificationSignature& ClassificationSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_ClassificationSignature.base);
  return *internal_default_instance();
}


void ClassificationSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.ClassificationSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && classes_ != NULL) {
    delete classes_;
  }
  classes_ = NULL;
  if (GetArenaNoVirtual() == NULL && scores_ != NULL) {
    delete scores_;
  }
  scores_ = NULL;
  _internal_metadata_.Clear();
}

bool ClassificationSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.ClassificationSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.serving.TensorBinding input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.serving.TensorBinding classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.serving.TensorBinding scores = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scores()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.ClassificationSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.ClassificationSignature)
  return false;
#undef DO_
}

void ClassificationSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.ClassificationSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input(), output);
  }

  // .diplomacy.tensorflow.serving.TensorBinding classes = 2;
  if (this->has_classes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_classes(), output);
  }

  // .diplomacy.tensorflow.serving.TensorBinding scores = 3;
  if (this->has_scores()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_scores(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.ClassificationSignature)
}

::google::protobuf::uint8* ClassificationSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.ClassificationSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input(), deterministic, target);
  }

  // .diplomacy.tensorflow.serving.TensorBinding classes = 2;
  if (this->has_classes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_classes(), deterministic, target);
  }

  // .diplomacy.tensorflow.serving.TensorBinding scores = 3;
  if (this->has_scores()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_scores(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.ClassificationSignature)
  return target;
}

size_t ClassificationSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.ClassificationSignature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .diplomacy.tensorflow.serving.TensorBinding input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .diplomacy.tensorflow.serving.TensorBinding classes = 2;
  if (this->has_classes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *classes_);
  }

  // .diplomacy.tensorflow.serving.TensorBinding scores = 3;
  if (this->has_scores()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scores_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClassificationSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.ClassificationSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassificationSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassificationSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.ClassificationSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.ClassificationSignature)
    MergeFrom(*source);
  }
}

void ClassificationSignature::MergeFrom(const ClassificationSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.ClassificationSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    mutable_input()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.input());
  }
  if (from.has_classes()) {
    mutable_classes()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.classes());
  }
  if (from.has_scores()) {
    mutable_scores()->::diplomacy::tensorflow::serving::TensorBinding::MergeFrom(from.scores());
  }
}

void ClassificationSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.ClassificationSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassificationSignature::CopyFrom(const ClassificationSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.ClassificationSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassificationSignature::IsInitialized() const {
  return true;
}

void ClassificationSignature::Swap(ClassificationSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassificationSignature::InternalSwap(ClassificationSignature* other) {
  using std::swap;
  swap(input_, other->input_);
  swap(classes_, other->classes_);
  swap(scores_, other->scores_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClassificationSignature::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

GenericSignature_MapEntry_DoNotUse::GenericSignature_MapEntry_DoNotUse() {}
GenericSignature_MapEntry_DoNotUse::GenericSignature_MapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void GenericSignature_MapEntry_DoNotUse::MergeFrom(const GenericSignature_MapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GenericSignature_MapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[7];
}
void GenericSignature_MapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void GenericSignature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericSignature::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericSignature::GenericSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_GenericSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.serving.GenericSignature)
}
GenericSignature::GenericSignature(const GenericSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_.MergeFrom(from.map_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.serving.GenericSignature)
}

void GenericSignature::SharedCtor() {
}

GenericSignature::~GenericSignature() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.serving.GenericSignature)
  SharedDtor();
}

void GenericSignature::SharedDtor() {
}

void GenericSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericSignature::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericSignature& GenericSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::scc_info_GenericSignature.base);
  return *internal_default_instance();
}


void GenericSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.serving.GenericSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.Clear();
  _internal_metadata_.Clear();
}

bool GenericSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.serving.GenericSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .diplomacy.tensorflow.serving.TensorBinding> map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          GenericSignature_MapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GenericSignature_MapEntry_DoNotUse,
              ::std::string, ::diplomacy::tensorflow::serving::TensorBinding,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding > > parser(&map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.serving.GenericSignature.MapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.serving.GenericSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.serving.GenericSignature)
  return false;
#undef DO_
}

void GenericSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.serving.GenericSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .diplomacy.tensorflow.serving.TensorBinding> map = 1;
  if (!this->map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.serving.GenericSignature.MapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenericSignature_MapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<GenericSignature_MapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it) {
        entry.reset(map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.serving.GenericSignature)
}

::google::protobuf::uint8* GenericSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.serving.GenericSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .diplomacy.tensorflow.serving.TensorBinding> map = 1;
  if (!this->map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.serving.GenericSignature.MapEntry.key");
      }
    };

    if (deterministic &&
        this->map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenericSignature_MapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<GenericSignature_MapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_iterator
          it = this->map().begin();
          it != this->map().end(); ++it) {
        entry.reset(map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.serving.GenericSignature)
  return target;
}

size_t GenericSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.serving.GenericSignature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .diplomacy.tensorflow.serving.TensorBinding> map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_size());
  {
    ::std::unique_ptr<GenericSignature_MapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::serving::TensorBinding >::const_iterator
        it = this->map().begin();
        it != this->map().end(); ++it) {
      entry.reset(map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.serving.GenericSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.serving.GenericSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.serving.GenericSignature)
    MergeFrom(*source);
  }
}

void GenericSignature::MergeFrom(const GenericSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.serving.GenericSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_.MergeFrom(from.map_);
}

void GenericSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.serving.GenericSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericSignature::CopyFrom(const GenericSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.serving.GenericSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericSignature::IsInitialized() const {
  return true;
}

void GenericSignature::Swap(GenericSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericSignature::InternalSwap(GenericSignature* other) {
  using std::swap;
  map_.Swap(&other->map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericSignature::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fsession_5fbundle_2fmanifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::Signatures_NamedSignaturesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::Signatures* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::Signatures >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::Signatures >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::TensorBinding* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::TensorBinding >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::TensorBinding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::AssetFile* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::AssetFile >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::AssetFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::Signature* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::Signature >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::Signature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::RegressionSignature* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::RegressionSignature >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::RegressionSignature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::ClassificationSignature* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::ClassificationSignature >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::ClassificationSignature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::GenericSignature_MapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::serving::GenericSignature* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::serving::GenericSignature >(Arena* arena) {
  return Arena::CreateInternal< ::diplomacy::tensorflow::serving::GenericSignature >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
