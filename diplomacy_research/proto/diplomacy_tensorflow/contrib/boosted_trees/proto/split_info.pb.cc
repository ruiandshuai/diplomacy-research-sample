// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/contrib/boosted_trees/proto/split_info.proto

#include "diplomacy_tensorflow/contrib/boosted_trees/proto/split_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Leaf;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_TreeNode;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto
namespace diplomacy {
namespace tensorflow {
namespace boosted_trees {
namespace learner {
class SplitInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SplitInfo>
      _instance;
} _SplitInfo_default_instance_;
class ObliviousSplitInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObliviousSplitInfo>
      _instance;
} _ObliviousSplitInfo_default_instance_;
}  // namespace learner
}  // namespace boosted_trees
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto {
static void InitDefaultsSplitInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::boosted_trees::learner::_SplitInfo_default_instance_;
    new (ptr) ::diplomacy::tensorflow::boosted_trees::learner::SplitInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::boosted_trees::learner::SplitInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SplitInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSplitInfo}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto::scc_info_TreeNode.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto::scc_info_Leaf.base,}};

static void InitDefaultsObliviousSplitInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::boosted_trees::learner::_ObliviousSplitInfo_default_instance_;
    new (ptr) ::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObliviousSplitInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObliviousSplitInfo}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto::scc_info_TreeNode.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto::scc_info_Leaf.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SplitInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObliviousSplitInfo.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::SplitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::SplitInfo, split_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::SplitInfo, left_child_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::SplitInfo, right_child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo, split_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo, children_parent_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::diplomacy::tensorflow::boosted_trees::learner::SplitInfo)},
  { 8, -1, sizeof(::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::boosted_trees::learner::_SplitInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::boosted_trees::learner::_ObliviousSplitInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/contrib/boosted_trees/proto/split_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nAdiplomacy_tensorflow/contrib/boosted_t"
      "rees/proto/split_info.proto\022*diplomacy.t"
      "ensorflow.boosted_trees.learner\032Bdiploma"
      "cy_tensorflow/contrib/boosted_trees/prot"
      "o/tree_config.proto\"\334\001\n\tSplitInfo\022F\n\nspl"
      "it_node\030\001 \001(\01322.diplomacy.tensorflow.boo"
      "sted_trees.trees.TreeNode\022B\n\nleft_child\030"
      "\002 \001(\0132..diplomacy.tensorflow.boosted_tre"
      "es.trees.Leaf\022C\n\013right_child\030\003 \001(\0132..dip"
      "lomacy.tensorflow.boosted_trees.trees.Le"
      "af\"\272\001\n\022ObliviousSplitInfo\022F\n\nsplit_node\030"
      "\001 \001(\01322.diplomacy.tensorflow.boosted_tre"
      "es.trees.TreeNode\022@\n\010children\030\002 \003(\0132..di"
      "plomacy.tensorflow.boosted_trees.trees.L"
      "eaf\022\032\n\022children_parent_id\030\003 \003(\005B\003\370\001\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 604);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/contrib/boosted_trees/proto/split_info.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2ftree_5fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto
namespace diplomacy {
namespace tensorflow {
namespace boosted_trees {
namespace learner {

// ===================================================================

void SplitInfo::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::boosted_trees::learner::_SplitInfo_default_instance_._instance.get_mutable()->split_node_ = const_cast< ::diplomacy::tensorflow::boosted_trees::trees::TreeNode*>(
      ::diplomacy::tensorflow::boosted_trees::trees::TreeNode::internal_default_instance());
  ::diplomacy::tensorflow::boosted_trees::learner::_SplitInfo_default_instance_._instance.get_mutable()->left_child_ = const_cast< ::diplomacy::tensorflow::boosted_trees::trees::Leaf*>(
      ::diplomacy::tensorflow::boosted_trees::trees::Leaf::internal_default_instance());
  ::diplomacy::tensorflow::boosted_trees::learner::_SplitInfo_default_instance_._instance.get_mutable()->right_child_ = const_cast< ::diplomacy::tensorflow::boosted_trees::trees::Leaf*>(
      ::diplomacy::tensorflow::boosted_trees::trees::Leaf::internal_default_instance());
}
void SplitInfo::unsafe_arena_set_allocated_split_node(
    ::diplomacy::tensorflow::boosted_trees::trees::TreeNode* split_node) {
  if (GetArenaNoVirtual() == NULL) {
    delete split_node_;
  }
  split_node_ = split_node;
  if (split_node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.boosted_trees.learner.SplitInfo.split_node)
}
void SplitInfo::clear_split_node() {
  if (GetArenaNoVirtual() == NULL && split_node_ != NULL) {
    delete split_node_;
  }
  split_node_ = NULL;
}
void SplitInfo::unsafe_arena_set_allocated_left_child(
    ::diplomacy::tensorflow::boosted_trees::trees::Leaf* left_child) {
  if (GetArenaNoVirtual() == NULL) {
    delete left_child_;
  }
  left_child_ = left_child;
  if (left_child) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.boosted_trees.learner.SplitInfo.left_child)
}
void SplitInfo::clear_left_child() {
  if (GetArenaNoVirtual() == NULL && left_child_ != NULL) {
    delete left_child_;
  }
  left_child_ = NULL;
}
void SplitInfo::unsafe_arena_set_allocated_right_child(
    ::diplomacy::tensorflow::boosted_trees::trees::Leaf* right_child) {
  if (GetArenaNoVirtual() == NULL) {
    delete right_child_;
  }
  right_child_ = right_child;
  if (right_child) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.boosted_trees.learner.SplitInfo.right_child)
}
void SplitInfo::clear_right_child() {
  if (GetArenaNoVirtual() == NULL && right_child_ != NULL) {
    delete right_child_;
  }
  right_child_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SplitInfo::kSplitNodeFieldNumber;
const int SplitInfo::kLeftChildFieldNumber;
const int SplitInfo::kRightChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SplitInfo::SplitInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_SplitInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
}
SplitInfo::SplitInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_SplitInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
}
SplitInfo::SplitInfo(const SplitInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_split_node()) {
    split_node_ = new ::diplomacy::tensorflow::boosted_trees::trees::TreeNode(*from.split_node_);
  } else {
    split_node_ = NULL;
  }
  if (from.has_left_child()) {
    left_child_ = new ::diplomacy::tensorflow::boosted_trees::trees::Leaf(*from.left_child_);
  } else {
    left_child_ = NULL;
  }
  if (from.has_right_child()) {
    right_child_ = new ::diplomacy::tensorflow::boosted_trees::trees::Leaf(*from.right_child_);
  } else {
    right_child_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
}

void SplitInfo::SharedCtor() {
  ::memset(&split_node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_child_) -
      reinterpret_cast<char*>(&split_node_)) + sizeof(right_child_));
}

SplitInfo::~SplitInfo() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  SharedDtor();
}

void SplitInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete split_node_;
  if (this != internal_default_instance()) delete left_child_;
  if (this != internal_default_instance()) delete right_child_;
}

void SplitInfo::ArenaDtor(void* object) {
  SplitInfo* _this = reinterpret_cast< SplitInfo* >(object);
  (void)_this;
}
void SplitInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SplitInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SplitInfo::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SplitInfo& SplitInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_SplitInfo.base);
  return *internal_default_instance();
}


void SplitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && split_node_ != NULL) {
    delete split_node_;
  }
  split_node_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_child_ != NULL) {
    delete left_child_;
  }
  left_child_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_child_ != NULL) {
    delete right_child_;
  }
  right_child_ = NULL;
  _internal_metadata_.Clear();
}

bool SplitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_split_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.boosted_trees.trees.Leaf left_child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.boosted_trees.trees.Leaf right_child = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  return false;
#undef DO_
}

void SplitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_split_node(), output);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf left_child = 2;
  if (this->has_left_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left_child(), output);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf right_child = 3;
  if (this->has_right_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
}

::google::protobuf::uint8* SplitInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_split_node(), deterministic, target);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf left_child = 2;
  if (this->has_left_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left_child(), deterministic, target);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf right_child = 3;
  if (this->has_right_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  return target;
}

size_t SplitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *split_node_);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf left_child = 2;
  if (this->has_left_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_child_);
  }

  // .diplomacy.tensorflow.boosted_trees.trees.Leaf right_child = 3;
  if (this->has_right_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_child_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SplitInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SplitInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SplitInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
    MergeFrom(*source);
  }
}

void SplitInfo::MergeFrom(const SplitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_split_node()) {
    mutable_split_node()->::diplomacy::tensorflow::boosted_trees::trees::TreeNode::MergeFrom(from.split_node());
  }
  if (from.has_left_child()) {
    mutable_left_child()->::diplomacy::tensorflow::boosted_trees::trees::Leaf::MergeFrom(from.left_child());
  }
  if (from.has_right_child()) {
    mutable_right_child()->::diplomacy::tensorflow::boosted_trees::trees::Leaf::MergeFrom(from.right_child());
  }
}

void SplitInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SplitInfo::CopyFrom(const SplitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.boosted_trees.learner.SplitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SplitInfo::IsInitialized() const {
  return true;
}

void SplitInfo::Swap(SplitInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SplitInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SplitInfo::UnsafeArenaSwap(SplitInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SplitInfo::InternalSwap(SplitInfo* other) {
  using std::swap;
  swap(split_node_, other->split_node_);
  swap(left_child_, other->left_child_);
  swap(right_child_, other->right_child_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SplitInfo::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObliviousSplitInfo::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::boosted_trees::learner::_ObliviousSplitInfo_default_instance_._instance.get_mutable()->split_node_ = const_cast< ::diplomacy::tensorflow::boosted_trees::trees::TreeNode*>(
      ::diplomacy::tensorflow::boosted_trees::trees::TreeNode::internal_default_instance());
}
void ObliviousSplitInfo::unsafe_arena_set_allocated_split_node(
    ::diplomacy::tensorflow::boosted_trees::trees::TreeNode* split_node) {
  if (GetArenaNoVirtual() == NULL) {
    delete split_node_;
  }
  split_node_ = split_node;
  if (split_node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo.split_node)
}
void ObliviousSplitInfo::clear_split_node() {
  if (GetArenaNoVirtual() == NULL && split_node_ != NULL) {
    delete split_node_;
  }
  split_node_ = NULL;
}
void ObliviousSplitInfo::clear_children() {
  children_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObliviousSplitInfo::kSplitNodeFieldNumber;
const int ObliviousSplitInfo::kChildrenFieldNumber;
const int ObliviousSplitInfo::kChildrenParentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObliviousSplitInfo::ObliviousSplitInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_ObliviousSplitInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
}
ObliviousSplitInfo::ObliviousSplitInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  children_(arena),
  children_parent_id_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_ObliviousSplitInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
}
ObliviousSplitInfo::ObliviousSplitInfo(const ObliviousSplitInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_(from.children_),
      children_parent_id_(from.children_parent_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_split_node()) {
    split_node_ = new ::diplomacy::tensorflow::boosted_trees::trees::TreeNode(*from.split_node_);
  } else {
    split_node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
}

void ObliviousSplitInfo::SharedCtor() {
  split_node_ = NULL;
}

ObliviousSplitInfo::~ObliviousSplitInfo() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  SharedDtor();
}

void ObliviousSplitInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete split_node_;
}

void ObliviousSplitInfo::ArenaDtor(void* object) {
  ObliviousSplitInfo* _this = reinterpret_cast< ObliviousSplitInfo* >(object);
  (void)_this;
}
void ObliviousSplitInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObliviousSplitInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObliviousSplitInfo::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObliviousSplitInfo& ObliviousSplitInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::scc_info_ObliviousSplitInfo.base);
  return *internal_default_instance();
}


void ObliviousSplitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  children_parent_id_.Clear();
  if (GetArenaNoVirtual() == NULL && split_node_ != NULL) {
    delete split_node_;
  }
  split_node_ = NULL;
  _internal_metadata_.Clear();
}

bool ObliviousSplitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_split_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .diplomacy.tensorflow.boosted_trees.trees.Leaf children = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 children_parent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_children_parent_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_children_parent_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  return false;
#undef DO_
}

void ObliviousSplitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_split_node(), output);
  }

  // repeated .diplomacy.tensorflow.boosted_trees.trees.Leaf children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->children(static_cast<int>(i)),
      output);
  }

  // repeated int32 children_parent_id = 3;
  if (this->children_parent_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _children_parent_id_cached_byte_size_));
  }
  for (int i = 0, n = this->children_parent_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->children_parent_id(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
}

::google::protobuf::uint8* ObliviousSplitInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_split_node(), deterministic, target);
  }

  // repeated .diplomacy.tensorflow.boosted_trees.trees.Leaf children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->children(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 children_parent_id = 3;
  if (this->children_parent_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _children_parent_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->children_parent_id_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  return target;
}

size_t ObliviousSplitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .diplomacy.tensorflow.boosted_trees.trees.Leaf children = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // repeated int32 children_parent_id = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->children_parent_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _children_parent_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .diplomacy.tensorflow.boosted_trees.trees.TreeNode split_node = 1;
  if (this->has_split_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *split_node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObliviousSplitInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ObliviousSplitInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObliviousSplitInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
    MergeFrom(*source);
  }
}

void ObliviousSplitInfo::MergeFrom(const ObliviousSplitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  children_parent_id_.MergeFrom(from.children_parent_id_);
  if (from.has_split_node()) {
    mutable_split_node()->::diplomacy::tensorflow::boosted_trees::trees::TreeNode::MergeFrom(from.split_node());
  }
}

void ObliviousSplitInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObliviousSplitInfo::CopyFrom(const ObliviousSplitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.boosted_trees.learner.ObliviousSplitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObliviousSplitInfo::IsInitialized() const {
  return true;
}

void ObliviousSplitInfo::Swap(ObliviousSplitInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObliviousSplitInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObliviousSplitInfo::UnsafeArenaSwap(ObliviousSplitInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObliviousSplitInfo::InternalSwap(ObliviousSplitInfo* other) {
  using std::swap;
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  children_parent_id_.InternalSwap(&other->children_parent_id_);
  swap(split_node_, other->split_node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObliviousSplitInfo::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2fboosted_5ftrees_2fproto_2fsplit_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace learner
}  // namespace boosted_trees
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::boosted_trees::learner::SplitInfo* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::boosted_trees::learner::SplitInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::boosted_trees::learner::SplitInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::boosted_trees::learner::ObliviousSplitInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
