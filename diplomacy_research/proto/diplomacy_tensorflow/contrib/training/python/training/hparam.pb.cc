// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/contrib/training/python/training/hparam.proto

#include "diplomacy_tensorflow/contrib/training/python/training/hparam.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_BoolList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_BytesList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_FloatList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_Int64List;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HParamDef_HparamEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_HParamDef_HParamType;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto
namespace diplomacy {
namespace tensorflow {
class HParamDef_BytesListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_BytesList>
      _instance;
} _HParamDef_BytesList_default_instance_;
class HParamDef_FloatListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_FloatList>
      _instance;
} _HParamDef_FloatList_default_instance_;
class HParamDef_Int64ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_Int64List>
      _instance;
} _HParamDef_Int64List_default_instance_;
class HParamDef_BoolListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_BoolList>
      _instance;
} _HParamDef_BoolList_default_instance_;
class HParamDef_HParamTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_HParamType>
      _instance;
  ::google::protobuf::int64 int64_value_;
  float float_value_;
  ::google::protobuf::internal::ArenaStringPtr bytes_value_;
  bool bool_value_;
  const ::diplomacy::tensorflow::HParamDef_Int64List* int64_list_;
  const ::diplomacy::tensorflow::HParamDef_FloatList* float_list_;
  const ::diplomacy::tensorflow::HParamDef_BytesList* bytes_list_;
  const ::diplomacy::tensorflow::HParamDef_BoolList* bool_list_;
} _HParamDef_HParamType_default_instance_;
class HParamDef_HparamEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef_HparamEntry_DoNotUse>
      _instance;
} _HParamDef_HparamEntry_DoNotUse_default_instance_;
class HParamDefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HParamDef>
      _instance;
} _HParamDef_default_instance_;
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto {
static void InitDefaultsHParamDef_BytesList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_BytesList_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_BytesList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef_BytesList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_BytesList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHParamDef_BytesList}, {}};

static void InitDefaultsHParamDef_FloatList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_FloatList_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_FloatList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef_FloatList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_FloatList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHParamDef_FloatList}, {}};

static void InitDefaultsHParamDef_Int64List() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_Int64List_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_Int64List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef_Int64List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_Int64List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHParamDef_Int64List}, {}};

static void InitDefaultsHParamDef_BoolList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_BoolList_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_BoolList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef_BoolList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HParamDef_BoolList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHParamDef_BoolList}, {}};

static void InitDefaultsHParamDef_HParamType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_HParamType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef_HParamType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_HParamDef_HParamType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsHParamDef_HParamType}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_Int64List.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_FloatList.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BytesList.base,
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BoolList.base,}};

static void InitDefaultsHParamDef_HparamEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_HparamEntry_DoNotUse_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse();
  }
  ::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HParamDef_HparamEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHParamDef_HparamEntry_DoNotUse}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_HParamType.base,}};

static void InitDefaultsHParamDef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::diplomacy::tensorflow::_HParamDef_default_instance_;
    new (ptr) ::diplomacy::tensorflow::HParamDef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::diplomacy::tensorflow::HParamDef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HParamDef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHParamDef}, {
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_HparamEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_BytesList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_FloatList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_Int64List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_BoolList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_HParamType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef_HparamEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HParamDef.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_BytesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_BytesList, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_FloatList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_FloatList, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_Int64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_Int64List, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_BoolList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_BoolList, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HParamType, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HParamType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, int64_value_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, float_value_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, bytes_value_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, bool_value_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, int64_list_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, float_list_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, bytes_list_),
  offsetof(::diplomacy::tensorflow::HParamDef_HParamTypeDefaultTypeInternal, bool_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HParamType, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::diplomacy::tensorflow::HParamDef, hparam_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::diplomacy::tensorflow::HParamDef_BytesList)},
  { 6, -1, sizeof(::diplomacy::tensorflow::HParamDef_FloatList)},
  { 12, -1, sizeof(::diplomacy::tensorflow::HParamDef_Int64List)},
  { 18, -1, sizeof(::diplomacy::tensorflow::HParamDef_BoolList)},
  { 24, -1, sizeof(::diplomacy::tensorflow::HParamDef_HParamType)},
  { 38, 45, sizeof(::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse)},
  { 47, -1, sizeof(::diplomacy::tensorflow::HParamDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_BytesList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_FloatList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_Int64List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_BoolList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_HparamEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::diplomacy::tensorflow::_HParamDef_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/contrib/training/python/training/hparam.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nBdiplomacy_tensorflow/contrib/training/"
      "python/training/hparam.proto\022\024diplomacy."
      "tensorflow\"\222\005\n\tHParamDef\022;\n\006hparam\030\001 \003(\013"
      "2+.diplomacy.tensorflow.HParamDef.Hparam"
      "Entry\032\032\n\tBytesList\022\r\n\005value\030\001 \003(\014\032\036\n\tFlo"
      "atList\022\021\n\005value\030\001 \003(\002B\002\020\001\032\036\n\tInt64List\022\021"
      "\n\005value\030\001 \003(\003B\002\020\001\032\035\n\010BoolList\022\021\n\005value\030\001"
      " \003(\010B\002\020\001\032\361\002\n\nHParamType\022\025\n\013int64_value\030\001"
      " \001(\003H\000\022\025\n\013float_value\030\002 \001(\002H\000\022\025\n\013bytes_v"
      "alue\030\003 \001(\014H\000\022\024\n\nbool_value\030\007 \001(\010H\000\022\?\n\nin"
      "t64_list\030\004 \001(\0132).diplomacy.tensorflow.HP"
      "aramDef.Int64ListH\000\022\?\n\nfloat_list\030\005 \001(\0132"
      ").diplomacy.tensorflow.HParamDef.FloatLi"
      "stH\000\022\?\n\nbytes_list\030\006 \001(\0132).diplomacy.ten"
      "sorflow.HParamDef.BytesListH\000\022=\n\tbool_li"
      "st\030\010 \001(\0132(.diplomacy.tensorflow.HParamDe"
      "f.BoolListH\000B\006\n\004kind\032Y\n\013HparamEntry\022\013\n\003k"
      "ey\030\001 \001(\t\0229\n\005value\030\002 \001(\0132*.diplomacy.tens"
      "orflow.HParamDef.HParamType:\0028\001B\003\370\001\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 764);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/contrib/training/python/training/hparam.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto
namespace diplomacy {
namespace tensorflow {

// ===================================================================

void HParamDef_BytesList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef_BytesList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef_BytesList::HParamDef_BytesList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BytesList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef.BytesList)
}
HParamDef_BytesList::HParamDef_BytesList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  value_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BytesList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef.BytesList)
}
HParamDef_BytesList::HParamDef_BytesList(const HParamDef_BytesList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef.BytesList)
}

void HParamDef_BytesList::SharedCtor() {
}

HParamDef_BytesList::~HParamDef_BytesList() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef.BytesList)
  SharedDtor();
}

void HParamDef_BytesList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HParamDef_BytesList::ArenaDtor(void* object) {
  HParamDef_BytesList* _this = reinterpret_cast< HParamDef_BytesList* >(object);
  (void)_this;
}
void HParamDef_BytesList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef_BytesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef_BytesList::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef_BytesList& HParamDef_BytesList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BytesList.base);
  return *internal_default_instance();
}


void HParamDef_BytesList::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool HParamDef_BytesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef.BytesList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef.BytesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef.BytesList)
  return false;
#undef DO_
}

void HParamDef_BytesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes value = 1;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->value(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef.BytesList)
}

::google::protobuf::uint8* HParamDef_BytesList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef.BytesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes value = 1;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->value(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef.BytesList)
  return target;
}

size_t HParamDef_BytesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef.BytesList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes value = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_size());
  for (int i = 0, n = this->value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->value(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef_BytesList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef.BytesList)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef_BytesList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef_BytesList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef.BytesList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef.BytesList)
    MergeFrom(*source);
  }
}

void HParamDef_BytesList::MergeFrom(const HParamDef_BytesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef.BytesList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void HParamDef_BytesList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef.BytesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef_BytesList::CopyFrom(const HParamDef_BytesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef.BytesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef_BytesList::IsInitialized() const {
  return true;
}

void HParamDef_BytesList::Swap(HParamDef_BytesList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef_BytesList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef_BytesList::UnsafeArenaSwap(HParamDef_BytesList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef_BytesList::InternalSwap(HParamDef_BytesList* other) {
  using std::swap;
  value_.InternalSwap(CastToBase(&other->value_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef_BytesList::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HParamDef_FloatList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef_FloatList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef_FloatList::HParamDef_FloatList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_FloatList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef.FloatList)
}
HParamDef_FloatList::HParamDef_FloatList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  value_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_FloatList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef.FloatList)
}
HParamDef_FloatList::HParamDef_FloatList(const HParamDef_FloatList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef.FloatList)
}

void HParamDef_FloatList::SharedCtor() {
}

HParamDef_FloatList::~HParamDef_FloatList() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef.FloatList)
  SharedDtor();
}

void HParamDef_FloatList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HParamDef_FloatList::ArenaDtor(void* object) {
  HParamDef_FloatList* _this = reinterpret_cast< HParamDef_FloatList* >(object);
  (void)_this;
}
void HParamDef_FloatList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef_FloatList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef_FloatList::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef_FloatList& HParamDef_FloatList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_FloatList.base);
  return *internal_default_instance();
}


void HParamDef_FloatList::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool HParamDef_FloatList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef.FloatList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float value = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef.FloatList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef.FloatList)
  return false;
#undef DO_
}

void HParamDef_FloatList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float value = 1 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->value().data(), this->value_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef.FloatList)
}

::google::protobuf::uint8* HParamDef_FloatList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef.FloatList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float value = 1 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef.FloatList)
  return target;
}

size_t HParamDef_FloatList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef.FloatList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float value = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef_FloatList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef.FloatList)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef_FloatList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef_FloatList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef.FloatList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef.FloatList)
    MergeFrom(*source);
  }
}

void HParamDef_FloatList::MergeFrom(const HParamDef_FloatList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef.FloatList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void HParamDef_FloatList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef.FloatList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef_FloatList::CopyFrom(const HParamDef_FloatList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef.FloatList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef_FloatList::IsInitialized() const {
  return true;
}

void HParamDef_FloatList::Swap(HParamDef_FloatList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef_FloatList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef_FloatList::UnsafeArenaSwap(HParamDef_FloatList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef_FloatList::InternalSwap(HParamDef_FloatList* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef_FloatList::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HParamDef_Int64List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef_Int64List::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef_Int64List::HParamDef_Int64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_Int64List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef.Int64List)
}
HParamDef_Int64List::HParamDef_Int64List(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  value_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_Int64List.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef.Int64List)
}
HParamDef_Int64List::HParamDef_Int64List(const HParamDef_Int64List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef.Int64List)
}

void HParamDef_Int64List::SharedCtor() {
}

HParamDef_Int64List::~HParamDef_Int64List() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef.Int64List)
  SharedDtor();
}

void HParamDef_Int64List::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HParamDef_Int64List::ArenaDtor(void* object) {
  HParamDef_Int64List* _this = reinterpret_cast< HParamDef_Int64List* >(object);
  (void)_this;
}
void HParamDef_Int64List::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef_Int64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef_Int64List::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef_Int64List& HParamDef_Int64List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_Int64List.base);
  return *internal_default_instance();
}


void HParamDef_Int64List::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool HParamDef_Int64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef.Int64List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 value = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef.Int64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef.Int64List)
  return false;
#undef DO_
}

void HParamDef_Int64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 value = 1 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
  }
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->value(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef.Int64List)
}

::google::protobuf::uint8* HParamDef_Int64List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef.Int64List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 value = 1 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef.Int64List)
  return target;
}

size_t HParamDef_Int64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef.Int64List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 value = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef_Int64List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef.Int64List)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef_Int64List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef_Int64List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef.Int64List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef.Int64List)
    MergeFrom(*source);
  }
}

void HParamDef_Int64List::MergeFrom(const HParamDef_Int64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef.Int64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void HParamDef_Int64List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef.Int64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef_Int64List::CopyFrom(const HParamDef_Int64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef.Int64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef_Int64List::IsInitialized() const {
  return true;
}

void HParamDef_Int64List::Swap(HParamDef_Int64List* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef_Int64List* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef_Int64List::UnsafeArenaSwap(HParamDef_Int64List* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef_Int64List::InternalSwap(HParamDef_Int64List* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef_Int64List::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HParamDef_BoolList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef_BoolList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef_BoolList::HParamDef_BoolList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BoolList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef.BoolList)
}
HParamDef_BoolList::HParamDef_BoolList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  value_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BoolList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef.BoolList)
}
HParamDef_BoolList::HParamDef_BoolList(const HParamDef_BoolList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef.BoolList)
}

void HParamDef_BoolList::SharedCtor() {
}

HParamDef_BoolList::~HParamDef_BoolList() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef.BoolList)
  SharedDtor();
}

void HParamDef_BoolList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HParamDef_BoolList::ArenaDtor(void* object) {
  HParamDef_BoolList* _this = reinterpret_cast< HParamDef_BoolList* >(object);
  (void)_this;
}
void HParamDef_BoolList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef_BoolList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef_BoolList::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef_BoolList& HParamDef_BoolList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_BoolList.base);
  return *internal_default_instance();
}


void HParamDef_BoolList::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool HParamDef_BoolList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef.BoolList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool value = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef.BoolList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef.BoolList)
  return false;
#undef DO_
}

void HParamDef_BoolList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool value = 1 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->value().data(), this->value_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef.BoolList)
}

::google::protobuf::uint8* HParamDef_BoolList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef.BoolList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool value = 1 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef.BoolList)
  return target;
}

size_t HParamDef_BoolList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef.BoolList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool value = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef_BoolList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef.BoolList)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef_BoolList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef_BoolList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef.BoolList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef.BoolList)
    MergeFrom(*source);
  }
}

void HParamDef_BoolList::MergeFrom(const HParamDef_BoolList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef.BoolList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void HParamDef_BoolList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef.BoolList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef_BoolList::CopyFrom(const HParamDef_BoolList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef.BoolList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef_BoolList::IsInitialized() const {
  return true;
}

void HParamDef_BoolList::Swap(HParamDef_BoolList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef_BoolList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef_BoolList::UnsafeArenaSwap(HParamDef_BoolList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef_BoolList::InternalSwap(HParamDef_BoolList* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef_BoolList::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HParamDef_HParamType::InitAsDefaultInstance() {
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.float_value_ = 0;
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.bytes_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.bool_value_ = false;
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.int64_list_ = const_cast< ::diplomacy::tensorflow::HParamDef_Int64List*>(
      ::diplomacy::tensorflow::HParamDef_Int64List::internal_default_instance());
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.float_list_ = const_cast< ::diplomacy::tensorflow::HParamDef_FloatList*>(
      ::diplomacy::tensorflow::HParamDef_FloatList::internal_default_instance());
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.bytes_list_ = const_cast< ::diplomacy::tensorflow::HParamDef_BytesList*>(
      ::diplomacy::tensorflow::HParamDef_BytesList::internal_default_instance());
  ::diplomacy::tensorflow::_HParamDef_HParamType_default_instance_.bool_list_ = const_cast< ::diplomacy::tensorflow::HParamDef_BoolList*>(
      ::diplomacy::tensorflow::HParamDef_BoolList::internal_default_instance());
}
void HParamDef_HParamType::set_allocated_int64_list(::diplomacy::tensorflow::HParamDef_Int64List* int64_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (int64_list) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(int64_list);
    if (message_arena != submessage_arena) {
      int64_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int64_list, submessage_arena);
    }
    set_has_int64_list();
    kind_.int64_list_ = int64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.HParamDef.HParamType.int64_list)
}
void HParamDef_HParamType::set_allocated_float_list(::diplomacy::tensorflow::HParamDef_FloatList* float_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (float_list) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(float_list);
    if (message_arena != submessage_arena) {
      float_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float_list, submessage_arena);
    }
    set_has_float_list();
    kind_.float_list_ = float_list;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.HParamDef.HParamType.float_list)
}
void HParamDef_HParamType::set_allocated_bytes_list(::diplomacy::tensorflow::HParamDef_BytesList* bytes_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (bytes_list) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(bytes_list);
    if (message_arena != submessage_arena) {
      bytes_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bytes_list, submessage_arena);
    }
    set_has_bytes_list();
    kind_.bytes_list_ = bytes_list;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.HParamDef.HParamType.bytes_list)
}
void HParamDef_HParamType::set_allocated_bool_list(::diplomacy::tensorflow::HParamDef_BoolList* bool_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (bool_list) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(bool_list);
    if (message_arena != submessage_arena) {
      bool_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bool_list, submessage_arena);
    }
    set_has_bool_list();
    kind_.bool_list_ = bool_list;
  }
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.HParamDef.HParamType.bool_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef_HParamType::kInt64ValueFieldNumber;
const int HParamDef_HParamType::kFloatValueFieldNumber;
const int HParamDef_HParamType::kBytesValueFieldNumber;
const int HParamDef_HParamType::kBoolValueFieldNumber;
const int HParamDef_HParamType::kInt64ListFieldNumber;
const int HParamDef_HParamType::kFloatListFieldNumber;
const int HParamDef_HParamType::kBytesListFieldNumber;
const int HParamDef_HParamType::kBoolListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef_HParamType::HParamDef_HParamType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_HParamType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef.HParamType)
}
HParamDef_HParamType::HParamDef_HParamType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_HParamType.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef.HParamType)
}
HParamDef_HParamType::HParamDef_HParamType(const HParamDef_HParamType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64List: {
      mutable_int64_list()->::diplomacy::tensorflow::HParamDef_Int64List::MergeFrom(from.int64_list());
      break;
    }
    case kFloatList: {
      mutable_float_list()->::diplomacy::tensorflow::HParamDef_FloatList::MergeFrom(from.float_list());
      break;
    }
    case kBytesList: {
      mutable_bytes_list()->::diplomacy::tensorflow::HParamDef_BytesList::MergeFrom(from.bytes_list());
      break;
    }
    case kBoolList: {
      mutable_bool_list()->::diplomacy::tensorflow::HParamDef_BoolList::MergeFrom(from.bool_list());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef.HParamType)
}

void HParamDef_HParamType::SharedCtor() {
  clear_has_kind();
}

HParamDef_HParamType::~HParamDef_HParamType() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef.HParamType)
  SharedDtor();
}

void HParamDef_HParamType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_kind()) {
    clear_kind();
  }
}

void HParamDef_HParamType::ArenaDtor(void* object) {
  HParamDef_HParamType* _this = reinterpret_cast< HParamDef_HParamType* >(object);
  (void)_this;
}
void HParamDef_HParamType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef_HParamType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef_HParamType::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef_HParamType& HParamDef_HParamType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef_HParamType.base);
  return *internal_default_instance();
}


void HParamDef_HParamType::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:diplomacy.tensorflow.HParamDef.HParamType)
  switch (kind_case()) {
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kBytesValue: {
      kind_.bytes_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64List: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.int64_list_;
      }
      break;
    }
    case kFloatList: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.float_list_;
      }
      break;
    }
    case kBytesList: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.bytes_list_;
      }
      break;
    }
    case kBoolList: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.bool_list_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void HParamDef_HParamType::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef.HParamType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear();
}

bool HParamDef_HParamType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef.HParamType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 int64_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kind_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kind_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.HParamDef.Int64List int64_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.HParamDef.FloatList float_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.HParamDef.BytesList bytes_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &kind_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.HParamDef.BoolList bool_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef.HParamType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef.HParamType)
  return false;
#undef DO_
}

void HParamDef_HParamType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef.HParamType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 int64_value = 1;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->int64_value(), output);
  }

  // float float_value = 2;
  if (has_float_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_value(), output);
  }

  // bytes bytes_value = 3;
  if (has_bytes_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bytes_value(), output);
  }

  // .diplomacy.tensorflow.HParamDef.Int64List int64_list = 4;
  if (has_int64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_int64_list(), output);
  }

  // .diplomacy.tensorflow.HParamDef.FloatList float_list = 5;
  if (has_float_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_float_list(), output);
  }

  // .diplomacy.tensorflow.HParamDef.BytesList bytes_list = 6;
  if (has_bytes_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_bytes_list(), output);
  }

  // bool bool_value = 7;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bool_value(), output);
  }

  // .diplomacy.tensorflow.HParamDef.BoolList bool_list = 8;
  if (has_bool_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_bool_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef.HParamType)
}

::google::protobuf::uint8* HParamDef_HParamType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef.HParamType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 int64_value = 1;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->int64_value(), target);
  }

  // float float_value = 2;
  if (has_float_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_value(), target);
  }

  // bytes bytes_value = 3;
  if (has_bytes_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bytes_value(), target);
  }

  // .diplomacy.tensorflow.HParamDef.Int64List int64_list = 4;
  if (has_int64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_int64_list(), deterministic, target);
  }

  // .diplomacy.tensorflow.HParamDef.FloatList float_list = 5;
  if (has_float_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_float_list(), deterministic, target);
  }

  // .diplomacy.tensorflow.HParamDef.BytesList bytes_list = 6;
  if (has_bytes_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_bytes_list(), deterministic, target);
  }

  // bool bool_value = 7;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bool_value(), target);
  }

  // .diplomacy.tensorflow.HParamDef.BoolList bool_list = 8;
  if (has_bool_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_bool_list(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef.HParamType)
  return target;
}

size_t HParamDef_HParamType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef.HParamType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (kind_case()) {
    // int64 int64_value = 1;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // float float_value = 2;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // bytes bytes_value = 3;
    case kBytesValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
      break;
    }
    // bool bool_value = 7;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // .diplomacy.tensorflow.HParamDef.Int64List int64_list = 4;
    case kInt64List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.int64_list_);
      break;
    }
    // .diplomacy.tensorflow.HParamDef.FloatList float_list = 5;
    case kFloatList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.float_list_);
      break;
    }
    // .diplomacy.tensorflow.HParamDef.BytesList bytes_list = 6;
    case kBytesList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.bytes_list_);
      break;
    }
    // .diplomacy.tensorflow.HParamDef.BoolList bool_list = 8;
    case kBoolList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.bool_list_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef_HParamType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef.HParamType)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef_HParamType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef_HParamType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef.HParamType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef.HParamType)
    MergeFrom(*source);
  }
}

void HParamDef_HParamType::MergeFrom(const HParamDef_HParamType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef.HParamType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64List: {
      mutable_int64_list()->::diplomacy::tensorflow::HParamDef_Int64List::MergeFrom(from.int64_list());
      break;
    }
    case kFloatList: {
      mutable_float_list()->::diplomacy::tensorflow::HParamDef_FloatList::MergeFrom(from.float_list());
      break;
    }
    case kBytesList: {
      mutable_bytes_list()->::diplomacy::tensorflow::HParamDef_BytesList::MergeFrom(from.bytes_list());
      break;
    }
    case kBoolList: {
      mutable_bool_list()->::diplomacy::tensorflow::HParamDef_BoolList::MergeFrom(from.bool_list());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void HParamDef_HParamType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef.HParamType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef_HParamType::CopyFrom(const HParamDef_HParamType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef.HParamType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef_HParamType::IsInitialized() const {
  return true;
}

void HParamDef_HParamType::Swap(HParamDef_HParamType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef_HParamType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef_HParamType::UnsafeArenaSwap(HParamDef_HParamType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef_HParamType::InternalSwap(HParamDef_HParamType* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef_HParamType::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HParamDef_HparamEntry_DoNotUse::HParamDef_HparamEntry_DoNotUse() {}
HParamDef_HparamEntry_DoNotUse::HParamDef_HparamEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HParamDef_HparamEntry_DoNotUse::MergeFrom(const HParamDef_HparamEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HParamDef_HparamEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[5];
}
void HParamDef_HparamEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HParamDef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HParamDef::kHparamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HParamDef::HParamDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:diplomacy.tensorflow.HParamDef)
}
HParamDef::HParamDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  hparam_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:diplomacy.tensorflow.HParamDef)
}
HParamDef::HParamDef(const HParamDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hparam_.MergeFrom(from.hparam_);
  // @@protoc_insertion_point(copy_constructor:diplomacy.tensorflow.HParamDef)
}

void HParamDef::SharedCtor() {
}

HParamDef::~HParamDef() {
  // @@protoc_insertion_point(destructor:diplomacy.tensorflow.HParamDef)
  SharedDtor();
}

void HParamDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HParamDef::ArenaDtor(void* object) {
  HParamDef* _this = reinterpret_cast< HParamDef* >(object);
  (void)_this;
}
void HParamDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HParamDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HParamDef::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HParamDef& HParamDef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::scc_info_HParamDef.base);
  return *internal_default_instance();
}


void HParamDef::Clear() {
// @@protoc_insertion_point(message_clear_start:diplomacy.tensorflow.HParamDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hparam_.Clear();
  _internal_metadata_.Clear();
}

bool HParamDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:diplomacy.tensorflow.HParamDef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .diplomacy.tensorflow.HParamDef.HParamType> hparam = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          HParamDef_HparamEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HParamDef_HparamEntry_DoNotUse,
              ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType > > parser(&hparam_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "diplomacy.tensorflow.HParamDef.HparamEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:diplomacy.tensorflow.HParamDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:diplomacy.tensorflow.HParamDef)
  return false;
#undef DO_
}

void HParamDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:diplomacy.tensorflow.HParamDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .diplomacy.tensorflow.HParamDef.HParamType> hparam = 1;
  if (!this->hparam().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.HParamDef.HparamEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->hparam().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hparam().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_iterator
          it = this->hparam().begin();
          it != this->hparam().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HParamDef_HparamEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hparam_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HParamDef_HparamEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_iterator
          it = this->hparam().begin();
          it != this->hparam().end(); ++it) {
        entry.reset(hparam_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:diplomacy.tensorflow.HParamDef)
}

::google::protobuf::uint8* HParamDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:diplomacy.tensorflow.HParamDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .diplomacy.tensorflow.HParamDef.HParamType> hparam = 1;
  if (!this->hparam().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "diplomacy.tensorflow.HParamDef.HparamEntry.key");
      }
    };

    if (deterministic &&
        this->hparam().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hparam().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_iterator
          it = this->hparam().begin();
          it != this->hparam().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HParamDef_HparamEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hparam_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HParamDef_HparamEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_iterator
          it = this->hparam().begin();
          it != this->hparam().end(); ++it) {
        entry.reset(hparam_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:diplomacy.tensorflow.HParamDef)
  return target;
}

size_t HParamDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:diplomacy.tensorflow.HParamDef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .diplomacy.tensorflow.HParamDef.HParamType> hparam = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hparam_size());
  {
    ::std::unique_ptr<HParamDef_HparamEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::diplomacy::tensorflow::HParamDef_HParamType >::const_iterator
        it = this->hparam().begin();
        it != this->hparam().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(hparam_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HParamDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:diplomacy.tensorflow.HParamDef)
  GOOGLE_DCHECK_NE(&from, this);
  const HParamDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HParamDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:diplomacy.tensorflow.HParamDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:diplomacy.tensorflow.HParamDef)
    MergeFrom(*source);
  }
}

void HParamDef::MergeFrom(const HParamDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:diplomacy.tensorflow.HParamDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hparam_.MergeFrom(from.hparam_);
}

void HParamDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:diplomacy.tensorflow.HParamDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HParamDef::CopyFrom(const HParamDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:diplomacy.tensorflow.HParamDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HParamDef::IsInitialized() const {
  return true;
}

void HParamDef::Swap(HParamDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HParamDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HParamDef::UnsafeArenaSwap(HParamDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HParamDef::InternalSwap(HParamDef* other) {
  using std::swap;
  hparam_.Swap(&other->hparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HParamDef::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcontrib_2ftraining_2fpython_2ftraining_2fhparam_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_BytesList* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_BytesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_BytesList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_FloatList* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_FloatList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_FloatList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_Int64List* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_Int64List >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_Int64List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_BoolList* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_BoolList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_BoolList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_HParamType* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_HParamType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_HParamType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef_HparamEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::diplomacy::tensorflow::HParamDef* Arena::CreateMaybeMessage< ::diplomacy::tensorflow::HParamDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::diplomacy::tensorflow::HParamDef >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
