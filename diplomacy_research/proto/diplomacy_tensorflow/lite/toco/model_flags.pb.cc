// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/lite/toco/model_flags.proto

#include "diplomacy_tensorflow/lite/toco/model_flags.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InputArrayShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelFlags_ModelCheck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RnnState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ArraysExtraInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ArraysExtraInfo_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputArray;
}  // namespace protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto
namespace toco {
class InputArrayShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputArrayShape>
      _instance;
} _InputArrayShape_default_instance_;
class InputArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputArray>
      _instance;
} _InputArray_default_instance_;
class RnnStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RnnState>
      _instance;
} _RnnState_default_instance_;
class ArraysExtraInfo_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArraysExtraInfo_Entry>
      _instance;
} _ArraysExtraInfo_Entry_default_instance_;
class ArraysExtraInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArraysExtraInfo>
      _instance;
} _ArraysExtraInfo_default_instance_;
class ModelFlags_ModelCheckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelFlags_ModelCheck>
      _instance;
} _ModelFlags_ModelCheck_default_instance_;
class ModelFlagsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelFlags>
      _instance;
} _ModelFlags_default_instance_;
}  // namespace toco
namespace protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto {
static void InitDefaultsInputArrayShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_InputArrayShape_default_instance_;
    new (ptr) ::toco::InputArrayShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::InputArrayShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InputArrayShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInputArrayShape}, {}};

static void InitDefaultsInputArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_InputArray_default_instance_;
    new (ptr) ::toco::InputArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::InputArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputArray}, {
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArrayShape.base,}};

static void InitDefaultsRnnState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_RnnState_default_instance_;
    new (ptr) ::toco::RnnState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::RnnState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RnnState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRnnState}, {}};

static void InitDefaultsArraysExtraInfo_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_ArraysExtraInfo_Entry_default_instance_;
    new (ptr) ::toco::ArraysExtraInfo_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::ArraysExtraInfo_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ArraysExtraInfo_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsArraysExtraInfo_Entry}, {
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArrayShape.base,}};

static void InitDefaultsArraysExtraInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_ArraysExtraInfo_default_instance_;
    new (ptr) ::toco::ArraysExtraInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::ArraysExtraInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ArraysExtraInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsArraysExtraInfo}, {
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo_Entry.base,}};

static void InitDefaultsModelFlags_ModelCheck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.DefaultConstruct();
  *::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get_mutable() = ::std::string("None", 4);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get_mutable());
  {
    void* ptr = &::toco::_ModelFlags_ModelCheck_default_instance_;
    new (ptr) ::toco::ModelFlags_ModelCheck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::ModelFlags_ModelCheck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelFlags_ModelCheck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelFlags_ModelCheck}, {}};

static void InitDefaultsModelFlags() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toco::_ModelFlags_default_instance_;
    new (ptr) ::toco::ModelFlags();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toco::ModelFlags::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ModelFlags =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsModelFlags}, {
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArray.base,
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_RnnState.base,
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ModelFlags_ModelCheck.base,
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InputArrayShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RnnState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArraysExtraInfo_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArraysExtraInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelFlags_ModelCheck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelFlags.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArrayShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArrayShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArrayShape, dims_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, mean_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, std_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::InputArray, data_type_),
  0,
  1,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, state_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, back_edge_source_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, discardable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::RnnState, size_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, name_regexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo_Entry, constant_float_value_),
  0,
  1,
  3,
  4,
  5,
  2,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ArraysExtraInfo, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags_ModelCheck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags_ModelCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags_ModelCheck, count_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags_ModelCheck, count_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags_ModelCheck, count_max_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, input_arrays_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, output_arrays_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, variable_batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, rnn_states_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, model_checks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, allow_nonexistent_arrays_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, allow_nonascii_arrays_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, arrays_extra_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::toco::ModelFlags, change_concat_input_ranges_),
  ~0u,
  ~0u,
  1,
  ~0u,
  ~0u,
  2,
  3,
  0,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::toco::InputArrayShape)},
  { 7, 17, sizeof(::toco::InputArray)},
  { 22, 31, sizeof(::toco::RnnState)},
  { 35, 47, sizeof(::toco::ArraysExtraInfo_Entry)},
  { 54, 60, sizeof(::toco::ArraysExtraInfo)},
  { 61, 69, sizeof(::toco::ModelFlags_ModelCheck)},
  { 72, 86, sizeof(::toco::ModelFlags)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_InputArrayShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_InputArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_RnnState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_ArraysExtraInfo_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_ArraysExtraInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_ModelFlags_ModelCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::toco::_ModelFlags_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/lite/toco/model_flags.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0diplomacy_tensorflow/lite/toco/model_f"
      "lags.proto\022\004toco\032*diplomacy_tensorflow/l"
      "ite/toco/types.proto\"\037\n\017InputArrayShape\022"
      "\014\n\004dims\030\002 \003(\005\"\217\001\n\nInputArray\022\014\n\004name\030\001 \001"
      "(\t\022$\n\005shape\030\006 \001(\0132\025.toco.InputArrayShape"
      "\022\022\n\nmean_value\030\003 \001(\002\022\024\n\tstd_value\030\004 \001(\002:"
      "\0011\022#\n\tdata_type\030\005 \001(\0162\020.toco.IODataType\""
      "b\n\010RnnState\022\023\n\013state_array\030\001 \001(\t\022\036\n\026back"
      "_edge_source_array\030\002 \001(\t\022\023\n\013discardable\030"
      "\005 \001(\010\022\014\n\004size\030\003 \001(\005\"\357\001\n\017ArraysExtraInfo\022"
      ",\n\007entries\030\001 \003(\0132\033.toco.ArraysExtraInfo."
      "Entry\032\255\001\n\005Entry\022\014\n\004name\030\001 \001(\t\022\023\n\013name_re"
      "gexp\030\007 \001(\t\022\013\n\003min\030\002 \001(\001\022\013\n\003max\030\003 \001(\001\022#\n\t"
      "data_type\030\004 \001(\0162\020.toco.IODataType\022$\n\005sha"
      "pe\030\005 \001(\0132\025.toco.InputArrayShape\022\034\n\024const"
      "ant_float_value\030\006 \001(\002\"\255\003\n\nModelFlags\022&\n\014"
      "input_arrays\030\001 \003(\0132\020.toco.InputArray\022\025\n\r"
      "output_arrays\030\002 \003(\t\022\026\n\016variable_batch\030\n "
      "\001(\010\022\"\n\nrnn_states\030\014 \003(\0132\016.toco.RnnState\022"
      "1\n\014model_checks\030\016 \003(\0132\033.toco.ModelFlags."
      "ModelCheck\022 \n\030allow_nonexistent_arrays\030\020"
      " \001(\010\022\035\n\025allow_nonascii_arrays\030\021 \001(\010\0220\n\021a"
      "rrays_extra_info\030\022 \001(\0132\025.toco.ArraysExtr"
      "aInfo\022(\n\032change_concat_input_ranges\030\023 \001("
      "\010:\004true\032T\n\nModelCheck\022\030\n\ncount_type\030\001 \001("
      "\t:\004None\022\025\n\tcount_min\030\002 \001(\005:\002-1\022\025\n\tcount_"
      "max\030\003 \001(\005:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1053);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/lite/toco/model_flags.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto
namespace toco {

// ===================================================================

void InputArrayShape::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputArrayShape::kDimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputArrayShape::InputArrayShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArrayShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.InputArrayShape)
}
InputArrayShape::InputArrayShape(const InputArrayShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dims_(from.dims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:toco.InputArrayShape)
}

void InputArrayShape::SharedCtor() {
}

InputArrayShape::~InputArrayShape() {
  // @@protoc_insertion_point(destructor:toco.InputArrayShape)
  SharedDtor();
}

void InputArrayShape::SharedDtor() {
}

void InputArrayShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputArrayShape::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputArrayShape& InputArrayShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArrayShape.base);
  return *internal_default_instance();
}


void InputArrayShape::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.InputArrayShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dims_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputArrayShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.InputArrayShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 dims = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.InputArrayShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.InputArrayShape)
  return false;
#undef DO_
}

void InputArrayShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.InputArrayShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 dims = 2;
  for (int i = 0, n = this->dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->dims(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.InputArrayShape)
}

::google::protobuf::uint8* InputArrayShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.InputArrayShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 dims = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->dims_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.InputArrayShape)
  return target;
}

size_t InputArrayShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.InputArrayShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 dims = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dims_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputArrayShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.InputArrayShape)
  GOOGLE_DCHECK_NE(&from, this);
  const InputArrayShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputArrayShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.InputArrayShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.InputArrayShape)
    MergeFrom(*source);
  }
}

void InputArrayShape::MergeFrom(const InputArrayShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.InputArrayShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dims_.MergeFrom(from.dims_);
}

void InputArrayShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.InputArrayShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputArrayShape::CopyFrom(const InputArrayShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.InputArrayShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputArrayShape::IsInitialized() const {
  return true;
}

void InputArrayShape::Swap(InputArrayShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputArrayShape::InternalSwap(InputArrayShape* other) {
  using std::swap;
  dims_.InternalSwap(&other->dims_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputArrayShape::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputArray::InitAsDefaultInstance() {
  ::toco::_InputArray_default_instance_._instance.get_mutable()->shape_ = const_cast< ::toco::InputArrayShape*>(
      ::toco::InputArrayShape::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputArray::kNameFieldNumber;
const int InputArray::kShapeFieldNumber;
const int InputArray::kMeanValueFieldNumber;
const int InputArray::kStdValueFieldNumber;
const int InputArray::kDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputArray::InputArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.InputArray)
}
InputArray::InputArray(const InputArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_shape()) {
    shape_ = new ::toco::InputArrayShape(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&mean_value_, &from.mean_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&std_value_) -
    reinterpret_cast<char*>(&mean_value_)) + sizeof(std_value_));
  // @@protoc_insertion_point(copy_constructor:toco.InputArray)
}

void InputArray::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_type_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(data_type_));
  std_value_ = 1;
}

InputArray::~InputArray() {
  // @@protoc_insertion_point(destructor:toco.InputArray)
  SharedDtor();
}

void InputArray::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void InputArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputArray::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputArray& InputArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_InputArray.base);
  return *internal_default_instance();
}


void InputArray::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.InputArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(shape_ != NULL);
      shape_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&mean_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&data_type_) -
        reinterpret_cast<char*>(&mean_value_)) + sizeof(data_type_));
    std_value_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.InputArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.InputArray.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float mean_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_mean_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mean_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float std_value = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_std_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &std_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .toco.IODataType data_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::toco::IODataType_IsValid(value)) {
            set_data_type(static_cast< ::toco::IODataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .toco.InputArrayShape shape = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.InputArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.InputArray)
  return false;
#undef DO_
}

void InputArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.InputArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.InputArray.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float mean_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->mean_value(), output);
  }

  // optional float std_value = 4 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->std_value(), output);
  }

  // optional .toco.IODataType data_type = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->data_type(), output);
  }

  // optional .toco.InputArrayShape shape = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_shape(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.InputArray)
}

::google::protobuf::uint8* InputArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.InputArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.InputArray.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float mean_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->mean_value(), target);
  }

  // optional float std_value = 4 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->std_value(), target);
  }

  // optional .toco.IODataType data_type = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->data_type(), target);
  }

  // optional .toco.InputArrayShape shape = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_shape(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.InputArray)
  return target;
}

size_t InputArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.InputArray)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .toco.InputArrayShape shape = 6;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_);
    }

    // optional float mean_value = 3;
    if (has_mean_value()) {
      total_size += 1 + 4;
    }

    // optional .toco.IODataType data_type = 5;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
    }

    // optional float std_value = 4 [default = 1];
    if (has_std_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.InputArray)
  GOOGLE_DCHECK_NE(&from, this);
  const InputArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.InputArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.InputArray)
    MergeFrom(*source);
  }
}

void InputArray::MergeFrom(const InputArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.InputArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_shape()->::toco::InputArrayShape::MergeFrom(from.shape());
    }
    if (cached_has_bits & 0x00000004u) {
      mean_value_ = from.mean_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      data_type_ = from.data_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      std_value_ = from.std_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.InputArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputArray::CopyFrom(const InputArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.InputArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputArray::IsInitialized() const {
  return true;
}

void InputArray::Swap(InputArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputArray::InternalSwap(InputArray* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(mean_value_, other->mean_value_);
  swap(data_type_, other->data_type_);
  swap(std_value_, other->std_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputArray::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RnnState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RnnState::kStateArrayFieldNumber;
const int RnnState::kBackEdgeSourceArrayFieldNumber;
const int RnnState::kDiscardableFieldNumber;
const int RnnState::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RnnState::RnnState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_RnnState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.RnnState)
}
RnnState::RnnState(const RnnState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state_array()) {
    state_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_array_);
  }
  back_edge_source_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_back_edge_source_array()) {
    back_edge_source_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.back_edge_source_array_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&discardable_) -
    reinterpret_cast<char*>(&size_)) + sizeof(discardable_));
  // @@protoc_insertion_point(copy_constructor:toco.RnnState)
}

void RnnState::SharedCtor() {
  state_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  back_edge_source_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discardable_) -
      reinterpret_cast<char*>(&size_)) + sizeof(discardable_));
}

RnnState::~RnnState() {
  // @@protoc_insertion_point(destructor:toco.RnnState)
  SharedDtor();
}

void RnnState::SharedDtor() {
  state_array_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  back_edge_source_array_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RnnState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RnnState::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RnnState& RnnState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_RnnState.base);
  return *internal_default_instance();
}


void RnnState::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.RnnState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      state_array_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      back_edge_source_array_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&discardable_) -
        reinterpret_cast<char*>(&size_)) + sizeof(discardable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RnnState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.RnnState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string state_array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state_array()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state_array().data(), static_cast<int>(this->state_array().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.RnnState.state_array");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string back_edge_source_array = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_back_edge_source_array()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->back_edge_source_array().data(), static_cast<int>(this->back_edge_source_array().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.RnnState.back_edge_source_array");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool discardable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_discardable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &discardable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.RnnState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.RnnState)
  return false;
#undef DO_
}

void RnnState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.RnnState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string state_array = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_array().data(), static_cast<int>(this->state_array().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.RnnState.state_array");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state_array(), output);
  }

  // optional string back_edge_source_array = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->back_edge_source_array().data(), static_cast<int>(this->back_edge_source_array().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.RnnState.back_edge_source_array");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->back_edge_source_array(), output);
  }

  // optional int32 size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // optional bool discardable = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->discardable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.RnnState)
}

::google::protobuf::uint8* RnnState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.RnnState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string state_array = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_array().data(), static_cast<int>(this->state_array().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.RnnState.state_array");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->state_array(), target);
  }

  // optional string back_edge_source_array = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->back_edge_source_array().data(), static_cast<int>(this->back_edge_source_array().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.RnnState.back_edge_source_array");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->back_edge_source_array(), target);
  }

  // optional int32 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // optional bool discardable = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->discardable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.RnnState)
  return target;
}

size_t RnnState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.RnnState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string state_array = 1;
    if (has_state_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state_array());
    }

    // optional string back_edge_source_array = 2;
    if (has_back_edge_source_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->back_edge_source_array());
    }

    // optional int32 size = 3;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional bool discardable = 5;
    if (has_discardable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RnnState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.RnnState)
  GOOGLE_DCHECK_NE(&from, this);
  const RnnState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RnnState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.RnnState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.RnnState)
    MergeFrom(*source);
  }
}

void RnnState::MergeFrom(const RnnState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.RnnState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_state_array();
      state_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_array_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_back_edge_source_array();
      back_edge_source_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.back_edge_source_array_);
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000008u) {
      discardable_ = from.discardable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RnnState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.RnnState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RnnState::CopyFrom(const RnnState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.RnnState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RnnState::IsInitialized() const {
  return true;
}

void RnnState::Swap(RnnState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RnnState::InternalSwap(RnnState* other) {
  using std::swap;
  state_array_.Swap(&other->state_array_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  back_edge_source_array_.Swap(&other->back_edge_source_array_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(discardable_, other->discardable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RnnState::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArraysExtraInfo_Entry::InitAsDefaultInstance() {
  ::toco::_ArraysExtraInfo_Entry_default_instance_._instance.get_mutable()->shape_ = const_cast< ::toco::InputArrayShape*>(
      ::toco::InputArrayShape::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArraysExtraInfo_Entry::kNameFieldNumber;
const int ArraysExtraInfo_Entry::kNameRegexpFieldNumber;
const int ArraysExtraInfo_Entry::kMinFieldNumber;
const int ArraysExtraInfo_Entry::kMaxFieldNumber;
const int ArraysExtraInfo_Entry::kDataTypeFieldNumber;
const int ArraysExtraInfo_Entry::kShapeFieldNumber;
const int ArraysExtraInfo_Entry::kConstantFloatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArraysExtraInfo_Entry::ArraysExtraInfo_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.ArraysExtraInfo.Entry)
}
ArraysExtraInfo_Entry::ArraysExtraInfo_Entry(const ArraysExtraInfo_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  name_regexp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_regexp()) {
    name_regexp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_regexp_);
  }
  if (from.has_shape()) {
    shape_ = new ::toco::InputArrayShape(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&constant_float_value_) -
    reinterpret_cast<char*>(&min_)) + sizeof(constant_float_value_));
  // @@protoc_insertion_point(copy_constructor:toco.ArraysExtraInfo.Entry)
}

void ArraysExtraInfo_Entry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_regexp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constant_float_value_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(constant_float_value_));
}

ArraysExtraInfo_Entry::~ArraysExtraInfo_Entry() {
  // @@protoc_insertion_point(destructor:toco.ArraysExtraInfo.Entry)
  SharedDtor();
}

void ArraysExtraInfo_Entry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_regexp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void ArraysExtraInfo_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArraysExtraInfo_Entry::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArraysExtraInfo_Entry& ArraysExtraInfo_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo_Entry.base);
  return *internal_default_instance();
}


void ArraysExtraInfo_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.ArraysExtraInfo.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_regexp_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(shape_ != NULL);
      shape_->Clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&min_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&constant_float_value_) -
        reinterpret_cast<char*>(&min_)) + sizeof(constant_float_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ArraysExtraInfo_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.ArraysExtraInfo.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.ArraysExtraInfo.Entry.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double min = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .toco.IODataType data_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::toco::IODataType_IsValid(value)) {
            set_data_type(static_cast< ::toco::IODataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .toco.InputArrayShape shape = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float constant_float_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_constant_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &constant_float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name_regexp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_regexp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_regexp().data(), static_cast<int>(this->name_regexp().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.ArraysExtraInfo.Entry.name_regexp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.ArraysExtraInfo.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.ArraysExtraInfo.Entry)
  return false;
#undef DO_
}

void ArraysExtraInfo_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.ArraysExtraInfo.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ArraysExtraInfo.Entry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double min = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->min(), output);
  }

  // optional double max = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->max(), output);
  }

  // optional .toco.IODataType data_type = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->data_type(), output);
  }

  // optional .toco.InputArrayShape shape = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_shape(), output);
  }

  // optional float constant_float_value = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->constant_float_value(), output);
  }

  // optional string name_regexp = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_regexp().data(), static_cast<int>(this->name_regexp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ArraysExtraInfo.Entry.name_regexp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name_regexp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.ArraysExtraInfo.Entry)
}

::google::protobuf::uint8* ArraysExtraInfo_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.ArraysExtraInfo.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ArraysExtraInfo.Entry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double min = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->min(), target);
  }

  // optional double max = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->max(), target);
  }

  // optional .toco.IODataType data_type = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->data_type(), target);
  }

  // optional .toco.InputArrayShape shape = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_shape(), deterministic, target);
  }

  // optional float constant_float_value = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->constant_float_value(), target);
  }

  // optional string name_regexp = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_regexp().data(), static_cast<int>(this->name_regexp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ArraysExtraInfo.Entry.name_regexp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name_regexp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.ArraysExtraInfo.Entry)
  return target;
}

size_t ArraysExtraInfo_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.ArraysExtraInfo.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string name_regexp = 7;
    if (has_name_regexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name_regexp());
    }

    // optional .toco.InputArrayShape shape = 5;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_);
    }

    // optional double min = 2;
    if (has_min()) {
      total_size += 1 + 8;
    }

    // optional double max = 3;
    if (has_max()) {
      total_size += 1 + 8;
    }

    // optional .toco.IODataType data_type = 4;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
    }

    // optional float constant_float_value = 6;
    if (has_constant_float_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArraysExtraInfo_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.ArraysExtraInfo.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const ArraysExtraInfo_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArraysExtraInfo_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.ArraysExtraInfo.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.ArraysExtraInfo.Entry)
    MergeFrom(*source);
  }
}

void ArraysExtraInfo_Entry::MergeFrom(const ArraysExtraInfo_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.ArraysExtraInfo.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name_regexp();
      name_regexp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_regexp_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_shape()->::toco::InputArrayShape::MergeFrom(from.shape());
    }
    if (cached_has_bits & 0x00000008u) {
      min_ = from.min_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_ = from.max_;
    }
    if (cached_has_bits & 0x00000020u) {
      data_type_ = from.data_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      constant_float_value_ = from.constant_float_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ArraysExtraInfo_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.ArraysExtraInfo.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArraysExtraInfo_Entry::CopyFrom(const ArraysExtraInfo_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.ArraysExtraInfo.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArraysExtraInfo_Entry::IsInitialized() const {
  return true;
}

void ArraysExtraInfo_Entry::Swap(ArraysExtraInfo_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArraysExtraInfo_Entry::InternalSwap(ArraysExtraInfo_Entry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_regexp_.Swap(&other->name_regexp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(data_type_, other->data_type_);
  swap(constant_float_value_, other->constant_float_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArraysExtraInfo_Entry::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArraysExtraInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArraysExtraInfo::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArraysExtraInfo::ArraysExtraInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.ArraysExtraInfo)
}
ArraysExtraInfo::ArraysExtraInfo(const ArraysExtraInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:toco.ArraysExtraInfo)
}

void ArraysExtraInfo::SharedCtor() {
}

ArraysExtraInfo::~ArraysExtraInfo() {
  // @@protoc_insertion_point(destructor:toco.ArraysExtraInfo)
  SharedDtor();
}

void ArraysExtraInfo::SharedDtor() {
}

void ArraysExtraInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArraysExtraInfo::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArraysExtraInfo& ArraysExtraInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ArraysExtraInfo.base);
  return *internal_default_instance();
}


void ArraysExtraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.ArraysExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ArraysExtraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.ArraysExtraInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .toco.ArraysExtraInfo.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.ArraysExtraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.ArraysExtraInfo)
  return false;
#undef DO_
}

void ArraysExtraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.ArraysExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .toco.ArraysExtraInfo.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.ArraysExtraInfo)
}

::google::protobuf::uint8* ArraysExtraInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.ArraysExtraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .toco.ArraysExtraInfo.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.ArraysExtraInfo)
  return target;
}

size_t ArraysExtraInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.ArraysExtraInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .toco.ArraysExtraInfo.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArraysExtraInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.ArraysExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ArraysExtraInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArraysExtraInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.ArraysExtraInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.ArraysExtraInfo)
    MergeFrom(*source);
  }
}

void ArraysExtraInfo::MergeFrom(const ArraysExtraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.ArraysExtraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void ArraysExtraInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.ArraysExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArraysExtraInfo::CopyFrom(const ArraysExtraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.ArraysExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArraysExtraInfo::IsInitialized() const {
  return true;
}

void ArraysExtraInfo::Swap(ArraysExtraInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArraysExtraInfo::InternalSwap(ArraysExtraInfo* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArraysExtraInfo::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelFlags_ModelCheck::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelFlags_ModelCheck::kCountTypeFieldNumber;
const int ModelFlags_ModelCheck::kCountMinFieldNumber;
const int ModelFlags_ModelCheck::kCountMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelFlags_ModelCheck::ModelFlags_ModelCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ModelFlags_ModelCheck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.ModelFlags.ModelCheck)
}
ModelFlags_ModelCheck::ModelFlags_ModelCheck(const ModelFlags_ModelCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_type_.UnsafeSetDefault(&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get());
  if (from.has_count_type()) {
    count_type_.AssignWithDefault(&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get(), from.count_type_);
  }
  ::memcpy(&count_min_, &from.count_min_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_max_) -
    reinterpret_cast<char*>(&count_min_)) + sizeof(count_max_));
  // @@protoc_insertion_point(copy_constructor:toco.ModelFlags.ModelCheck)
}

void ModelFlags_ModelCheck::SharedCtor() {
  count_type_.UnsafeSetDefault(&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get());
  count_min_ = -1;
  count_max_ = -1;
}

ModelFlags_ModelCheck::~ModelFlags_ModelCheck() {
  // @@protoc_insertion_point(destructor:toco.ModelFlags.ModelCheck)
  SharedDtor();
}

void ModelFlags_ModelCheck::SharedDtor() {
  count_type_.DestroyNoArena(&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get());
}

void ModelFlags_ModelCheck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelFlags_ModelCheck::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelFlags_ModelCheck& ModelFlags_ModelCheck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ModelFlags_ModelCheck.base);
  return *internal_default_instance();
}


void ModelFlags_ModelCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.ModelFlags.ModelCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      count_type_.UnsafeMutablePointer()->assign(*&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get());
    }
    count_min_ = -1;
    count_max_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelFlags_ModelCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.ModelFlags.ModelCheck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string count_type = 1 [default = "None"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_count_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->count_type().data(), static_cast<int>(this->count_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.ModelFlags.ModelCheck.count_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count_min = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count_max = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.ModelFlags.ModelCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.ModelFlags.ModelCheck)
  return false;
#undef DO_
}

void ModelFlags_ModelCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.ModelFlags.ModelCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string count_type = 1 [default = "None"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->count_type().data(), static_cast<int>(this->count_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ModelFlags.ModelCheck.count_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->count_type(), output);
  }

  // optional int32 count_min = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count_min(), output);
  }

  // optional int32 count_max = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count_max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.ModelFlags.ModelCheck)
}

::google::protobuf::uint8* ModelFlags_ModelCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.ModelFlags.ModelCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string count_type = 1 [default = "None"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->count_type().data(), static_cast<int>(this->count_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ModelFlags.ModelCheck.count_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->count_type(), target);
  }

  // optional int32 count_min = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count_min(), target);
  }

  // optional int32 count_max = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count_max(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.ModelFlags.ModelCheck)
  return target;
}

size_t ModelFlags_ModelCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.ModelFlags.ModelCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string count_type = 1 [default = "None"];
    if (has_count_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->count_type());
    }

    // optional int32 count_min = 2 [default = -1];
    if (has_count_min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count_min());
    }

    // optional int32 count_max = 3 [default = -1];
    if (has_count_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count_max());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelFlags_ModelCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.ModelFlags.ModelCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelFlags_ModelCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelFlags_ModelCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.ModelFlags.ModelCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.ModelFlags.ModelCheck)
    MergeFrom(*source);
  }
}

void ModelFlags_ModelCheck::MergeFrom(const ModelFlags_ModelCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.ModelFlags.ModelCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_count_type();
      count_type_.AssignWithDefault(&::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get(), from.count_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_min_ = from.count_min_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_max_ = from.count_max_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelFlags_ModelCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.ModelFlags.ModelCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelFlags_ModelCheck::CopyFrom(const ModelFlags_ModelCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.ModelFlags.ModelCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelFlags_ModelCheck::IsInitialized() const {
  return true;
}

void ModelFlags_ModelCheck::Swap(ModelFlags_ModelCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelFlags_ModelCheck::InternalSwap(ModelFlags_ModelCheck* other) {
  using std::swap;
  count_type_.Swap(&other->count_type_, &::toco::ModelFlags_ModelCheck::_i_give_permission_to_break_this_code_default_count_type_.get(),
    GetArenaNoVirtual());
  swap(count_min_, other->count_min_);
  swap(count_max_, other->count_max_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelFlags_ModelCheck::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelFlags::InitAsDefaultInstance() {
  ::toco::_ModelFlags_default_instance_._instance.get_mutable()->arrays_extra_info_ = const_cast< ::toco::ArraysExtraInfo*>(
      ::toco::ArraysExtraInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelFlags::kInputArraysFieldNumber;
const int ModelFlags::kOutputArraysFieldNumber;
const int ModelFlags::kVariableBatchFieldNumber;
const int ModelFlags::kRnnStatesFieldNumber;
const int ModelFlags::kModelChecksFieldNumber;
const int ModelFlags::kAllowNonexistentArraysFieldNumber;
const int ModelFlags::kAllowNonasciiArraysFieldNumber;
const int ModelFlags::kArraysExtraInfoFieldNumber;
const int ModelFlags::kChangeConcatInputRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelFlags::ModelFlags()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ModelFlags.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:toco.ModelFlags)
}
ModelFlags::ModelFlags(const ModelFlags& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      input_arrays_(from.input_arrays_),
      output_arrays_(from.output_arrays_),
      rnn_states_(from.rnn_states_),
      model_checks_(from.model_checks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_arrays_extra_info()) {
    arrays_extra_info_ = new ::toco::ArraysExtraInfo(*from.arrays_extra_info_);
  } else {
    arrays_extra_info_ = NULL;
  }
  ::memcpy(&variable_batch_, &from.variable_batch_,
    static_cast<size_t>(reinterpret_cast<char*>(&change_concat_input_ranges_) -
    reinterpret_cast<char*>(&variable_batch_)) + sizeof(change_concat_input_ranges_));
  // @@protoc_insertion_point(copy_constructor:toco.ModelFlags)
}

void ModelFlags::SharedCtor() {
  ::memset(&arrays_extra_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_nonascii_arrays_) -
      reinterpret_cast<char*>(&arrays_extra_info_)) + sizeof(allow_nonascii_arrays_));
  change_concat_input_ranges_ = true;
}

ModelFlags::~ModelFlags() {
  // @@protoc_insertion_point(destructor:toco.ModelFlags)
  SharedDtor();
}

void ModelFlags::SharedDtor() {
  if (this != internal_default_instance()) delete arrays_extra_info_;
}

void ModelFlags::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelFlags::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelFlags& ModelFlags::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::scc_info_ModelFlags.base);
  return *internal_default_instance();
}


void ModelFlags::Clear() {
// @@protoc_insertion_point(message_clear_start:toco.ModelFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_arrays_.Clear();
  output_arrays_.Clear();
  rnn_states_.Clear();
  model_checks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(arrays_extra_info_ != NULL);
    arrays_extra_info_->Clear();
  }
  ::memset(&variable_batch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_nonascii_arrays_) -
      reinterpret_cast<char*>(&variable_batch_)) + sizeof(allow_nonascii_arrays_));
  change_concat_input_ranges_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelFlags::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:toco.ModelFlags)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .toco.InputArray input_arrays = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_arrays()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string output_arrays = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output_arrays()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_arrays(this->output_arrays_size() - 1).data(),
            static_cast<int>(this->output_arrays(this->output_arrays_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toco.ModelFlags.output_arrays");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool variable_batch = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_variable_batch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &variable_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .toco.RnnState rnn_states = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rnn_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .toco.ModelFlags.ModelCheck model_checks = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_model_checks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_nonexistent_arrays = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_allow_nonexistent_arrays();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_nonexistent_arrays_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_nonascii_arrays = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_allow_nonascii_arrays();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_nonascii_arrays_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .toco.ArraysExtraInfo arrays_extra_info = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arrays_extra_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool change_concat_input_ranges = 19 [default = true];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_change_concat_input_ranges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &change_concat_input_ranges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:toco.ModelFlags)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:toco.ModelFlags)
  return false;
#undef DO_
}

void ModelFlags::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:toco.ModelFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .toco.InputArray input_arrays = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_arrays_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->input_arrays(static_cast<int>(i)),
      output);
  }

  // repeated string output_arrays = 2;
  for (int i = 0, n = this->output_arrays_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_arrays(i).data(), static_cast<int>(this->output_arrays(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ModelFlags.output_arrays");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->output_arrays(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool variable_batch = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->variable_batch(), output);
  }

  // repeated .toco.RnnState rnn_states = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rnn_states_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->rnn_states(static_cast<int>(i)),
      output);
  }

  // repeated .toco.ModelFlags.ModelCheck model_checks = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_checks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->model_checks(static_cast<int>(i)),
      output);
  }

  // optional bool allow_nonexistent_arrays = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->allow_nonexistent_arrays(), output);
  }

  // optional bool allow_nonascii_arrays = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->allow_nonascii_arrays(), output);
  }

  // optional .toco.ArraysExtraInfo arrays_extra_info = 18;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_arrays_extra_info(), output);
  }

  // optional bool change_concat_input_ranges = 19 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->change_concat_input_ranges(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:toco.ModelFlags)
}

::google::protobuf::uint8* ModelFlags::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:toco.ModelFlags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .toco.InputArray input_arrays = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_arrays_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->input_arrays(static_cast<int>(i)), deterministic, target);
  }

  // repeated string output_arrays = 2;
  for (int i = 0, n = this->output_arrays_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_arrays(i).data(), static_cast<int>(this->output_arrays(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toco.ModelFlags.output_arrays");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->output_arrays(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool variable_batch = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->variable_batch(), target);
  }

  // repeated .toco.RnnState rnn_states = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rnn_states_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->rnn_states(static_cast<int>(i)), deterministic, target);
  }

  // repeated .toco.ModelFlags.ModelCheck model_checks = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_checks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->model_checks(static_cast<int>(i)), deterministic, target);
  }

  // optional bool allow_nonexistent_arrays = 16;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->allow_nonexistent_arrays(), target);
  }

  // optional bool allow_nonascii_arrays = 17;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->allow_nonascii_arrays(), target);
  }

  // optional .toco.ArraysExtraInfo arrays_extra_info = 18;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_arrays_extra_info(), deterministic, target);
  }

  // optional bool change_concat_input_ranges = 19 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->change_concat_input_ranges(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toco.ModelFlags)
  return target;
}

size_t ModelFlags::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toco.ModelFlags)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .toco.InputArray input_arrays = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->input_arrays_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_arrays(static_cast<int>(i)));
    }
  }

  // repeated string output_arrays = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_arrays_size());
  for (int i = 0, n = this->output_arrays_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output_arrays(i));
  }

  // repeated .toco.RnnState rnn_states = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->rnn_states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rnn_states(static_cast<int>(i)));
    }
  }

  // repeated .toco.ModelFlags.ModelCheck model_checks = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->model_checks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->model_checks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional .toco.ArraysExtraInfo arrays_extra_info = 18;
    if (has_arrays_extra_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *arrays_extra_info_);
    }

    // optional bool variable_batch = 10;
    if (has_variable_batch()) {
      total_size += 1 + 1;
    }

    // optional bool allow_nonexistent_arrays = 16;
    if (has_allow_nonexistent_arrays()) {
      total_size += 2 + 1;
    }

    // optional bool allow_nonascii_arrays = 17;
    if (has_allow_nonascii_arrays()) {
      total_size += 2 + 1;
    }

    // optional bool change_concat_input_ranges = 19 [default = true];
    if (has_change_concat_input_ranges()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelFlags::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toco.ModelFlags)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelFlags* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelFlags>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toco.ModelFlags)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toco.ModelFlags)
    MergeFrom(*source);
  }
}

void ModelFlags::MergeFrom(const ModelFlags& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toco.ModelFlags)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_arrays_.MergeFrom(from.input_arrays_);
  output_arrays_.MergeFrom(from.output_arrays_);
  rnn_states_.MergeFrom(from.rnn_states_);
  model_checks_.MergeFrom(from.model_checks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_arrays_extra_info()->::toco::ArraysExtraInfo::MergeFrom(from.arrays_extra_info());
    }
    if (cached_has_bits & 0x00000002u) {
      variable_batch_ = from.variable_batch_;
    }
    if (cached_has_bits & 0x00000004u) {
      allow_nonexistent_arrays_ = from.allow_nonexistent_arrays_;
    }
    if (cached_has_bits & 0x00000008u) {
      allow_nonascii_arrays_ = from.allow_nonascii_arrays_;
    }
    if (cached_has_bits & 0x00000010u) {
      change_concat_input_ranges_ = from.change_concat_input_ranges_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelFlags::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toco.ModelFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelFlags::CopyFrom(const ModelFlags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toco.ModelFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelFlags::IsInitialized() const {
  return true;
}

void ModelFlags::Swap(ModelFlags* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelFlags::InternalSwap(ModelFlags* other) {
  using std::swap;
  CastToBase(&input_arrays_)->InternalSwap(CastToBase(&other->input_arrays_));
  output_arrays_.InternalSwap(CastToBase(&other->output_arrays_));
  CastToBase(&rnn_states_)->InternalSwap(CastToBase(&other->rnn_states_));
  CastToBase(&model_checks_)->InternalSwap(CastToBase(&other->model_checks_));
  swap(arrays_extra_info_, other->arrays_extra_info_);
  swap(variable_batch_, other->variable_batch_);
  swap(allow_nonexistent_arrays_, other->allow_nonexistent_arrays_);
  swap(allow_nonascii_arrays_, other->allow_nonascii_arrays_);
  swap(change_concat_input_ranges_, other->change_concat_input_ranges_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelFlags::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2flite_2ftoco_2fmodel_5fflags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace toco
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::InputArrayShape* Arena::CreateMaybeMessage< ::toco::InputArrayShape >(Arena* arena) {
  return Arena::CreateInternal< ::toco::InputArrayShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::InputArray* Arena::CreateMaybeMessage< ::toco::InputArray >(Arena* arena) {
  return Arena::CreateInternal< ::toco::InputArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::RnnState* Arena::CreateMaybeMessage< ::toco::RnnState >(Arena* arena) {
  return Arena::CreateInternal< ::toco::RnnState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::ArraysExtraInfo_Entry* Arena::CreateMaybeMessage< ::toco::ArraysExtraInfo_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::toco::ArraysExtraInfo_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::ArraysExtraInfo* Arena::CreateMaybeMessage< ::toco::ArraysExtraInfo >(Arena* arena) {
  return Arena::CreateInternal< ::toco::ArraysExtraInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::ModelFlags_ModelCheck* Arena::CreateMaybeMessage< ::toco::ModelFlags_ModelCheck >(Arena* arena) {
  return Arena::CreateInternal< ::toco::ModelFlags_ModelCheck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::toco::ModelFlags* Arena::CreateMaybeMessage< ::toco::ModelFlags >(Arena* arena) {
  return Arena::CreateInternal< ::toco::ModelFlags >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
