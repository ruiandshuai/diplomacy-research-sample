// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/core/protobuf/master_service.proto

#include "diplomacy_tensorflow/core/protobuf/master_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace diplomacy {
namespace tensorflow {
namespace grpc {
}  // namespace grpc
}  // namespace tensorflow
}  // namespace diplomacy
namespace protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fmaster_5fservice_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/core/protobuf/master_service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7diplomacy_tensorflow/core/protobuf/mas"
      "ter_service.proto\022\031diplomacy.tensorflow."
      "grpc\032/diplomacy_tensorflow/core/protobuf"
      "/master.proto2\203\010\n\rMasterService\022h\n\rCreat"
      "eSession\022*.diplomacy.tensorflow.CreateSe"
      "ssionRequest\032+.diplomacy.tensorflow.Crea"
      "teSessionResponse\022h\n\rExtendSession\022*.dip"
      "lomacy.tensorflow.ExtendSessionRequest\032+"
      ".diplomacy.tensorflow.ExtendSessionRespo"
      "nse\022n\n\017PartialRunSetup\022,.diplomacy.tenso"
      "rflow.PartialRunSetupRequest\032-.diplomacy"
      ".tensorflow.PartialRunSetupResponse\022V\n\007R"
      "unStep\022$.diplomacy.tensorflow.RunStepReq"
      "uest\032%.diplomacy.tensorflow.RunStepRespo"
      "nse\022e\n\014CloseSession\022).diplomacy.tensorfl"
      "ow.CloseSessionRequest\032*.diplomacy.tenso"
      "rflow.CloseSessionResponse\022b\n\013ListDevice"
      "s\022(.diplomacy.tensorflow.ListDevicesRequ"
      "est\032).diplomacy.tensorflow.ListDevicesRe"
      "sponse\022P\n\005Reset\022\".diplomacy.tensorflow.R"
      "esetRequest\032#.diplomacy.tensorflow.Reset"
      "Response\022e\n\014MakeCallable\022).diplomacy.ten"
      "sorflow.MakeCallableRequest\032*.diplomacy."
      "tensorflow.MakeCallableResponse\022b\n\013RunCa"
      "llable\022(.diplomacy.tensorflow.RunCallabl"
      "eRequest\032).diplomacy.tensorflow.RunCalla"
      "bleResponse\022n\n\017ReleaseCallable\022,.diploma"
      "cy.tensorflow.ReleaseCallableRequest\032-.d"
      "iplomacy.tensorflow.ReleaseCallableRespo"
      "nseBq\n\032org.tensorflow.distruntimeB\023Maste"
      "rServiceProtosP\001Z<github.com/tensorflow/"
      "tensorflow/tensorflow/go/core/protobufb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1286);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/core/protobuf/master_service.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fmaster_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcore_2fprotobuf_2fmaster_5fservice_2eproto
namespace diplomacy {
namespace tensorflow {
namespace grpc {

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
