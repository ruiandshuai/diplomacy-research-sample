// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/stream_executor/logging.proto

#include "diplomacy_tensorflow/stream_executor/logging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComputeCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CudnnVersion;
}  // namespace protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto
namespace stream_executor {
class CudnnVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CudnnVersion>
      _instance;
} _CudnnVersion_default_instance_;
class ComputeCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeCapability>
      _instance;
} _ComputeCapability_default_instance_;
class CudaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CudaInfo>
      _instance;
} _CudaInfo_default_instance_;
}  // namespace stream_executor
namespace protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto {
static void InitDefaultsCudnnVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stream_executor::_CudnnVersion_default_instance_;
    new (ptr) ::stream_executor::CudnnVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stream_executor::CudnnVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CudnnVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCudnnVersion}, {}};

static void InitDefaultsComputeCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stream_executor::_ComputeCapability_default_instance_;
    new (ptr) ::stream_executor::ComputeCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stream_executor::ComputeCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ComputeCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsComputeCapability}, {}};

static void InitDefaultsCudaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stream_executor::_CudaInfo_default_instance_;
    new (ptr) ::stream_executor::CudaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stream_executor::CudaInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CudaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCudaInfo}, {
      &protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_CudnnVersion.base,
      &protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_ComputeCapability.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CudnnVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputeCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CudaInfo.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudnnVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudnnVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudnnVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudnnVersion, patch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::ComputeCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::ComputeCapability, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::ComputeCapability, minor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudaInfo, cudnn_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stream_executor::CudaInfo, compute_capability_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::stream_executor::CudnnVersion)},
  { 8, -1, sizeof(::stream_executor::ComputeCapability)},
  { 15, -1, sizeof(::stream_executor::CudaInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::stream_executor::_CudnnVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::stream_executor::_ComputeCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::stream_executor::_CudaInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/stream_executor/logging.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2diplomacy_tensorflow/stream_executor/l"
      "ogging.proto\022\017stream_executor\";\n\014CudnnVe"
      "rsion\022\r\n\005major\030\001 \001(\005\022\r\n\005minor\030\002 \001(\005\022\r\n\005p"
      "atch\030\003 \001(\005\"1\n\021ComputeCapability\022\r\n\005major"
      "\030\001 \001(\005\022\r\n\005minor\030\002 \001(\005\"\200\001\n\010CudaInfo\0224\n\rcu"
      "dnn_version\030\001 \001(\0132\035.stream_executor.Cudn"
      "nVersion\022>\n\022compute_capability\030\002 \001(\0132\".s"
      "tream_executor.ComputeCapabilityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/stream_executor/logging.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto
namespace stream_executor {

// ===================================================================

void CudnnVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CudnnVersion::kMajorFieldNumber;
const int CudnnVersion::kMinorFieldNumber;
const int CudnnVersion::kPatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CudnnVersion::CudnnVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_CudnnVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stream_executor.CudnnVersion)
}
CudnnVersion::CudnnVersion(const CudnnVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:stream_executor.CudnnVersion)
}

void CudnnVersion::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
}

CudnnVersion::~CudnnVersion() {
  // @@protoc_insertion_point(destructor:stream_executor.CudnnVersion)
  SharedDtor();
}

void CudnnVersion::SharedDtor() {
}

void CudnnVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CudnnVersion::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CudnnVersion& CudnnVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_CudnnVersion.base);
  return *internal_default_instance();
}


void CudnnVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  _internal_metadata_.Clear();
}

bool CudnnVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stream_executor.CudnnVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stream_executor.CudnnVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stream_executor.CudnnVersion)
  return false;
#undef DO_
}

void CudnnVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stream_executor.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->major(), output);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minor(), output);
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->patch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stream_executor.CudnnVersion)
}

::google::protobuf::uint8* CudnnVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stream_executor.CudnnVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->major(), target);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minor(), target);
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->patch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stream_executor.CudnnVersion)
  return target;
}

size_t CudnnVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stream_executor.CudnnVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->major());
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minor());
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->patch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudnnVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stream_executor.CudnnVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CudnnVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CudnnVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stream_executor.CudnnVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stream_executor.CudnnVersion)
    MergeFrom(*source);
  }
}

void CudnnVersion::MergeFrom(const CudnnVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.CudnnVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
  if (from.patch() != 0) {
    set_patch(from.patch());
  }
}

void CudnnVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stream_executor.CudnnVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudnnVersion::CopyFrom(const CudnnVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.CudnnVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudnnVersion::IsInitialized() const {
  return true;
}

void CudnnVersion::Swap(CudnnVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CudnnVersion::InternalSwap(CudnnVersion* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(patch_, other->patch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CudnnVersion::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputeCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeCapability::kMajorFieldNumber;
const int ComputeCapability::kMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeCapability::ComputeCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_ComputeCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stream_executor.ComputeCapability)
}
ComputeCapability::ComputeCapability(const ComputeCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_) -
    reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  // @@protoc_insertion_point(copy_constructor:stream_executor.ComputeCapability)
}

void ComputeCapability::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
}

ComputeCapability::~ComputeCapability() {
  // @@protoc_insertion_point(destructor:stream_executor.ComputeCapability)
  SharedDtor();
}

void ComputeCapability::SharedDtor() {
}

void ComputeCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputeCapability::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeCapability& ComputeCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_ComputeCapability.base);
  return *internal_default_instance();
}


void ComputeCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  _internal_metadata_.Clear();
}

bool ComputeCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stream_executor.ComputeCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stream_executor.ComputeCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stream_executor.ComputeCapability)
  return false;
#undef DO_
}

void ComputeCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stream_executor.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->major(), output);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stream_executor.ComputeCapability)
}

::google::protobuf::uint8* ComputeCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stream_executor.ComputeCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->major(), target);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stream_executor.ComputeCapability)
  return target;
}

size_t ComputeCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stream_executor.ComputeCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->major());
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stream_executor.ComputeCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stream_executor.ComputeCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stream_executor.ComputeCapability)
    MergeFrom(*source);
  }
}

void ComputeCapability::MergeFrom(const ComputeCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.ComputeCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
}

void ComputeCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stream_executor.ComputeCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeCapability::CopyFrom(const ComputeCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.ComputeCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeCapability::IsInitialized() const {
  return true;
}

void ComputeCapability::Swap(ComputeCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputeCapability::InternalSwap(ComputeCapability* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputeCapability::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CudaInfo::InitAsDefaultInstance() {
  ::stream_executor::_CudaInfo_default_instance_._instance.get_mutable()->cudnn_version_ = const_cast< ::stream_executor::CudnnVersion*>(
      ::stream_executor::CudnnVersion::internal_default_instance());
  ::stream_executor::_CudaInfo_default_instance_._instance.get_mutable()->compute_capability_ = const_cast< ::stream_executor::ComputeCapability*>(
      ::stream_executor::ComputeCapability::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CudaInfo::kCudnnVersionFieldNumber;
const int CudaInfo::kComputeCapabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CudaInfo::CudaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_CudaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stream_executor.CudaInfo)
}
CudaInfo::CudaInfo(const CudaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cudnn_version()) {
    cudnn_version_ = new ::stream_executor::CudnnVersion(*from.cudnn_version_);
  } else {
    cudnn_version_ = NULL;
  }
  if (from.has_compute_capability()) {
    compute_capability_ = new ::stream_executor::ComputeCapability(*from.compute_capability_);
  } else {
    compute_capability_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:stream_executor.CudaInfo)
}

void CudaInfo::SharedCtor() {
  ::memset(&cudnn_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compute_capability_) -
      reinterpret_cast<char*>(&cudnn_version_)) + sizeof(compute_capability_));
}

CudaInfo::~CudaInfo() {
  // @@protoc_insertion_point(destructor:stream_executor.CudaInfo)
  SharedDtor();
}

void CudaInfo::SharedDtor() {
  if (this != internal_default_instance()) delete cudnn_version_;
  if (this != internal_default_instance()) delete compute_capability_;
}

void CudaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CudaInfo::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CudaInfo& CudaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::scc_info_CudaInfo.base);
  return *internal_default_instance();
}


void CudaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.CudaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cudnn_version_ != NULL) {
    delete cudnn_version_;
  }
  cudnn_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && compute_capability_ != NULL) {
    delete compute_capability_;
  }
  compute_capability_ = NULL;
  _internal_metadata_.Clear();
}

bool CudaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stream_executor.CudaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .stream_executor.CudnnVersion cudnn_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cudnn_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .stream_executor.ComputeCapability compute_capability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compute_capability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stream_executor.CudaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stream_executor.CudaInfo)
  return false;
#undef DO_
}

void CudaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stream_executor.CudaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .stream_executor.CudnnVersion cudnn_version = 1;
  if (this->has_cudnn_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cudnn_version(), output);
  }

  // .stream_executor.ComputeCapability compute_capability = 2;
  if (this->has_compute_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_compute_capability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stream_executor.CudaInfo)
}

::google::protobuf::uint8* CudaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stream_executor.CudaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .stream_executor.CudnnVersion cudnn_version = 1;
  if (this->has_cudnn_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cudnn_version(), deterministic, target);
  }

  // .stream_executor.ComputeCapability compute_capability = 2;
  if (this->has_compute_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_compute_capability(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stream_executor.CudaInfo)
  return target;
}

size_t CudaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stream_executor.CudaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .stream_executor.CudnnVersion cudnn_version = 1;
  if (this->has_cudnn_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cudnn_version_);
  }

  // .stream_executor.ComputeCapability compute_capability = 2;
  if (this->has_compute_capability()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *compute_capability_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CudaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stream_executor.CudaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CudaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CudaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stream_executor.CudaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stream_executor.CudaInfo)
    MergeFrom(*source);
  }
}

void CudaInfo::MergeFrom(const CudaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.CudaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cudnn_version()) {
    mutable_cudnn_version()->::stream_executor::CudnnVersion::MergeFrom(from.cudnn_version());
  }
  if (from.has_compute_capability()) {
    mutable_compute_capability()->::stream_executor::ComputeCapability::MergeFrom(from.compute_capability());
  }
}

void CudaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stream_executor.CudaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CudaInfo::CopyFrom(const CudaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.CudaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaInfo::IsInitialized() const {
  return true;
}

void CudaInfo::Swap(CudaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CudaInfo::InternalSwap(CudaInfo* other) {
  using std::swap;
  swap(cudnn_version_, other->cudnn_version_);
  swap(compute_capability_, other->compute_capability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CudaInfo::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fstream_5fexecutor_2flogging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace stream_executor
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stream_executor::CudnnVersion* Arena::CreateMaybeMessage< ::stream_executor::CudnnVersion >(Arena* arena) {
  return Arena::CreateInternal< ::stream_executor::CudnnVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stream_executor::ComputeCapability* Arena::CreateMaybeMessage< ::stream_executor::ComputeCapability >(Arena* arena) {
  return Arena::CreateInternal< ::stream_executor::ComputeCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stream_executor::CudaInfo* Arena::CreateMaybeMessage< ::stream_executor::CudaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::stream_executor::CudaInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
