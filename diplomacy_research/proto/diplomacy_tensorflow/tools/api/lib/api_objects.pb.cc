// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/tools/api/lib/api_objects.proto

#include "diplomacy_tensorflow/tools/api/lib/api_objects.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TFAPIMember;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TFAPIMethod;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TFAPIProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TFAPIClass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TFAPIModule;
}  // namespace protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto
namespace protobuf_google_2fprotobuf_2fdescriptor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fdescriptor_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_DescriptorProto;
}  // namespace protobuf_google_2fprotobuf_2fdescriptor_2eproto
namespace third_party {
namespace tensorflow {
namespace tools {
namespace api {
class TFAPIMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIMember>
      _instance;
} _TFAPIMember_default_instance_;
class TFAPIMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIMethod>
      _instance;
} _TFAPIMethod_default_instance_;
class TFAPIModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIModule>
      _instance;
} _TFAPIModule_default_instance_;
class TFAPIClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIClass>
      _instance;
} _TFAPIClass_default_instance_;
class TFAPIProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIProto>
      _instance;
} _TFAPIProto_default_instance_;
class TFAPIObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TFAPIObject>
      _instance;
} _TFAPIObject_default_instance_;
}  // namespace api
}  // namespace tools
}  // namespace tensorflow
}  // namespace third_party
namespace protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto {
static void InitDefaultsTFAPIMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIMember_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIMember::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TFAPIMember =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTFAPIMember}, {}};

static void InitDefaultsTFAPIMethod() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIMethod_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIMethod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TFAPIMethod =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTFAPIMethod}, {}};

static void InitDefaultsTFAPIModule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIModule_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TFAPIModule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTFAPIModule}, {
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMember.base,
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMethod.base,}};

static void InitDefaultsTFAPIClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIClass_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIClass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TFAPIClass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTFAPIClass}, {
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMember.base,
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMethod.base,}};

static void InitDefaultsTFAPIProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIProto_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TFAPIProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTFAPIProto}, {
      &protobuf_google_2fprotobuf_2fdescriptor_2eproto::scc_info_DescriptorProto.base,}};

static void InitDefaultsTFAPIObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::third_party::tensorflow::tools::api::_TFAPIObject_default_instance_;
    new (ptr) ::third_party::tensorflow::tools::api::TFAPIObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::third_party::tensorflow::tools::api::TFAPIObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TFAPIObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTFAPIObject}, {
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIModule.base,
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIClass.base,
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIMember.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIMethod.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIModule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIClass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TFAPIObject.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMember, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMember, mtype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMethod, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMethod, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMethod, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIMethod, argspec_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIModule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIModule, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIModule, member_method_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIClass, is_instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIClass, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIClass, member_method_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIProto, descriptor_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, tf_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, tf_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::third_party::tensorflow::tools::api::TFAPIObject, tf_proto_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::third_party::tensorflow::tools::api::TFAPIMember)},
  { 9, 17, sizeof(::third_party::tensorflow::tools::api::TFAPIMethod)},
  { 20, 27, sizeof(::third_party::tensorflow::tools::api::TFAPIModule)},
  { 29, 37, sizeof(::third_party::tensorflow::tools::api::TFAPIClass)},
  { 40, 46, sizeof(::third_party::tensorflow::tools::api::TFAPIProto)},
  { 47, 56, sizeof(::third_party::tensorflow::tools::api::TFAPIObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::third_party::tensorflow::tools::api::_TFAPIObject_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/tools/api/lib/api_objects.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4diplomacy_tensorflow/tools/api/lib/api"
      "_objects.proto\022 third_party.tensorflow.t"
      "ools.api\032 google/protobuf/descriptor.pro"
      "to\"*\n\013TFAPIMember\022\014\n\004name\030\001 \001(\t\022\r\n\005mtype"
      "\030\002 \001(\t\":\n\013TFAPIMethod\022\014\n\004name\030\001 \001(\t\022\014\n\004p"
      "ath\030\002 \001(\t\022\017\n\007argspec\030\003 \001(\t\"\222\001\n\013TFAPIModu"
      "le\022=\n\006member\030\001 \003(\0132-.third_party.tensorf"
      "low.tools.api.TFAPIMember\022D\n\rmember_meth"
      "od\030\002 \003(\0132-.third_party.tensorflow.tools."
      "api.TFAPIMethod\"\246\001\n\nTFAPIClass\022\023\n\013is_ins"
      "tance\030\001 \003(\t\022=\n\006member\030\002 \003(\0132-.third_part"
      "y.tensorflow.tools.api.TFAPIMember\022D\n\rme"
      "mber_method\030\003 \003(\0132-.third_party.tensorfl"
      "ow.tools.api.TFAPIMethod\"F\n\nTFAPIProto\0224"
      "\n\ndescriptor\030\001 \001(\0132 .google.protobuf.Des"
      "criptorProto:\002\020\001\"\335\001\n\013TFAPIObject\022\014\n\004path"
      "\030\001 \001(\t\022@\n\ttf_module\030\002 \001(\0132-.third_party."
      "tensorflow.tools.api.TFAPIModule\022>\n\010tf_c"
      "lass\030\003 \001(\0132,.third_party.tensorflow.tool"
      "s.api.TFAPIClass\022>\n\010tf_proto\030\004 \001(\0132,.thi"
      "rd_party.tensorflow.tools.api.TFAPIProto"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 840);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/tools/api/lib/api_objects.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto
namespace third_party {
namespace tensorflow {
namespace tools {
namespace api {

// ===================================================================

void TFAPIMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIMember::kNameFieldNumber;
const int TFAPIMember::kMtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIMember::TFAPIMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMember.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIMember)
}
TFAPIMember::TFAPIMember(const TFAPIMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mtype()) {
    mtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mtype_);
  }
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIMember)
}

void TFAPIMember::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TFAPIMember::~TFAPIMember() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIMember)
  SharedDtor();
}

void TFAPIMember::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFAPIMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFAPIMember::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFAPIMember& TFAPIMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMember.base);
  return *internal_default_instance();
}


void TFAPIMember::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mtype_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIMember.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mtype().data(), static_cast<int>(this->mtype().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIMember.mtype");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIMember)
  return false;
#undef DO_
}

void TFAPIMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMember.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mtype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mtype().data(), static_cast<int>(this->mtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMember.mtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIMember)
}

::google::protobuf::uint8* TFAPIMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMember.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mtype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mtype().data(), static_cast<int>(this->mtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMember.mtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIMember)
  return target;
}

size_t TFAPIMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mtype = 2;
    if (has_mtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIMember)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIMember)
    MergeFrom(*source);
  }
}

void TFAPIMember::MergeFrom(const TFAPIMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mtype();
      mtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mtype_);
    }
  }
}

void TFAPIMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIMember::CopyFrom(const TFAPIMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIMember::IsInitialized() const {
  return true;
}

void TFAPIMember::Swap(TFAPIMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIMember::InternalSwap(TFAPIMember* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mtype_.Swap(&other->mtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIMember::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFAPIMethod::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIMethod::kNameFieldNumber;
const int TFAPIMethod::kPathFieldNumber;
const int TFAPIMethod::kArgspecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIMethod::TFAPIMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMethod.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIMethod)
}
TFAPIMethod::TFAPIMethod(const TFAPIMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  argspec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_argspec()) {
    argspec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.argspec_);
  }
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIMethod)
}

void TFAPIMethod::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argspec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TFAPIMethod::~TFAPIMethod() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIMethod)
  SharedDtor();
}

void TFAPIMethod::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argspec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFAPIMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFAPIMethod::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFAPIMethod& TFAPIMethod::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIMethod.base);
  return *internal_default_instance();
}


void TFAPIMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      argspec_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIMethod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIMethod.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIMethod.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string argspec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_argspec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->argspec().data(), static_cast<int>(this->argspec().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIMethod.argspec");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIMethod)
  return false;
#undef DO_
}

void TFAPIMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional string argspec = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->argspec().data(), static_cast<int>(this->argspec().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.argspec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->argspec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIMethod)
}

::google::protobuf::uint8* TFAPIMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional string argspec = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->argspec().data(), static_cast<int>(this->argspec().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIMethod.argspec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->argspec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIMethod)
  return target;
}

size_t TFAPIMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIMethod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string argspec = 3;
    if (has_argspec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->argspec());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIMethod)
    MergeFrom(*source);
  }
}

void TFAPIMethod::MergeFrom(const TFAPIMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_argspec();
      argspec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.argspec_);
    }
  }
}

void TFAPIMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIMethod::CopyFrom(const TFAPIMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIMethod::IsInitialized() const {
  return true;
}

void TFAPIMethod::Swap(TFAPIMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIMethod::InternalSwap(TFAPIMethod* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  argspec_.Swap(&other->argspec_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIMethod::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFAPIModule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIModule::kMemberFieldNumber;
const int TFAPIModule::kMemberMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIModule::TFAPIModule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIModule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIModule)
}
TFAPIModule::TFAPIModule(const TFAPIModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      member_(from.member_),
      member_method_(from.member_method_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIModule)
}

void TFAPIModule::SharedCtor() {
}

TFAPIModule::~TFAPIModule() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIModule)
  SharedDtor();
}

void TFAPIModule::SharedDtor() {
}

void TFAPIModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFAPIModule::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFAPIModule& TFAPIModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIModule.base);
  return *internal_default_instance();
}


void TFAPIModule::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_.Clear();
  member_method_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_member_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIModule)
  return false;
#undef DO_
}

void TFAPIModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->member(static_cast<int>(i)),
      output);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_method_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->member_method(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIModule)
}

::google::protobuf::uint8* TFAPIModule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->member(static_cast<int>(i)), deterministic, target);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_method_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member_method(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIModule)
  return target;
}

size_t TFAPIModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_method_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member_method(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIModule)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIModule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIModule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIModule)
    MergeFrom(*source);
  }
}

void TFAPIModule::MergeFrom(const TFAPIModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_.MergeFrom(from.member_);
  member_method_.MergeFrom(from.member_method_);
}

void TFAPIModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIModule::CopyFrom(const TFAPIModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIModule::IsInitialized() const {
  return true;
}

void TFAPIModule::Swap(TFAPIModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIModule::InternalSwap(TFAPIModule* other) {
  using std::swap;
  CastToBase(&member_)->InternalSwap(CastToBase(&other->member_));
  CastToBase(&member_method_)->InternalSwap(CastToBase(&other->member_method_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIModule::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFAPIClass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIClass::kIsInstanceFieldNumber;
const int TFAPIClass::kMemberFieldNumber;
const int TFAPIClass::kMemberMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIClass::TFAPIClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIClass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIClass)
}
TFAPIClass::TFAPIClass(const TFAPIClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      is_instance_(from.is_instance_),
      member_(from.member_),
      member_method_(from.member_method_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIClass)
}

void TFAPIClass::SharedCtor() {
}

TFAPIClass::~TFAPIClass() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIClass)
  SharedDtor();
}

void TFAPIClass::SharedDtor() {
}

void TFAPIClass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFAPIClass::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFAPIClass& TFAPIClass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIClass.base);
  return *internal_default_instance();
}


void TFAPIClass::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_instance_.Clear();
  member_.Clear();
  member_method_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIClass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string is_instance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_is_instance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->is_instance(this->is_instance_size() - 1).data(),
            static_cast<int>(this->is_instance(this->is_instance_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIClass.is_instance");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_member_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIClass)
  return false;
#undef DO_
}

void TFAPIClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string is_instance = 1;
  for (int i = 0, n = this->is_instance_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->is_instance(i).data(), static_cast<int>(this->is_instance(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIClass.is_instance");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->is_instance(i), output);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->member(static_cast<int>(i)),
      output);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_method_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->member_method(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIClass)
}

::google::protobuf::uint8* TFAPIClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string is_instance = 1;
  for (int i = 0, n = this->is_instance_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->is_instance(i).data(), static_cast<int>(this->is_instance(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIClass.is_instance");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->is_instance(i), target);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member(static_cast<int>(i)), deterministic, target);
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_method_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->member_method(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIClass)
  return target;
}

size_t TFAPIClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string is_instance = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->is_instance_size());
  for (int i = 0, n = this->is_instance_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->is_instance(i));
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMember member = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  // repeated .third_party.tensorflow.tools.api.TFAPIMethod member_method = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->member_method_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member_method(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIClass)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIClass)
    MergeFrom(*source);
  }
}

void TFAPIClass::MergeFrom(const TFAPIClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  is_instance_.MergeFrom(from.is_instance_);
  member_.MergeFrom(from.member_);
  member_method_.MergeFrom(from.member_method_);
}

void TFAPIClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIClass::CopyFrom(const TFAPIClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIClass::IsInitialized() const {
  return true;
}

void TFAPIClass::Swap(TFAPIClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIClass::InternalSwap(TFAPIClass* other) {
  using std::swap;
  is_instance_.InternalSwap(CastToBase(&other->is_instance_));
  CastToBase(&member_)->InternalSwap(CastToBase(&other->member_));
  CastToBase(&member_method_)->InternalSwap(CastToBase(&other->member_method_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIClass::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFAPIProto::InitAsDefaultInstance() {
  ::third_party::tensorflow::tools::api::_TFAPIProto_default_instance_._instance.get_mutable()->descriptor_ = const_cast< ::google::protobuf::DescriptorProto*>(
      ::google::protobuf::DescriptorProto::internal_default_instance());
}
void TFAPIProto::clear_descriptor() {
  if (descriptor_ != NULL) descriptor_->Clear();
  clear_has_descriptor();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIProto::kDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIProto::TFAPIProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIProto)
}
TFAPIProto::TFAPIProto(const TFAPIProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_descriptor()) {
    descriptor_ = new ::google::protobuf::DescriptorProto(*from.descriptor_);
  } else {
    descriptor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIProto)
}

void TFAPIProto::SharedCtor() {
  descriptor_ = NULL;
}

TFAPIProto::~TFAPIProto() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIProto)
  SharedDtor();
}

void TFAPIProto::SharedDtor() {
  if (this != internal_default_instance()) delete descriptor_;
}

void TFAPIProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TFAPIProto& TFAPIProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIProto.base);
  return *internal_default_instance();
}


void TFAPIProto::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(descriptor_ != NULL);
    descriptor_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.DescriptorProto descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIProto)
  return false;
#undef DO_
}

void TFAPIProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .google.protobuf.DescriptorProto descriptor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_descriptor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIProto)
}

::google::protobuf::uint8* TFAPIProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .google.protobuf.DescriptorProto descriptor = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_descriptor(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIProto)
  return target;
}

size_t TFAPIProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .google.protobuf.DescriptorProto descriptor = 1;
  if (has_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *descriptor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIProto)
    MergeFrom(*source);
  }
}

void TFAPIProto::MergeFrom(const TFAPIProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_descriptor()) {
    mutable_descriptor()->::google::protobuf::DescriptorProto::MergeFrom(from.descriptor());
  }
}

void TFAPIProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIProto::CopyFrom(const TFAPIProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIProto::IsInitialized() const {
  if (has_descriptor()) {
    if (!this->descriptor_->IsInitialized()) return false;
  }
  return true;
}

void TFAPIProto::Swap(TFAPIProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIProto::InternalSwap(TFAPIProto* other) {
  using std::swap;
  swap(descriptor_, other->descriptor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TFAPIObject::InitAsDefaultInstance() {
  ::third_party::tensorflow::tools::api::_TFAPIObject_default_instance_._instance.get_mutable()->tf_module_ = const_cast< ::third_party::tensorflow::tools::api::TFAPIModule*>(
      ::third_party::tensorflow::tools::api::TFAPIModule::internal_default_instance());
  ::third_party::tensorflow::tools::api::_TFAPIObject_default_instance_._instance.get_mutable()->tf_class_ = const_cast< ::third_party::tensorflow::tools::api::TFAPIClass*>(
      ::third_party::tensorflow::tools::api::TFAPIClass::internal_default_instance());
  ::third_party::tensorflow::tools::api::_TFAPIObject_default_instance_._instance.get_mutable()->tf_proto_ = const_cast< ::third_party::tensorflow::tools::api::TFAPIProto*>(
      ::third_party::tensorflow::tools::api::TFAPIProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFAPIObject::kPathFieldNumber;
const int TFAPIObject::kTfModuleFieldNumber;
const int TFAPIObject::kTfClassFieldNumber;
const int TFAPIObject::kTfProtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFAPIObject::TFAPIObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:third_party.tensorflow.tools.api.TFAPIObject)
}
TFAPIObject::TFAPIObject(const TFAPIObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_tf_module()) {
    tf_module_ = new ::third_party::tensorflow::tools::api::TFAPIModule(*from.tf_module_);
  } else {
    tf_module_ = NULL;
  }
  if (from.has_tf_class()) {
    tf_class_ = new ::third_party::tensorflow::tools::api::TFAPIClass(*from.tf_class_);
  } else {
    tf_class_ = NULL;
  }
  if (from.has_tf_proto()) {
    tf_proto_ = new ::third_party::tensorflow::tools::api::TFAPIProto(*from.tf_proto_);
  } else {
    tf_proto_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:third_party.tensorflow.tools.api.TFAPIObject)
}

void TFAPIObject::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tf_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tf_proto_) -
      reinterpret_cast<char*>(&tf_module_)) + sizeof(tf_proto_));
}

TFAPIObject::~TFAPIObject() {
  // @@protoc_insertion_point(destructor:third_party.tensorflow.tools.api.TFAPIObject)
  SharedDtor();
}

void TFAPIObject::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tf_module_;
  if (this != internal_default_instance()) delete tf_class_;
  if (this != internal_default_instance()) delete tf_proto_;
}

void TFAPIObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TFAPIObject::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFAPIObject& TFAPIObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::scc_info_TFAPIObject.base);
  return *internal_default_instance();
}


void TFAPIObject::Clear() {
// @@protoc_insertion_point(message_clear_start:third_party.tensorflow.tools.api.TFAPIObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(tf_module_ != NULL);
      tf_module_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(tf_class_ != NULL);
      tf_class_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(tf_proto_ != NULL);
      tf_proto_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFAPIObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:third_party.tensorflow.tools.api.TFAPIObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "third_party.tensorflow.tools.api.TFAPIObject.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .third_party.tensorflow.tools.api.TFAPIModule tf_module = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tf_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .third_party.tensorflow.tools.api.TFAPIClass tf_class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tf_class()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .third_party.tensorflow.tools.api.TFAPIProto tf_proto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tf_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:third_party.tensorflow.tools.api.TFAPIObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:third_party.tensorflow.tools.api.TFAPIObject)
  return false;
#undef DO_
}

void TFAPIObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:third_party.tensorflow.tools.api.TFAPIObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIObject.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIModule tf_module = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tf_module(), output);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIClass tf_class = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_tf_class(), output);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIProto tf_proto = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_tf_proto(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:third_party.tensorflow.tools.api.TFAPIObject)
}

::google::protobuf::uint8* TFAPIObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:third_party.tensorflow.tools.api.TFAPIObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "third_party.tensorflow.tools.api.TFAPIObject.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIModule tf_module = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tf_module(), deterministic, target);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIClass tf_class = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_tf_class(), deterministic, target);
  }

  // optional .third_party.tensorflow.tools.api.TFAPIProto tf_proto = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_tf_proto(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:third_party.tensorflow.tools.api.TFAPIObject)
  return target;
}

size_t TFAPIObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:third_party.tensorflow.tools.api.TFAPIObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional .third_party.tensorflow.tools.api.TFAPIModule tf_module = 2;
    if (has_tf_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tf_module_);
    }

    // optional .third_party.tensorflow.tools.api.TFAPIClass tf_class = 3;
    if (has_tf_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tf_class_);
    }

    // optional .third_party.tensorflow.tools.api.TFAPIProto tf_proto = 4;
    if (has_tf_proto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tf_proto_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TFAPIObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:third_party.tensorflow.tools.api.TFAPIObject)
  GOOGLE_DCHECK_NE(&from, this);
  const TFAPIObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFAPIObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:third_party.tensorflow.tools.api.TFAPIObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:third_party.tensorflow.tools.api.TFAPIObject)
    MergeFrom(*source);
  }
}

void TFAPIObject::MergeFrom(const TFAPIObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:third_party.tensorflow.tools.api.TFAPIObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_tf_module()->::third_party::tensorflow::tools::api::TFAPIModule::MergeFrom(from.tf_module());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_tf_class()->::third_party::tensorflow::tools::api::TFAPIClass::MergeFrom(from.tf_class());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_tf_proto()->::third_party::tensorflow::tools::api::TFAPIProto::MergeFrom(from.tf_proto());
    }
  }
}

void TFAPIObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:third_party.tensorflow.tools.api.TFAPIObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFAPIObject::CopyFrom(const TFAPIObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:third_party.tensorflow.tools.api.TFAPIObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFAPIObject::IsInitialized() const {
  if (has_tf_proto()) {
    if (!this->tf_proto_->IsInitialized()) return false;
  }
  return true;
}

void TFAPIObject::Swap(TFAPIObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFAPIObject::InternalSwap(TFAPIObject* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tf_module_, other->tf_module_);
  swap(tf_class_, other->tf_class_);
  swap(tf_proto_, other->tf_proto_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TFAPIObject::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2ftools_2fapi_2flib_2fapi_5fobjects_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace tools
}  // namespace tensorflow
}  // namespace third_party
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIMember* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIMember >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIMethod* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIMethod >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIMethod >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIModule* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIModule >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIModule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIClass* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIClass >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIClass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIProto* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIProto >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::third_party::tensorflow::tools::api::TFAPIObject* Arena::CreateMaybeMessage< ::third_party::tensorflow::tools::api::TFAPIObject >(Arena* arena) {
  return Arena::CreateInternal< ::third_party::tensorflow::tools::api::TFAPIObject >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
