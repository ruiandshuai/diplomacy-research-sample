// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/python/saved_model/saved_object_graph.proto

#ifndef PROTOBUF_INCLUDED_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto
#define PROTOBUF_INCLUDED_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "diplomacy_tensorflow/core/protobuf/checkpointable_object_graph.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto 

namespace protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto
namespace diplomacy {
namespace tensorflow {
class SavedAsset;
class SavedAssetDefaultTypeInternal;
extern SavedAssetDefaultTypeInternal _SavedAsset_default_instance_;
class SavedMonomorphicFunction;
class SavedMonomorphicFunctionDefaultTypeInternal;
extern SavedMonomorphicFunctionDefaultTypeInternal _SavedMonomorphicFunction_default_instance_;
class SavedObject;
class SavedObjectDefaultTypeInternal;
extern SavedObjectDefaultTypeInternal _SavedObject_default_instance_;
class SavedObjectGraph;
class SavedObjectGraphDefaultTypeInternal;
extern SavedObjectGraphDefaultTypeInternal _SavedObjectGraph_default_instance_;
class SavedPolymorphicFunction;
class SavedPolymorphicFunctionDefaultTypeInternal;
extern SavedPolymorphicFunctionDefaultTypeInternal _SavedPolymorphicFunction_default_instance_;
class SavedUserObject;
class SavedUserObjectDefaultTypeInternal;
extern SavedUserObjectDefaultTypeInternal _SavedUserObject_default_instance_;
}  // namespace tensorflow
}  // namespace diplomacy
namespace google {
namespace protobuf {
template<> ::diplomacy::tensorflow::SavedAsset* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedAsset>(Arena*);
template<> ::diplomacy::tensorflow::SavedMonomorphicFunction* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedMonomorphicFunction>(Arena*);
template<> ::diplomacy::tensorflow::SavedObject* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedObject>(Arena*);
template<> ::diplomacy::tensorflow::SavedObjectGraph* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedObjectGraph>(Arena*);
template<> ::diplomacy::tensorflow::SavedPolymorphicFunction* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedPolymorphicFunction>(Arena*);
template<> ::diplomacy::tensorflow::SavedUserObject* Arena::CreateMaybeMessage<::diplomacy::tensorflow::SavedUserObject>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace diplomacy {
namespace tensorflow {

// ===================================================================

class SavedObjectGraph : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedObjectGraph) */ {
 public:
  SavedObjectGraph();
  virtual ~SavedObjectGraph();

  SavedObjectGraph(const SavedObjectGraph& from);

  inline SavedObjectGraph& operator=(const SavedObjectGraph& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedObjectGraph(SavedObjectGraph&& from) noexcept
    : SavedObjectGraph() {
    *this = ::std::move(from);
  }

  inline SavedObjectGraph& operator=(SavedObjectGraph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedObjectGraph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedObjectGraph* internal_default_instance() {
    return reinterpret_cast<const SavedObjectGraph*>(
               &_SavedObjectGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(SavedObjectGraph* other);
  void Swap(SavedObjectGraph* other);
  friend void swap(SavedObjectGraph& a, SavedObjectGraph& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedObjectGraph* New() const final {
    return CreateMaybeMessage<SavedObjectGraph>(NULL);
  }

  SavedObjectGraph* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedObjectGraph>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedObjectGraph& from);
  void MergeFrom(const SavedObjectGraph& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedObjectGraph* other);
  protected:
  explicit SavedObjectGraph(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .diplomacy.tensorflow.SavedObject nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::diplomacy::tensorflow::SavedObject* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedObject >*
      mutable_nodes();
  const ::diplomacy::tensorflow::SavedObject& nodes(int index) const;
  ::diplomacy::tensorflow::SavedObject* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedObject >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedObjectGraph)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedObject > nodes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedObject) */ {
 public:
  SavedObject();
  virtual ~SavedObject();

  SavedObject(const SavedObject& from);

  inline SavedObject& operator=(const SavedObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedObject(SavedObject&& from) noexcept
    : SavedObject() {
    *this = ::std::move(from);
  }

  inline SavedObject& operator=(SavedObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedObject& default_instance();

  enum KindCase {
    kUserObject = 4,
    kAsset = 5,
    kFunction = 6,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedObject* internal_default_instance() {
    return reinterpret_cast<const SavedObject*>(
               &_SavedObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(SavedObject* other);
  void Swap(SavedObject* other);
  friend void swap(SavedObject& a, SavedObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedObject* New() const final {
    return CreateMaybeMessage<SavedObject>(NULL);
  }

  SavedObject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedObject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedObject& from);
  void MergeFrom(const SavedObject& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedObject* other);
  protected:
  explicit SavedObject(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .diplomacy.tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 1;
  ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >*
      mutable_children();
  const ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference& children(int index) const;
  ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* add_children();
  const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >&
      children() const;

  // repeated .diplomacy.tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
  int slot_variables_size() const;
  void clear_slot_variables();
  static const int kSlotVariablesFieldNumber = 3;
  ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* mutable_slot_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >*
      mutable_slot_variables();
  const ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& slot_variables(int index) const;
  ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* add_slot_variables();
  const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >&
      slot_variables() const;

  // .diplomacy.tensorflow.SavedUserObject user_object = 4;
  bool has_user_object() const;
  void clear_user_object();
  static const int kUserObjectFieldNumber = 4;
  private:
  const ::diplomacy::tensorflow::SavedUserObject& _internal_user_object() const;
  public:
  const ::diplomacy::tensorflow::SavedUserObject& user_object() const;
  ::diplomacy::tensorflow::SavedUserObject* release_user_object();
  ::diplomacy::tensorflow::SavedUserObject* mutable_user_object();
  void set_allocated_user_object(::diplomacy::tensorflow::SavedUserObject* user_object);
  void unsafe_arena_set_allocated_user_object(
      ::diplomacy::tensorflow::SavedUserObject* user_object);
  ::diplomacy::tensorflow::SavedUserObject* unsafe_arena_release_user_object();

  // .diplomacy.tensorflow.SavedAsset asset = 5;
  bool has_asset() const;
  void clear_asset();
  static const int kAssetFieldNumber = 5;
  private:
  const ::diplomacy::tensorflow::SavedAsset& _internal_asset() const;
  public:
  const ::diplomacy::tensorflow::SavedAsset& asset() const;
  ::diplomacy::tensorflow::SavedAsset* release_asset();
  ::diplomacy::tensorflow::SavedAsset* mutable_asset();
  void set_allocated_asset(::diplomacy::tensorflow::SavedAsset* asset);
  void unsafe_arena_set_allocated_asset(
      ::diplomacy::tensorflow::SavedAsset* asset);
  ::diplomacy::tensorflow::SavedAsset* unsafe_arena_release_asset();

  // .diplomacy.tensorflow.SavedPolymorphicFunction function = 6;
  bool has_function() const;
  void clear_function();
  static const int kFunctionFieldNumber = 6;
  private:
  const ::diplomacy::tensorflow::SavedPolymorphicFunction& _internal_function() const;
  public:
  const ::diplomacy::tensorflow::SavedPolymorphicFunction& function() const;
  ::diplomacy::tensorflow::SavedPolymorphicFunction* release_function();
  ::diplomacy::tensorflow::SavedPolymorphicFunction* mutable_function();
  void set_allocated_function(::diplomacy::tensorflow::SavedPolymorphicFunction* function);
  void unsafe_arena_set_allocated_function(
      ::diplomacy::tensorflow::SavedPolymorphicFunction* function);
  ::diplomacy::tensorflow::SavedPolymorphicFunction* unsafe_arena_release_function();

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedObject)
 private:
  void set_has_user_object();
  void set_has_asset();
  void set_has_function();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference > children_;
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference > slot_variables_;
  union KindUnion {
    KindUnion() {}
    ::diplomacy::tensorflow::SavedUserObject* user_object_;
    ::diplomacy::tensorflow::SavedAsset* asset_;
    ::diplomacy::tensorflow::SavedPolymorphicFunction* function_;
  } kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedUserObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedUserObject) */ {
 public:
  SavedUserObject();
  virtual ~SavedUserObject();

  SavedUserObject(const SavedUserObject& from);

  inline SavedUserObject& operator=(const SavedUserObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedUserObject(SavedUserObject&& from) noexcept
    : SavedUserObject() {
    *this = ::std::move(from);
  }

  inline SavedUserObject& operator=(SavedUserObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedUserObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedUserObject* internal_default_instance() {
    return reinterpret_cast<const SavedUserObject*>(
               &_SavedUserObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(SavedUserObject* other);
  void Swap(SavedUserObject* other);
  friend void swap(SavedUserObject& a, SavedUserObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedUserObject* New() const final {
    return CreateMaybeMessage<SavedUserObject>(NULL);
  }

  SavedUserObject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedUserObject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedUserObject& from);
  void MergeFrom(const SavedUserObject& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedUserObject* other);
  protected:
  explicit SavedUserObject(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedUserObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedAsset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedAsset) */ {
 public:
  SavedAsset();
  virtual ~SavedAsset();

  SavedAsset(const SavedAsset& from);

  inline SavedAsset& operator=(const SavedAsset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedAsset(SavedAsset&& from) noexcept
    : SavedAsset() {
    *this = ::std::move(from);
  }

  inline SavedAsset& operator=(SavedAsset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedAsset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedAsset* internal_default_instance() {
    return reinterpret_cast<const SavedAsset*>(
               &_SavedAsset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(SavedAsset* other);
  void Swap(SavedAsset* other);
  friend void swap(SavedAsset& a, SavedAsset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedAsset* New() const final {
    return CreateMaybeMessage<SavedAsset>(NULL);
  }

  SavedAsset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedAsset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedAsset& from);
  void MergeFrom(const SavedAsset& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedAsset* other);
  protected:
  explicit SavedAsset(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 asset_file_def_index = 1;
  void clear_asset_file_def_index();
  static const int kAssetFileDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 asset_file_def_index() const;
  void set_asset_file_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedAsset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 asset_file_def_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedPolymorphicFunction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedPolymorphicFunction) */ {
 public:
  SavedPolymorphicFunction();
  virtual ~SavedPolymorphicFunction();

  SavedPolymorphicFunction(const SavedPolymorphicFunction& from);

  inline SavedPolymorphicFunction& operator=(const SavedPolymorphicFunction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedPolymorphicFunction(SavedPolymorphicFunction&& from) noexcept
    : SavedPolymorphicFunction() {
    *this = ::std::move(from);
  }

  inline SavedPolymorphicFunction& operator=(SavedPolymorphicFunction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedPolymorphicFunction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedPolymorphicFunction* internal_default_instance() {
    return reinterpret_cast<const SavedPolymorphicFunction*>(
               &_SavedPolymorphicFunction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(SavedPolymorphicFunction* other);
  void Swap(SavedPolymorphicFunction* other);
  friend void swap(SavedPolymorphicFunction& a, SavedPolymorphicFunction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedPolymorphicFunction* New() const final {
    return CreateMaybeMessage<SavedPolymorphicFunction>(NULL);
  }

  SavedPolymorphicFunction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedPolymorphicFunction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedPolymorphicFunction& from);
  void MergeFrom(const SavedPolymorphicFunction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedPolymorphicFunction* other);
  protected:
  explicit SavedPolymorphicFunction(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .diplomacy.tensorflow.SavedMonomorphicFunction monomorphic_function = 1;
  int monomorphic_function_size() const;
  void clear_monomorphic_function();
  static const int kMonomorphicFunctionFieldNumber = 1;
  ::diplomacy::tensorflow::SavedMonomorphicFunction* mutable_monomorphic_function(int index);
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedMonomorphicFunction >*
      mutable_monomorphic_function();
  const ::diplomacy::tensorflow::SavedMonomorphicFunction& monomorphic_function(int index) const;
  ::diplomacy::tensorflow::SavedMonomorphicFunction* add_monomorphic_function();
  const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedMonomorphicFunction >&
      monomorphic_function() const;

  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedPolymorphicFunction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedMonomorphicFunction > monomorphic_function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedMonomorphicFunction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy.tensorflow.SavedMonomorphicFunction) */ {
 public:
  SavedMonomorphicFunction();
  virtual ~SavedMonomorphicFunction();

  SavedMonomorphicFunction(const SavedMonomorphicFunction& from);

  inline SavedMonomorphicFunction& operator=(const SavedMonomorphicFunction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedMonomorphicFunction(SavedMonomorphicFunction&& from) noexcept
    : SavedMonomorphicFunction() {
    *this = ::std::move(from);
  }

  inline SavedMonomorphicFunction& operator=(SavedMonomorphicFunction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedMonomorphicFunction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedMonomorphicFunction* internal_default_instance() {
    return reinterpret_cast<const SavedMonomorphicFunction*>(
               &_SavedMonomorphicFunction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(SavedMonomorphicFunction* other);
  void Swap(SavedMonomorphicFunction* other);
  friend void swap(SavedMonomorphicFunction& a, SavedMonomorphicFunction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedMonomorphicFunction* New() const final {
    return CreateMaybeMessage<SavedMonomorphicFunction>(NULL);
  }

  SavedMonomorphicFunction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedMonomorphicFunction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedMonomorphicFunction& from);
  void MergeFrom(const SavedMonomorphicFunction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedMonomorphicFunction* other);
  protected:
  explicit SavedMonomorphicFunction(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string concrete_function = 1;
  void clear_concrete_function();
  static const int kConcreteFunctionFieldNumber = 1;
  const ::std::string& concrete_function() const;
  void set_concrete_function(const ::std::string& value);
  #if LANG_CXX11
  void set_concrete_function(::std::string&& value);
  #endif
  void set_concrete_function(const char* value);
  void set_concrete_function(const char* value, size_t size);
  ::std::string* mutable_concrete_function();
  ::std::string* release_concrete_function();
  void set_allocated_concrete_function(::std::string* concrete_function);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_concrete_function();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_concrete_function(
      ::std::string* concrete_function);

  // @@protoc_insertion_point(class_scope:diplomacy.tensorflow.SavedMonomorphicFunction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr concrete_function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SavedObjectGraph

// repeated .diplomacy.tensorflow.SavedObject nodes = 1;
inline int SavedObjectGraph::nodes_size() const {
  return nodes_.size();
}
inline void SavedObjectGraph::clear_nodes() {
  nodes_.Clear();
}
inline ::diplomacy::tensorflow::SavedObject* SavedObjectGraph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObjectGraph.nodes)
  return nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedObject >*
SavedObjectGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy.tensorflow.SavedObjectGraph.nodes)
  return &nodes_;
}
inline const ::diplomacy::tensorflow::SavedObject& SavedObjectGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObjectGraph.nodes)
  return nodes_.Get(index);
}
inline ::diplomacy::tensorflow::SavedObject* SavedObjectGraph::add_nodes() {
  // @@protoc_insertion_point(field_add:diplomacy.tensorflow.SavedObjectGraph.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedObject >&
SavedObjectGraph::nodes() const {
  // @@protoc_insertion_point(field_list:diplomacy.tensorflow.SavedObjectGraph.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// SavedObject

// repeated .diplomacy.tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
inline int SavedObject::children_size() const {
  return children_.size();
}
inline ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* SavedObject::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObject.children)
  return children_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >*
SavedObject::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy.tensorflow.SavedObject.children)
  return &children_;
}
inline const ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference& SavedObject::children(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObject.children)
  return children_.Get(index);
}
inline ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* SavedObject::add_children() {
  // @@protoc_insertion_point(field_add:diplomacy.tensorflow.SavedObject.children)
  return children_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >&
SavedObject::children() const {
  // @@protoc_insertion_point(field_list:diplomacy.tensorflow.SavedObject.children)
  return children_;
}

// repeated .diplomacy.tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
inline int SavedObject::slot_variables_size() const {
  return slot_variables_.size();
}
inline ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* SavedObject::mutable_slot_variables(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObject.slot_variables)
  return slot_variables_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >*
SavedObject::mutable_slot_variables() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy.tensorflow.SavedObject.slot_variables)
  return &slot_variables_;
}
inline const ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& SavedObject::slot_variables(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObject.slot_variables)
  return slot_variables_.Get(index);
}
inline ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* SavedObject::add_slot_variables() {
  // @@protoc_insertion_point(field_add:diplomacy.tensorflow.SavedObject.slot_variables)
  return slot_variables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >&
SavedObject::slot_variables() const {
  // @@protoc_insertion_point(field_list:diplomacy.tensorflow.SavedObject.slot_variables)
  return slot_variables_;
}

// .diplomacy.tensorflow.SavedUserObject user_object = 4;
inline bool SavedObject::has_user_object() const {
  return kind_case() == kUserObject;
}
inline void SavedObject::set_has_user_object() {
  _oneof_case_[0] = kUserObject;
}
inline void SavedObject::clear_user_object() {
  if (has_user_object()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.user_object_;
    }
    clear_has_kind();
  }
}
inline const ::diplomacy::tensorflow::SavedUserObject& SavedObject::_internal_user_object() const {
  return *kind_.user_object_;
}
inline ::diplomacy::tensorflow::SavedUserObject* SavedObject::release_user_object() {
  // @@protoc_insertion_point(field_release:diplomacy.tensorflow.SavedObject.user_object)
  if (has_user_object()) {
    clear_has_kind();
      ::diplomacy::tensorflow::SavedUserObject* temp = kind_.user_object_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.user_object_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::diplomacy::tensorflow::SavedUserObject& SavedObject::user_object() const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObject.user_object)
  return has_user_object()
      ? *kind_.user_object_
      : *reinterpret_cast< ::diplomacy::tensorflow::SavedUserObject*>(&::diplomacy::tensorflow::_SavedUserObject_default_instance_);
}
inline ::diplomacy::tensorflow::SavedUserObject* SavedObject::unsafe_arena_release_user_object() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy.tensorflow.SavedObject.user_object)
  if (has_user_object()) {
    clear_has_kind();
    ::diplomacy::tensorflow::SavedUserObject* temp = kind_.user_object_;
    kind_.user_object_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SavedObject::unsafe_arena_set_allocated_user_object(::diplomacy::tensorflow::SavedUserObject* user_object) {
  clear_kind();
  if (user_object) {
    set_has_user_object();
    kind_.user_object_ = user_object;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.SavedObject.user_object)
}
inline ::diplomacy::tensorflow::SavedUserObject* SavedObject::mutable_user_object() {
  if (!has_user_object()) {
    clear_kind();
    set_has_user_object();
    kind_.user_object_ = CreateMaybeMessage< ::diplomacy::tensorflow::SavedUserObject >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObject.user_object)
  return kind_.user_object_;
}

// .diplomacy.tensorflow.SavedAsset asset = 5;
inline bool SavedObject::has_asset() const {
  return kind_case() == kAsset;
}
inline void SavedObject::set_has_asset() {
  _oneof_case_[0] = kAsset;
}
inline void SavedObject::clear_asset() {
  if (has_asset()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.asset_;
    }
    clear_has_kind();
  }
}
inline const ::diplomacy::tensorflow::SavedAsset& SavedObject::_internal_asset() const {
  return *kind_.asset_;
}
inline ::diplomacy::tensorflow::SavedAsset* SavedObject::release_asset() {
  // @@protoc_insertion_point(field_release:diplomacy.tensorflow.SavedObject.asset)
  if (has_asset()) {
    clear_has_kind();
      ::diplomacy::tensorflow::SavedAsset* temp = kind_.asset_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.asset_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::diplomacy::tensorflow::SavedAsset& SavedObject::asset() const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObject.asset)
  return has_asset()
      ? *kind_.asset_
      : *reinterpret_cast< ::diplomacy::tensorflow::SavedAsset*>(&::diplomacy::tensorflow::_SavedAsset_default_instance_);
}
inline ::diplomacy::tensorflow::SavedAsset* SavedObject::unsafe_arena_release_asset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy.tensorflow.SavedObject.asset)
  if (has_asset()) {
    clear_has_kind();
    ::diplomacy::tensorflow::SavedAsset* temp = kind_.asset_;
    kind_.asset_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SavedObject::unsafe_arena_set_allocated_asset(::diplomacy::tensorflow::SavedAsset* asset) {
  clear_kind();
  if (asset) {
    set_has_asset();
    kind_.asset_ = asset;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.SavedObject.asset)
}
inline ::diplomacy::tensorflow::SavedAsset* SavedObject::mutable_asset() {
  if (!has_asset()) {
    clear_kind();
    set_has_asset();
    kind_.asset_ = CreateMaybeMessage< ::diplomacy::tensorflow::SavedAsset >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObject.asset)
  return kind_.asset_;
}

// .diplomacy.tensorflow.SavedPolymorphicFunction function = 6;
inline bool SavedObject::has_function() const {
  return kind_case() == kFunction;
}
inline void SavedObject::set_has_function() {
  _oneof_case_[0] = kFunction;
}
inline void SavedObject::clear_function() {
  if (has_function()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.function_;
    }
    clear_has_kind();
  }
}
inline const ::diplomacy::tensorflow::SavedPolymorphicFunction& SavedObject::_internal_function() const {
  return *kind_.function_;
}
inline ::diplomacy::tensorflow::SavedPolymorphicFunction* SavedObject::release_function() {
  // @@protoc_insertion_point(field_release:diplomacy.tensorflow.SavedObject.function)
  if (has_function()) {
    clear_has_kind();
      ::diplomacy::tensorflow::SavedPolymorphicFunction* temp = kind_.function_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.function_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::diplomacy::tensorflow::SavedPolymorphicFunction& SavedObject::function() const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedObject.function)
  return has_function()
      ? *kind_.function_
      : *reinterpret_cast< ::diplomacy::tensorflow::SavedPolymorphicFunction*>(&::diplomacy::tensorflow::_SavedPolymorphicFunction_default_instance_);
}
inline ::diplomacy::tensorflow::SavedPolymorphicFunction* SavedObject::unsafe_arena_release_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy.tensorflow.SavedObject.function)
  if (has_function()) {
    clear_has_kind();
    ::diplomacy::tensorflow::SavedPolymorphicFunction* temp = kind_.function_;
    kind_.function_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SavedObject::unsafe_arena_set_allocated_function(::diplomacy::tensorflow::SavedPolymorphicFunction* function) {
  clear_kind();
  if (function) {
    set_has_function();
    kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.SavedObject.function)
}
inline ::diplomacy::tensorflow::SavedPolymorphicFunction* SavedObject::mutable_function() {
  if (!has_function()) {
    clear_kind();
    set_has_function();
    kind_.function_ = CreateMaybeMessage< ::diplomacy::tensorflow::SavedPolymorphicFunction >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedObject.function)
  return kind_.function_;
}

inline bool SavedObject::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void SavedObject::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline SavedObject::KindCase SavedObject::kind_case() const {
  return SavedObject::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SavedUserObject

// -------------------------------------------------------------------

// SavedAsset

// uint32 asset_file_def_index = 1;
inline void SavedAsset::clear_asset_file_def_index() {
  asset_file_def_index_ = 0u;
}
inline ::google::protobuf::uint32 SavedAsset::asset_file_def_index() const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedAsset.asset_file_def_index)
  return asset_file_def_index_;
}
inline void SavedAsset::set_asset_file_def_index(::google::protobuf::uint32 value) {
  
  asset_file_def_index_ = value;
  // @@protoc_insertion_point(field_set:diplomacy.tensorflow.SavedAsset.asset_file_def_index)
}

// -------------------------------------------------------------------

// SavedPolymorphicFunction

// repeated .diplomacy.tensorflow.SavedMonomorphicFunction monomorphic_function = 1;
inline int SavedPolymorphicFunction::monomorphic_function_size() const {
  return monomorphic_function_.size();
}
inline void SavedPolymorphicFunction::clear_monomorphic_function() {
  monomorphic_function_.Clear();
}
inline ::diplomacy::tensorflow::SavedMonomorphicFunction* SavedPolymorphicFunction::mutable_monomorphic_function(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedPolymorphicFunction.monomorphic_function)
  return monomorphic_function_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedMonomorphicFunction >*
SavedPolymorphicFunction::mutable_monomorphic_function() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy.tensorflow.SavedPolymorphicFunction.monomorphic_function)
  return &monomorphic_function_;
}
inline const ::diplomacy::tensorflow::SavedMonomorphicFunction& SavedPolymorphicFunction::monomorphic_function(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedPolymorphicFunction.monomorphic_function)
  return monomorphic_function_.Get(index);
}
inline ::diplomacy::tensorflow::SavedMonomorphicFunction* SavedPolymorphicFunction::add_monomorphic_function() {
  // @@protoc_insertion_point(field_add:diplomacy.tensorflow.SavedPolymorphicFunction.monomorphic_function)
  return monomorphic_function_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diplomacy::tensorflow::SavedMonomorphicFunction >&
SavedPolymorphicFunction::monomorphic_function() const {
  // @@protoc_insertion_point(field_list:diplomacy.tensorflow.SavedPolymorphicFunction.monomorphic_function)
  return monomorphic_function_;
}

// -------------------------------------------------------------------

// SavedMonomorphicFunction

// string concrete_function = 1;
inline void SavedMonomorphicFunction::clear_concrete_function() {
  concrete_function_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SavedMonomorphicFunction::concrete_function() const {
  // @@protoc_insertion_point(field_get:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
  return concrete_function_.Get();
}
inline void SavedMonomorphicFunction::set_concrete_function(const ::std::string& value) {
  
  concrete_function_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}
#if LANG_CXX11
inline void SavedMonomorphicFunction::set_concrete_function(::std::string&& value) {
  
  concrete_function_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}
#endif
inline void SavedMonomorphicFunction::set_concrete_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  concrete_function_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}
inline void SavedMonomorphicFunction::set_concrete_function(const char* value,
    size_t size) {
  
  concrete_function_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}
inline ::std::string* SavedMonomorphicFunction::mutable_concrete_function() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
  return concrete_function_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SavedMonomorphicFunction::release_concrete_function() {
  // @@protoc_insertion_point(field_release:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
  
  return concrete_function_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SavedMonomorphicFunction::set_allocated_concrete_function(::std::string* concrete_function) {
  if (concrete_function != NULL) {
    
  } else {
    
  }
  concrete_function_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concrete_function,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}
inline ::std::string* SavedMonomorphicFunction::unsafe_arena_release_concrete_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return concrete_function_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SavedMonomorphicFunction::unsafe_arena_set_allocated_concrete_function(
    ::std::string* concrete_function) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (concrete_function != NULL) {
    
  } else {
    
  }
  concrete_function_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      concrete_function, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy.tensorflow.SavedMonomorphicFunction.concrete_function)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow
}  // namespace diplomacy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_diplomacy_5ftensorflow_2fpython_2fsaved_5fmodel_2fsaved_5fobject_5fgraph_2eproto
