// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/compiler/xrt/xrt.proto

#include "diplomacy_tensorflow/compiler/xrt/xrt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2ftf2xla_2fhost_5fcompute_5fmetadata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2ftf2xla_2fhost_5fcompute_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HostComputeMetadata;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2ftf2xla_2fhost_5fcompute_5fmetadata_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HloSnapshot;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DebugOptions;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LiteralProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProgramShapeProto;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XLATupleNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignment_ComputationDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_XLAComputationConfig;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto
namespace xrt {
class DeviceAssignment_ComputationDevice_DeviceMeshCoordinatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAssignment_ComputationDevice_DeviceMeshCoordinates>
      _instance;
} _DeviceAssignment_ComputationDevice_DeviceMeshCoordinates_default_instance_;
class DeviceAssignment_ComputationDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAssignment_ComputationDevice>
      _instance;
} _DeviceAssignment_ComputationDevice_default_instance_;
class DeviceAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAssignment>
      _instance;
} _DeviceAssignment_default_instance_;
class XLAComputationConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XLAComputationConfig>
      _instance;
} _XLAComputationConfig_default_instance_;
class XLAComputationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XLAComputation>
      _instance;
} _XLAComputation_default_instance_;
class XLAAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XLAAllocation>
      _instance;
} _XLAAllocation_default_instance_;
class XLATupleNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XLATupleNode>
      _instance;
} _XLATupleNode_default_instance_;
class XRTExecutionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XRTExecutionConfig>
      _instance;
} _XRTExecutionConfig_default_instance_;
}  // namespace xrt
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto {
static void InitDefaultsDeviceAssignment_ComputationDevice_DeviceMeshCoordinates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates_default_instance_;
    new (ptr) ::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceAssignment_ComputationDevice_DeviceMeshCoordinates}, {}};

static void InitDefaultsDeviceAssignment_ComputationDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_DeviceAssignment_ComputationDevice_default_instance_;
    new (ptr) ::xrt::DeviceAssignment_ComputationDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::DeviceAssignment_ComputationDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignment_ComputationDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceAssignment_ComputationDevice}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates.base,}};

static void InitDefaultsDeviceAssignment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_DeviceAssignment_default_instance_;
    new (ptr) ::xrt::DeviceAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::DeviceAssignment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceAssignment}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice.base,}};

static void InitDefaultsXLAComputationConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_XLAComputationConfig_default_instance_;
    new (ptr) ::xrt::XLAComputationConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::XLAComputationConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_XLAComputationConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsXLAComputationConfig}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2ftf2xla_2fhost_5fcompute_5fmetadata_2eproto::scc_info_HostComputeMetadata.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions.base,}};

static void InitDefaultsXLAComputation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_XLAComputation_default_instance_;
    new (ptr) ::xrt::XLAComputation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::XLAComputation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_XLAComputation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsXLAComputation}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAComputationConfig.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloSnapshot.base,}};

static void InitDefaultsXLAAllocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_XLAAllocation_default_instance_;
    new (ptr) ::xrt::XLAAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::XLAAllocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XLAAllocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXLAAllocation}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,}};

static void InitDefaultsXLATupleNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_XLATupleNode_default_instance_;
    new (ptr) ::xrt::XLATupleNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::XLATupleNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XLATupleNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXLATupleNode}, {}};

static void InitDefaultsXRTExecutionConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xrt::_XRTExecutionConfig_default_instance_;
    new (ptr) ::xrt::XRTExecutionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xrt::XRTExecutionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XRTExecutionConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXRTExecutionConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAssignment_ComputationDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAssignment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XLAComputationConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XLAComputation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XLAAllocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XLATupleNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XRTExecutionConfig.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment_ComputationDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment_ComputationDevice, replica_devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::DeviceAssignment, computation_devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, num_replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, num_cores_per_replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, host_compute_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, program_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, per_core_program_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, device_assignment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputationConfig, debug_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputation, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAComputation, hlo_snapshot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAAllocation, device_ordinal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLAAllocation, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLATupleNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLATupleNode, input_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLATupleNode, release_input_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XLATupleNode, tuples_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, device_ordinal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, core_index_in_replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, execution_instance_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, rng_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, release_input_handles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, release_compilation_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xrt::XRTExecutionConfig, return_exploded_tuple_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates)},
  { 6, -1, sizeof(::xrt::DeviceAssignment_ComputationDevice)},
  { 12, -1, sizeof(::xrt::DeviceAssignment)},
  { 18, -1, sizeof(::xrt::XLAComputationConfig)},
  { 30, -1, sizeof(::xrt::XLAComputation)},
  { 37, -1, sizeof(::xrt::XLAAllocation)},
  { 44, -1, sizeof(::xrt::XLATupleNode)},
  { 52, -1, sizeof(::xrt::XRTExecutionConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_DeviceAssignment_ComputationDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_DeviceAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_XLAComputationConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_XLAComputation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_XLAAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_XLATupleNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xrt::_XRTExecutionConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/compiler/xrt/xrt.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+diplomacy_tensorflow/compiler/xrt/xrt."
      "proto\022\003xrt\032@diplomacy_tensorflow/compile"
      "r/tf2xla/host_compute_metadata.proto\032+di"
      "plomacy_tensorflow/compiler/xla/xla.prot"
      "o\0320diplomacy_tensorflow/compiler/xla/xla"
      "_data.proto\0323diplomacy_tensorflow/compil"
      "er/xla/service/hlo.proto\"\356\001\n\020DeviceAssig"
      "nment\022D\n\023computation_devices\030\001 \003(\0132\'.xrt"
      ".DeviceAssignment.ComputationDevice\032\223\001\n\021"
      "ComputationDevice\022V\n\017replica_devices\030\001 \003"
      "(\0132=.xrt.DeviceAssignment.ComputationDev"
      "ice.DeviceMeshCoordinates\032&\n\025DeviceMeshC"
      "oordinates\022\r\n\005value\030\001 \003(\005\"\337\002\n\024XLAComputa"
      "tionConfig\022\024\n\014num_replicas\030\001 \001(\005\022\035\n\025num_"
      "cores_per_replica\030\002 \001(\005\022O\n\025host_compute_"
      "metadata\030\003 \001(\01320.diplomacy.tensorflow.tf"
      "2xla.HostComputeMetadata\022-\n\rprogram_shap"
      "e\030\004 \001(\0132\026.xla.ProgramShapeProto\0226\n\026per_c"
      "ore_program_shape\030\005 \003(\0132\026.xla.ProgramSha"
      "peProto\0220\n\021device_assignment\030\006 \001(\0132\025.xrt"
      ".DeviceAssignment\022(\n\rdebug_options\030\007 \001(\013"
      "2\021.xla.DebugOptions\"c\n\016XLAComputation\022)\n"
      "\006config\030\001 \001(\0132\031.xrt.XLAComputationConfig"
      "\022&\n\014hlo_snapshot\030\002 \001(\0132\020.xla.HloSnapshot"
      "\"I\n\rXLAAllocation\022\026\n\016device_ordinal\030\001 \001("
      "\005\022 \n\005value\030\002 \001(\0132\021.xla.LiteralProto\"d\n\014X"
      "LATupleNode\022\023\n\013input_index\030\001 \001(\005\022\034\n\024rele"
      "ase_input_handle\030\002 \001(\010\022!\n\006tuples\030\003 \003(\0132\021"
      ".xrt.XLATupleNode\"\337\001\n\022XRTExecutionConfig"
      "\022\026\n\016device_ordinal\030\001 \001(\005\022\035\n\025core_index_i"
      "n_replica\030\002 \001(\005\022\036\n\026execution_instance_ke"
      "y\030\003 \001(\t\022\020\n\010rng_seed\030\004 \001(\r\022\035\n\025release_inp"
      "ut_handles\030\005 \001(\010\022\"\n\032release_compilation_"
      "handle\030\006 \001(\010\022\035\n\025return_exploded_tuple\030\007 "
      "\001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/compiler/xrt/xrt.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2ftf2xla_2fhost_5fcompute_5fmetadata_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto
namespace xrt {

// ===================================================================

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
}
DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates(const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::SharedCtor() {
}

DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::~DeviceAssignment_ComputationDevice_DeviceMeshCoordinates() {
  // @@protoc_insertion_point(destructor:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  SharedDtor();
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::SharedDtor() {
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates& DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice_DeviceMeshCoordinates.base);
  return *internal_default_instance();
}


void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  return false;
#undef DO_
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value = 1;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
  }
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
}

::google::protobuf::uint8* DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value = 1;
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  return target;
}

size_t DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 value = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
    MergeFrom(*source);
  }
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::MergeFrom(const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::CopyFrom(const DeviceAssignment_ComputationDevice_DeviceMeshCoordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::IsInitialized() const {
  return true;
}

void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::Swap(DeviceAssignment_ComputationDevice_DeviceMeshCoordinates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::InternalSwap(DeviceAssignment_ComputationDevice_DeviceMeshCoordinates* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAssignment_ComputationDevice_DeviceMeshCoordinates::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAssignment_ComputationDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAssignment_ComputationDevice::kReplicaDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAssignment_ComputationDevice::DeviceAssignment_ComputationDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.DeviceAssignment.ComputationDevice)
}
DeviceAssignment_ComputationDevice::DeviceAssignment_ComputationDevice(const DeviceAssignment_ComputationDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_devices_(from.replica_devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xrt.DeviceAssignment.ComputationDevice)
}

void DeviceAssignment_ComputationDevice::SharedCtor() {
}

DeviceAssignment_ComputationDevice::~DeviceAssignment_ComputationDevice() {
  // @@protoc_insertion_point(destructor:xrt.DeviceAssignment.ComputationDevice)
  SharedDtor();
}

void DeviceAssignment_ComputationDevice::SharedDtor() {
}

void DeviceAssignment_ComputationDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAssignment_ComputationDevice::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAssignment_ComputationDevice& DeviceAssignment_ComputationDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment_ComputationDevice.base);
  return *internal_default_instance();
}


void DeviceAssignment_ComputationDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.DeviceAssignment.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_devices_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceAssignment_ComputationDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.DeviceAssignment.ComputationDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates replica_devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replica_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.DeviceAssignment.ComputationDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.DeviceAssignment.ComputationDevice)
  return false;
#undef DO_
}

void DeviceAssignment_ComputationDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.DeviceAssignment.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates replica_devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->replica_devices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.DeviceAssignment.ComputationDevice)
}

::google::protobuf::uint8* DeviceAssignment_ComputationDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.DeviceAssignment.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates replica_devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->replica_devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.DeviceAssignment.ComputationDevice)
  return target;
}

size_t DeviceAssignment_ComputationDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.DeviceAssignment.ComputationDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates replica_devices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->replica_devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replica_devices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAssignment_ComputationDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.DeviceAssignment.ComputationDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAssignment_ComputationDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAssignment_ComputationDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.DeviceAssignment.ComputationDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.DeviceAssignment.ComputationDevice)
    MergeFrom(*source);
  }
}

void DeviceAssignment_ComputationDevice::MergeFrom(const DeviceAssignment_ComputationDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.DeviceAssignment.ComputationDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_devices_.MergeFrom(from.replica_devices_);
}

void DeviceAssignment_ComputationDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.DeviceAssignment.ComputationDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAssignment_ComputationDevice::CopyFrom(const DeviceAssignment_ComputationDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.DeviceAssignment.ComputationDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAssignment_ComputationDevice::IsInitialized() const {
  return true;
}

void DeviceAssignment_ComputationDevice::Swap(DeviceAssignment_ComputationDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAssignment_ComputationDevice::InternalSwap(DeviceAssignment_ComputationDevice* other) {
  using std::swap;
  CastToBase(&replica_devices_)->InternalSwap(CastToBase(&other->replica_devices_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAssignment_ComputationDevice::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAssignment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAssignment::kComputationDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAssignment::DeviceAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.DeviceAssignment)
}
DeviceAssignment::DeviceAssignment(const DeviceAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      computation_devices_(from.computation_devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xrt.DeviceAssignment)
}

void DeviceAssignment::SharedCtor() {
}

DeviceAssignment::~DeviceAssignment() {
  // @@protoc_insertion_point(destructor:xrt.DeviceAssignment)
  SharedDtor();
}

void DeviceAssignment::SharedDtor() {
}

void DeviceAssignment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAssignment::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAssignment& DeviceAssignment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_DeviceAssignment.base);
  return *internal_default_instance();
}


void DeviceAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.DeviceAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computation_devices_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.DeviceAssignment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xrt.DeviceAssignment.ComputationDevice computation_devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_computation_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.DeviceAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.DeviceAssignment)
  return false;
#undef DO_
}

void DeviceAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.DeviceAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xrt.DeviceAssignment.ComputationDevice computation_devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->computation_devices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.DeviceAssignment)
}

::google::protobuf::uint8* DeviceAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.DeviceAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xrt.DeviceAssignment.ComputationDevice computation_devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->computation_devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.DeviceAssignment)
  return target;
}

size_t DeviceAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.DeviceAssignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xrt.DeviceAssignment.ComputationDevice computation_devices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->computation_devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computation_devices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.DeviceAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.DeviceAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.DeviceAssignment)
    MergeFrom(*source);
  }
}

void DeviceAssignment::MergeFrom(const DeviceAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.DeviceAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  computation_devices_.MergeFrom(from.computation_devices_);
}

void DeviceAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.DeviceAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAssignment::CopyFrom(const DeviceAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.DeviceAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAssignment::IsInitialized() const {
  return true;
}

void DeviceAssignment::Swap(DeviceAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAssignment::InternalSwap(DeviceAssignment* other) {
  using std::swap;
  CastToBase(&computation_devices_)->InternalSwap(CastToBase(&other->computation_devices_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAssignment::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XLAComputationConfig::InitAsDefaultInstance() {
  ::xrt::_XLAComputationConfig_default_instance_._instance.get_mutable()->host_compute_metadata_ = const_cast< ::diplomacy::tensorflow::tf2xla::HostComputeMetadata*>(
      ::diplomacy::tensorflow::tf2xla::HostComputeMetadata::internal_default_instance());
  ::xrt::_XLAComputationConfig_default_instance_._instance.get_mutable()->program_shape_ = const_cast< ::xla::ProgramShapeProto*>(
      ::xla::ProgramShapeProto::internal_default_instance());
  ::xrt::_XLAComputationConfig_default_instance_._instance.get_mutable()->device_assignment_ = const_cast< ::xrt::DeviceAssignment*>(
      ::xrt::DeviceAssignment::internal_default_instance());
  ::xrt::_XLAComputationConfig_default_instance_._instance.get_mutable()->debug_options_ = const_cast< ::xla::DebugOptions*>(
      ::xla::DebugOptions::internal_default_instance());
}
void XLAComputationConfig::clear_host_compute_metadata() {
  if (GetArenaNoVirtual() == NULL && host_compute_metadata_ != NULL) {
    delete host_compute_metadata_;
  }
  host_compute_metadata_ = NULL;
}
void XLAComputationConfig::clear_program_shape() {
  if (GetArenaNoVirtual() == NULL && program_shape_ != NULL) {
    delete program_shape_;
  }
  program_shape_ = NULL;
}
void XLAComputationConfig::clear_per_core_program_shape() {
  per_core_program_shape_.Clear();
}
void XLAComputationConfig::clear_debug_options() {
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLAComputationConfig::kNumReplicasFieldNumber;
const int XLAComputationConfig::kNumCoresPerReplicaFieldNumber;
const int XLAComputationConfig::kHostComputeMetadataFieldNumber;
const int XLAComputationConfig::kProgramShapeFieldNumber;
const int XLAComputationConfig::kPerCoreProgramShapeFieldNumber;
const int XLAComputationConfig::kDeviceAssignmentFieldNumber;
const int XLAComputationConfig::kDebugOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLAComputationConfig::XLAComputationConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAComputationConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.XLAComputationConfig)
}
XLAComputationConfig::XLAComputationConfig(const XLAComputationConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      per_core_program_shape_(from.per_core_program_shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_host_compute_metadata()) {
    host_compute_metadata_ = new ::diplomacy::tensorflow::tf2xla::HostComputeMetadata(*from.host_compute_metadata_);
  } else {
    host_compute_metadata_ = NULL;
  }
  if (from.has_program_shape()) {
    program_shape_ = new ::xla::ProgramShapeProto(*from.program_shape_);
  } else {
    program_shape_ = NULL;
  }
  if (from.has_device_assignment()) {
    device_assignment_ = new ::xrt::DeviceAssignment(*from.device_assignment_);
  } else {
    device_assignment_ = NULL;
  }
  if (from.has_debug_options()) {
    debug_options_ = new ::xla::DebugOptions(*from.debug_options_);
  } else {
    debug_options_ = NULL;
  }
  ::memcpy(&num_replicas_, &from.num_replicas_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_cores_per_replica_) -
    reinterpret_cast<char*>(&num_replicas_)) + sizeof(num_cores_per_replica_));
  // @@protoc_insertion_point(copy_constructor:xrt.XLAComputationConfig)
}

void XLAComputationConfig::SharedCtor() {
  ::memset(&host_compute_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_replica_) -
      reinterpret_cast<char*>(&host_compute_metadata_)) + sizeof(num_cores_per_replica_));
}

XLAComputationConfig::~XLAComputationConfig() {
  // @@protoc_insertion_point(destructor:xrt.XLAComputationConfig)
  SharedDtor();
}

void XLAComputationConfig::SharedDtor() {
  if (this != internal_default_instance()) delete host_compute_metadata_;
  if (this != internal_default_instance()) delete program_shape_;
  if (this != internal_default_instance()) delete device_assignment_;
  if (this != internal_default_instance()) delete debug_options_;
}

void XLAComputationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XLAComputationConfig::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLAComputationConfig& XLAComputationConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAComputationConfig.base);
  return *internal_default_instance();
}


void XLAComputationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.XLAComputationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  per_core_program_shape_.Clear();
  if (GetArenaNoVirtual() == NULL && host_compute_metadata_ != NULL) {
    delete host_compute_metadata_;
  }
  host_compute_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && program_shape_ != NULL) {
    delete program_shape_;
  }
  program_shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_assignment_ != NULL) {
    delete device_assignment_;
  }
  device_assignment_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
  ::memset(&num_replicas_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cores_per_replica_) -
      reinterpret_cast<char*>(&num_replicas_)) + sizeof(num_cores_per_replica_));
  _internal_metadata_.Clear();
}

bool XLAComputationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.XLAComputationConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_replicas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_replicas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_cores_per_replica = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cores_per_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .diplomacy.tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_compute_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ProgramShapeProto program_shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_program_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.ProgramShapeProto per_core_program_shape = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_per_core_program_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xrt.DeviceAssignment device_assignment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DebugOptions debug_options = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.XLAComputationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.XLAComputationConfig)
  return false;
#undef DO_
}

void XLAComputationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.XLAComputationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_replicas = 1;
  if (this->num_replicas() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_replicas(), output);
  }

  // int32 num_cores_per_replica = 2;
  if (this->num_cores_per_replica() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_cores_per_replica(), output);
  }

  // .diplomacy.tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 3;
  if (this->has_host_compute_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_host_compute_metadata(), output);
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_program_shape(), output);
  }

  // repeated .xla.ProgramShapeProto per_core_program_shape = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->per_core_program_shape_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->per_core_program_shape(static_cast<int>(i)),
      output);
  }

  // .xrt.DeviceAssignment device_assignment = 6;
  if (this->has_device_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_device_assignment(), output);
  }

  // .xla.DebugOptions debug_options = 7;
  if (this->has_debug_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_debug_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.XLAComputationConfig)
}

::google::protobuf::uint8* XLAComputationConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.XLAComputationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_replicas = 1;
  if (this->num_replicas() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_replicas(), target);
  }

  // int32 num_cores_per_replica = 2;
  if (this->num_cores_per_replica() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_cores_per_replica(), target);
  }

  // .diplomacy.tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 3;
  if (this->has_host_compute_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_host_compute_metadata(), deterministic, target);
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_program_shape(), deterministic, target);
  }

  // repeated .xla.ProgramShapeProto per_core_program_shape = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->per_core_program_shape_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->per_core_program_shape(static_cast<int>(i)), deterministic, target);
  }

  // .xrt.DeviceAssignment device_assignment = 6;
  if (this->has_device_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_device_assignment(), deterministic, target);
  }

  // .xla.DebugOptions debug_options = 7;
  if (this->has_debug_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_debug_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.XLAComputationConfig)
  return target;
}

size_t XLAComputationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.XLAComputationConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ProgramShapeProto per_core_program_shape = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->per_core_program_shape_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->per_core_program_shape(static_cast<int>(i)));
    }
  }

  // .diplomacy.tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 3;
  if (this->has_host_compute_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_compute_metadata_);
  }

  // .xla.ProgramShapeProto program_shape = 4;
  if (this->has_program_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *program_shape_);
  }

  // .xrt.DeviceAssignment device_assignment = 6;
  if (this->has_device_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_assignment_);
  }

  // .xla.DebugOptions debug_options = 7;
  if (this->has_debug_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_options_);
  }

  // int32 num_replicas = 1;
  if (this->num_replicas() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_replicas());
  }

  // int32 num_cores_per_replica = 2;
  if (this->num_cores_per_replica() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_cores_per_replica());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XLAComputationConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.XLAComputationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const XLAComputationConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLAComputationConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.XLAComputationConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.XLAComputationConfig)
    MergeFrom(*source);
  }
}

void XLAComputationConfig::MergeFrom(const XLAComputationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.XLAComputationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  per_core_program_shape_.MergeFrom(from.per_core_program_shape_);
  if (from.has_host_compute_metadata()) {
    mutable_host_compute_metadata()->::diplomacy::tensorflow::tf2xla::HostComputeMetadata::MergeFrom(from.host_compute_metadata());
  }
  if (from.has_program_shape()) {
    mutable_program_shape()->::xla::ProgramShapeProto::MergeFrom(from.program_shape());
  }
  if (from.has_device_assignment()) {
    mutable_device_assignment()->::xrt::DeviceAssignment::MergeFrom(from.device_assignment());
  }
  if (from.has_debug_options()) {
    mutable_debug_options()->::xla::DebugOptions::MergeFrom(from.debug_options());
  }
  if (from.num_replicas() != 0) {
    set_num_replicas(from.num_replicas());
  }
  if (from.num_cores_per_replica() != 0) {
    set_num_cores_per_replica(from.num_cores_per_replica());
  }
}

void XLAComputationConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.XLAComputationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLAComputationConfig::CopyFrom(const XLAComputationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.XLAComputationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLAComputationConfig::IsInitialized() const {
  return true;
}

void XLAComputationConfig::Swap(XLAComputationConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLAComputationConfig::InternalSwap(XLAComputationConfig* other) {
  using std::swap;
  CastToBase(&per_core_program_shape_)->InternalSwap(CastToBase(&other->per_core_program_shape_));
  swap(host_compute_metadata_, other->host_compute_metadata_);
  swap(program_shape_, other->program_shape_);
  swap(device_assignment_, other->device_assignment_);
  swap(debug_options_, other->debug_options_);
  swap(num_replicas_, other->num_replicas_);
  swap(num_cores_per_replica_, other->num_cores_per_replica_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XLAComputationConfig::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XLAComputation::InitAsDefaultInstance() {
  ::xrt::_XLAComputation_default_instance_._instance.get_mutable()->config_ = const_cast< ::xrt::XLAComputationConfig*>(
      ::xrt::XLAComputationConfig::internal_default_instance());
  ::xrt::_XLAComputation_default_instance_._instance.get_mutable()->hlo_snapshot_ = const_cast< ::xla::HloSnapshot*>(
      ::xla::HloSnapshot::internal_default_instance());
}
void XLAComputation::clear_hlo_snapshot() {
  if (GetArenaNoVirtual() == NULL && hlo_snapshot_ != NULL) {
    delete hlo_snapshot_;
  }
  hlo_snapshot_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLAComputation::kConfigFieldNumber;
const int XLAComputation::kHloSnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLAComputation::XLAComputation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAComputation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.XLAComputation)
}
XLAComputation::XLAComputation(const XLAComputation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::xrt::XLAComputationConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_hlo_snapshot()) {
    hlo_snapshot_ = new ::xla::HloSnapshot(*from.hlo_snapshot_);
  } else {
    hlo_snapshot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xrt.XLAComputation)
}

void XLAComputation::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hlo_snapshot_) -
      reinterpret_cast<char*>(&config_)) + sizeof(hlo_snapshot_));
}

XLAComputation::~XLAComputation() {
  // @@protoc_insertion_point(destructor:xrt.XLAComputation)
  SharedDtor();
}

void XLAComputation::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete hlo_snapshot_;
}

void XLAComputation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XLAComputation::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLAComputation& XLAComputation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAComputation.base);
  return *internal_default_instance();
}


void XLAComputation::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.XLAComputation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && hlo_snapshot_ != NULL) {
    delete hlo_snapshot_;
  }
  hlo_snapshot_ = NULL;
  _internal_metadata_.Clear();
}

bool XLAComputation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.XLAComputation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xrt.XLAComputationConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.HloSnapshot hlo_snapshot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hlo_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.XLAComputation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.XLAComputation)
  return false;
#undef DO_
}

void XLAComputation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.XLAComputation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xrt.XLAComputationConfig config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  // .xla.HloSnapshot hlo_snapshot = 2;
  if (this->has_hlo_snapshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hlo_snapshot(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.XLAComputation)
}

::google::protobuf::uint8* XLAComputation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.XLAComputation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xrt.XLAComputationConfig config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  // .xla.HloSnapshot hlo_snapshot = 2;
  if (this->has_hlo_snapshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hlo_snapshot(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.XLAComputation)
  return target;
}

size_t XLAComputation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.XLAComputation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xrt.XLAComputationConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .xla.HloSnapshot hlo_snapshot = 2;
  if (this->has_hlo_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hlo_snapshot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XLAComputation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.XLAComputation)
  GOOGLE_DCHECK_NE(&from, this);
  const XLAComputation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLAComputation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.XLAComputation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.XLAComputation)
    MergeFrom(*source);
  }
}

void XLAComputation::MergeFrom(const XLAComputation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.XLAComputation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::xrt::XLAComputationConfig::MergeFrom(from.config());
  }
  if (from.has_hlo_snapshot()) {
    mutable_hlo_snapshot()->::xla::HloSnapshot::MergeFrom(from.hlo_snapshot());
  }
}

void XLAComputation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.XLAComputation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLAComputation::CopyFrom(const XLAComputation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.XLAComputation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLAComputation::IsInitialized() const {
  return true;
}

void XLAComputation::Swap(XLAComputation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLAComputation::InternalSwap(XLAComputation* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(hlo_snapshot_, other->hlo_snapshot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XLAComputation::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XLAAllocation::InitAsDefaultInstance() {
  ::xrt::_XLAAllocation_default_instance_._instance.get_mutable()->value_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
}
void XLAAllocation::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLAAllocation::kDeviceOrdinalFieldNumber;
const int XLAAllocation::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLAAllocation::XLAAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAAllocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.XLAAllocation)
}
XLAAllocation::XLAAllocation(const XLAAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::xla::LiteralProto(*from.value_);
  } else {
    value_ = NULL;
  }
  device_ordinal_ = from.device_ordinal_;
  // @@protoc_insertion_point(copy_constructor:xrt.XLAAllocation)
}

void XLAAllocation::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_ordinal_) -
      reinterpret_cast<char*>(&value_)) + sizeof(device_ordinal_));
}

XLAAllocation::~XLAAllocation() {
  // @@protoc_insertion_point(destructor:xrt.XLAAllocation)
  SharedDtor();
}

void XLAAllocation::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void XLAAllocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XLAAllocation::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLAAllocation& XLAAllocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLAAllocation.base);
  return *internal_default_instance();
}


void XLAAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.XLAAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  device_ordinal_ = 0;
  _internal_metadata_.Clear();
}

bool XLAAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.XLAAllocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 device_ordinal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LiteralProto value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.XLAAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.XLAAllocation)
  return false;
#undef DO_
}

void XLAAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.XLAAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device_ordinal(), output);
  }

  // .xla.LiteralProto value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.XLAAllocation)
}

::google::protobuf::uint8* XLAAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.XLAAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device_ordinal(), target);
  }

  // .xla.LiteralProto value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.XLAAllocation)
  return target;
}

size_t XLAAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.XLAAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XLAAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.XLAAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const XLAAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLAAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.XLAAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.XLAAllocation)
    MergeFrom(*source);
  }
}

void XLAAllocation::MergeFrom(const XLAAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.XLAAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::xla::LiteralProto::MergeFrom(from.value());
  }
  if (from.device_ordinal() != 0) {
    set_device_ordinal(from.device_ordinal());
  }
}

void XLAAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.XLAAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLAAllocation::CopyFrom(const XLAAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.XLAAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLAAllocation::IsInitialized() const {
  return true;
}

void XLAAllocation::Swap(XLAAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLAAllocation::InternalSwap(XLAAllocation* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(device_ordinal_, other->device_ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XLAAllocation::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XLATupleNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLATupleNode::kInputIndexFieldNumber;
const int XLATupleNode::kReleaseInputHandleFieldNumber;
const int XLATupleNode::kTuplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLATupleNode::XLATupleNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLATupleNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.XLATupleNode)
}
XLATupleNode::XLATupleNode(const XLATupleNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&input_index_, &from.input_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&release_input_handle_) -
    reinterpret_cast<char*>(&input_index_)) + sizeof(release_input_handle_));
  // @@protoc_insertion_point(copy_constructor:xrt.XLATupleNode)
}

void XLATupleNode::SharedCtor() {
  ::memset(&input_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&release_input_handle_) -
      reinterpret_cast<char*>(&input_index_)) + sizeof(release_input_handle_));
}

XLATupleNode::~XLATupleNode() {
  // @@protoc_insertion_point(destructor:xrt.XLATupleNode)
  SharedDtor();
}

void XLATupleNode::SharedDtor() {
}

void XLATupleNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XLATupleNode::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLATupleNode& XLATupleNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XLATupleNode.base);
  return *internal_default_instance();
}


void XLATupleNode::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.XLATupleNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  ::memset(&input_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&release_input_handle_) -
      reinterpret_cast<char*>(&input_index_)) + sizeof(release_input_handle_));
  _internal_metadata_.Clear();
}

bool XLATupleNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.XLATupleNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 input_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &input_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool release_input_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &release_input_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xrt.XLATupleNode tuples = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.XLATupleNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.XLATupleNode)
  return false;
#undef DO_
}

void XLATupleNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.XLATupleNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 input_index = 1;
  if (this->input_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->input_index(), output);
  }

  // bool release_input_handle = 2;
  if (this->release_input_handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->release_input_handle(), output);
  }

  // repeated .xrt.XLATupleNode tuples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->tuples(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.XLATupleNode)
}

::google::protobuf::uint8* XLATupleNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.XLATupleNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 input_index = 1;
  if (this->input_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->input_index(), target);
  }

  // bool release_input_handle = 2;
  if (this->release_input_handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->release_input_handle(), target);
  }

  // repeated .xrt.XLATupleNode tuples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->tuples(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.XLATupleNode)
  return target;
}

size_t XLATupleNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.XLATupleNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xrt.XLATupleNode tuples = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tuples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuples(static_cast<int>(i)));
    }
  }

  // int32 input_index = 1;
  if (this->input_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->input_index());
  }

  // bool release_input_handle = 2;
  if (this->release_input_handle() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XLATupleNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.XLATupleNode)
  GOOGLE_DCHECK_NE(&from, this);
  const XLATupleNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLATupleNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.XLATupleNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.XLATupleNode)
    MergeFrom(*source);
  }
}

void XLATupleNode::MergeFrom(const XLATupleNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.XLATupleNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
  if (from.input_index() != 0) {
    set_input_index(from.input_index());
  }
  if (from.release_input_handle() != 0) {
    set_release_input_handle(from.release_input_handle());
  }
}

void XLATupleNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.XLATupleNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLATupleNode::CopyFrom(const XLATupleNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.XLATupleNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLATupleNode::IsInitialized() const {
  return true;
}

void XLATupleNode::Swap(XLATupleNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLATupleNode::InternalSwap(XLATupleNode* other) {
  using std::swap;
  CastToBase(&tuples_)->InternalSwap(CastToBase(&other->tuples_));
  swap(input_index_, other->input_index_);
  swap(release_input_handle_, other->release_input_handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XLATupleNode::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XRTExecutionConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XRTExecutionConfig::kDeviceOrdinalFieldNumber;
const int XRTExecutionConfig::kCoreIndexInReplicaFieldNumber;
const int XRTExecutionConfig::kExecutionInstanceKeyFieldNumber;
const int XRTExecutionConfig::kRngSeedFieldNumber;
const int XRTExecutionConfig::kReleaseInputHandlesFieldNumber;
const int XRTExecutionConfig::kReleaseCompilationHandleFieldNumber;
const int XRTExecutionConfig::kReturnExplodedTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XRTExecutionConfig::XRTExecutionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XRTExecutionConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xrt.XRTExecutionConfig)
}
XRTExecutionConfig::XRTExecutionConfig(const XRTExecutionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  execution_instance_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execution_instance_key().size() > 0) {
    execution_instance_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_instance_key_);
  }
  ::memcpy(&device_ordinal_, &from.device_ordinal_,
    static_cast<size_t>(reinterpret_cast<char*>(&return_exploded_tuple_) -
    reinterpret_cast<char*>(&device_ordinal_)) + sizeof(return_exploded_tuple_));
  // @@protoc_insertion_point(copy_constructor:xrt.XRTExecutionConfig)
}

void XRTExecutionConfig::SharedCtor() {
  execution_instance_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_exploded_tuple_) -
      reinterpret_cast<char*>(&device_ordinal_)) + sizeof(return_exploded_tuple_));
}

XRTExecutionConfig::~XRTExecutionConfig() {
  // @@protoc_insertion_point(destructor:xrt.XRTExecutionConfig)
  SharedDtor();
}

void XRTExecutionConfig::SharedDtor() {
  execution_instance_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XRTExecutionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XRTExecutionConfig::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XRTExecutionConfig& XRTExecutionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::scc_info_XRTExecutionConfig.base);
  return *internal_default_instance();
}


void XRTExecutionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xrt.XRTExecutionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  execution_instance_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_ordinal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_exploded_tuple_) -
      reinterpret_cast<char*>(&device_ordinal_)) + sizeof(return_exploded_tuple_));
  _internal_metadata_.Clear();
}

bool XRTExecutionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xrt.XRTExecutionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 device_ordinal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 core_index_in_replica = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &core_index_in_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string execution_instance_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execution_instance_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execution_instance_key().data(), static_cast<int>(this->execution_instance_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xrt.XRTExecutionConfig.execution_instance_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rng_seed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rng_seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool release_input_handles = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &release_input_handles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool release_compilation_handle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &release_compilation_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool return_exploded_tuple = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_exploded_tuple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xrt.XRTExecutionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xrt.XRTExecutionConfig)
  return false;
#undef DO_
}

void XRTExecutionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xrt.XRTExecutionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device_ordinal(), output);
  }

  // int32 core_index_in_replica = 2;
  if (this->core_index_in_replica() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->core_index_in_replica(), output);
  }

  // string execution_instance_key = 3;
  if (this->execution_instance_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_instance_key().data(), static_cast<int>(this->execution_instance_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xrt.XRTExecutionConfig.execution_instance_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->execution_instance_key(), output);
  }

  // uint32 rng_seed = 4;
  if (this->rng_seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rng_seed(), output);
  }

  // bool release_input_handles = 5;
  if (this->release_input_handles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->release_input_handles(), output);
  }

  // bool release_compilation_handle = 6;
  if (this->release_compilation_handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->release_compilation_handle(), output);
  }

  // bool return_exploded_tuple = 7;
  if (this->return_exploded_tuple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->return_exploded_tuple(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xrt.XRTExecutionConfig)
}

::google::protobuf::uint8* XRTExecutionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xrt.XRTExecutionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device_ordinal(), target);
  }

  // int32 core_index_in_replica = 2;
  if (this->core_index_in_replica() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->core_index_in_replica(), target);
  }

  // string execution_instance_key = 3;
  if (this->execution_instance_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_instance_key().data(), static_cast<int>(this->execution_instance_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xrt.XRTExecutionConfig.execution_instance_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->execution_instance_key(), target);
  }

  // uint32 rng_seed = 4;
  if (this->rng_seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rng_seed(), target);
  }

  // bool release_input_handles = 5;
  if (this->release_input_handles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->release_input_handles(), target);
  }

  // bool release_compilation_handle = 6;
  if (this->release_compilation_handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->release_compilation_handle(), target);
  }

  // bool return_exploded_tuple = 7;
  if (this->return_exploded_tuple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->return_exploded_tuple(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrt.XRTExecutionConfig)
  return target;
}

size_t XRTExecutionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrt.XRTExecutionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string execution_instance_key = 3;
  if (this->execution_instance_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execution_instance_key());
  }

  // int32 device_ordinal = 1;
  if (this->device_ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_ordinal());
  }

  // int32 core_index_in_replica = 2;
  if (this->core_index_in_replica() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->core_index_in_replica());
  }

  // uint32 rng_seed = 4;
  if (this->rng_seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rng_seed());
  }

  // bool release_input_handles = 5;
  if (this->release_input_handles() != 0) {
    total_size += 1 + 1;
  }

  // bool release_compilation_handle = 6;
  if (this->release_compilation_handle() != 0) {
    total_size += 1 + 1;
  }

  // bool return_exploded_tuple = 7;
  if (this->return_exploded_tuple() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XRTExecutionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xrt.XRTExecutionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const XRTExecutionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XRTExecutionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xrt.XRTExecutionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xrt.XRTExecutionConfig)
    MergeFrom(*source);
  }
}

void XRTExecutionConfig::MergeFrom(const XRTExecutionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xrt.XRTExecutionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.execution_instance_key().size() > 0) {

    execution_instance_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_instance_key_);
  }
  if (from.device_ordinal() != 0) {
    set_device_ordinal(from.device_ordinal());
  }
  if (from.core_index_in_replica() != 0) {
    set_core_index_in_replica(from.core_index_in_replica());
  }
  if (from.rng_seed() != 0) {
    set_rng_seed(from.rng_seed());
  }
  if (from.release_input_handles() != 0) {
    set_release_input_handles(from.release_input_handles());
  }
  if (from.release_compilation_handle() != 0) {
    set_release_compilation_handle(from.release_compilation_handle());
  }
  if (from.return_exploded_tuple() != 0) {
    set_return_exploded_tuple(from.return_exploded_tuple());
  }
}

void XRTExecutionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xrt.XRTExecutionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XRTExecutionConfig::CopyFrom(const XRTExecutionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrt.XRTExecutionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XRTExecutionConfig::IsInitialized() const {
  return true;
}

void XRTExecutionConfig::Swap(XRTExecutionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XRTExecutionConfig::InternalSwap(XRTExecutionConfig* other) {
  using std::swap;
  execution_instance_key_.Swap(&other->execution_instance_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_ordinal_, other->device_ordinal_);
  swap(core_index_in_replica_, other->core_index_in_replica_);
  swap(rng_seed_, other->rng_seed_);
  swap(release_input_handles_, other->release_input_handles_);
  swap(release_compilation_handle_, other->release_compilation_handle_);
  swap(return_exploded_tuple_, other->return_exploded_tuple_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XRTExecutionConfig::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxrt_2fxrt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xrt
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates* Arena::CreateMaybeMessage< ::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::DeviceAssignment_ComputationDevice_DeviceMeshCoordinates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::DeviceAssignment_ComputationDevice* Arena::CreateMaybeMessage< ::xrt::DeviceAssignment_ComputationDevice >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::DeviceAssignment_ComputationDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::DeviceAssignment* Arena::CreateMaybeMessage< ::xrt::DeviceAssignment >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::DeviceAssignment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::XLAComputationConfig* Arena::CreateMaybeMessage< ::xrt::XLAComputationConfig >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::XLAComputationConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::XLAComputation* Arena::CreateMaybeMessage< ::xrt::XLAComputation >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::XLAComputation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::XLAAllocation* Arena::CreateMaybeMessage< ::xrt::XLAAllocation >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::XLAAllocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::XLATupleNode* Arena::CreateMaybeMessage< ::xrt::XLATupleNode >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::XLATupleNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xrt::XRTExecutionConfig* Arena::CreateMaybeMessage< ::xrt::XRTExecutionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::xrt::XRTExecutionConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
