// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/compiler/xla/xla.proto

#include "diplomacy_tensorflow/compiler/xla/xla.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_HloModuleProto;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HloReducePrecisionOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DebugOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExecuteResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ExecuteGraphRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ExecutionOptions;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChannelHandle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComputationStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceHandle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionHandle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionProfile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GlobalDataHandle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LayoutProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LiteralProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace xla {
class HloReducePrecisionOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HloReducePrecisionOptions>
      _instance;
} _HloReducePrecisionOptions_default_instance_;
class DebugOptions_XlaBackendExtraOptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse>
      _instance;
} _DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse_default_instance_;
class DebugOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugOptions>
      _instance;
} _DebugOptions_default_instance_;
class ExecutionOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionOptions>
      _instance;
} _ExecutionOptions_default_instance_;
class GetDeviceHandlesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeviceHandlesRequest>
      _instance;
} _GetDeviceHandlesRequest_default_instance_;
class GetDeviceHandlesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeviceHandlesResponse>
      _instance;
} _GetDeviceHandlesResponse_default_instance_;
class TransferToClientRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToClientRequest>
      _instance;
} _TransferToClientRequest_default_instance_;
class TransferToClientResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToClientResponse>
      _instance;
} _TransferToClientResponse_default_instance_;
class TransferToServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToServerRequest>
      _instance;
} _TransferToServerRequest_default_instance_;
class TransferToServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToServerResponse>
      _instance;
} _TransferToServerResponse_default_instance_;
class TransferToInfeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToInfeedRequest>
      _instance;
} _TransferToInfeedRequest_default_instance_;
class TransferToInfeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferToInfeedResponse>
      _instance;
} _TransferToInfeedResponse_default_instance_;
class TransferFromOutfeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFromOutfeedRequest>
      _instance;
} _TransferFromOutfeedRequest_default_instance_;
class TransferFromOutfeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFromOutfeedResponse>
      _instance;
} _TransferFromOutfeedResponse_default_instance_;
class ResetDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetDeviceRequest>
      _instance;
} _ResetDeviceRequest_default_instance_;
class ResetDeviceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetDeviceResponse>
      _instance;
} _ResetDeviceResponse_default_instance_;
class ComputationGraphStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputationGraphStatsRequest>
      _instance;
} _ComputationGraphStatsRequest_default_instance_;
class ComputationStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputationStatsResponse>
      _instance;
} _ComputationStatsResponse_default_instance_;
class CreateChannelHandleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateChannelHandleRequest>
      _instance;
} _CreateChannelHandleRequest_default_instance_;
class CreateChannelHandleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateChannelHandleResponse>
      _instance;
} _CreateChannelHandleResponse_default_instance_;
class UnregisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnregisterRequest>
      _instance;
} _UnregisterRequest_default_instance_;
class UnregisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnregisterResponse>
      _instance;
} _UnregisterResponse_default_instance_;
class CompileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompileRequest>
      _instance;
} _CompileRequest_default_instance_;
class CompileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompileResponse>
      _instance;
} _CompileResponse_default_instance_;
class ExecuteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteRequest>
      _instance;
} _ExecuteRequest_default_instance_;
class ExecuteGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGraphRequest>
      _instance;
} _ExecuteGraphRequest_default_instance_;
class ExecuteGraphParallelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGraphParallelRequest>
      _instance;
} _ExecuteGraphParallelRequest_default_instance_;
class ExecuteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteResponse>
      _instance;
} _ExecuteResponse_default_instance_;
class ExecuteParallelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteParallelResponse>
      _instance;
} _ExecuteParallelResponse_default_instance_;
class WaitForExecutionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForExecutionRequest>
      _instance;
} _WaitForExecutionRequest_default_instance_;
class WaitForExecutionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForExecutionResponse>
      _instance;
} _WaitForExecutionResponse_default_instance_;
class ComputeConstantGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeConstantGraphRequest>
      _instance;
} _ComputeConstantGraphRequest_default_instance_;
class ComputeConstantResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeConstantResponse>
      _instance;
} _ComputeConstantResponse_default_instance_;
class DeconstructTupleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeconstructTupleRequest>
      _instance;
} _DeconstructTupleRequest_default_instance_;
class DeconstructTupleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeconstructTupleResponse>
      _instance;
} _DeconstructTupleResponse_default_instance_;
class LoadDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDataRequest>
      _instance;
} _LoadDataRequest_default_instance_;
class LoadDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadDataResponse>
      _instance;
} _LoadDataResponse_default_instance_;
class GetShapeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetShapeRequest>
      _instance;
} _GetShapeRequest_default_instance_;
class GetShapeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetShapeResponse>
      _instance;
} _GetShapeResponse_default_instance_;
class UnpackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnpackRequest>
      _instance;
} _UnpackRequest_default_instance_;
class UnpackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnpackResponse>
      _instance;
} _UnpackResponse_default_instance_;
}  // namespace xla
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto {
static void InitDefaultsHloReducePrecisionOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_HloReducePrecisionOptions_default_instance_;
    new (ptr) ::xla::HloReducePrecisionOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::HloReducePrecisionOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HloReducePrecisionOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHloReducePrecisionOptions}, {}};

static void InitDefaultsDebugOptions_XlaBackendExtraOptionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse();
  }
  ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugOptions_XlaBackendExtraOptionsEntry_DoNotUse}, {}};

static void InitDefaultsDebugOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DebugOptions_default_instance_;
    new (ptr) ::xla::DebugOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DebugOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DebugOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDebugOptions}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_HloReducePrecisionOptions.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse.base,}};

static void InitDefaultsExecutionOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecutionOptions_default_instance_;
    new (ptr) ::xla::ExecutionOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecutionOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ExecutionOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsExecutionOptions}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsGetDeviceHandlesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GetDeviceHandlesRequest_default_instance_;
    new (ptr) ::xla::GetDeviceHandlesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GetDeviceHandlesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDeviceHandlesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDeviceHandlesRequest}, {}};

static void InitDefaultsGetDeviceHandlesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GetDeviceHandlesResponse_default_instance_;
    new (ptr) ::xla::GetDeviceHandlesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GetDeviceHandlesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDeviceHandlesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDeviceHandlesResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsTransferToClientRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToClientRequest_default_instance_;
    new (ptr) ::xla::TransferToClientRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToClientRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransferToClientRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransferToClientRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsTransferToClientResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToClientResponse_default_instance_;
    new (ptr) ::xla::TransferToClientResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToClientResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransferToClientResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransferToClientResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,}};

static void InitDefaultsTransferToServerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToServerRequest_default_instance_;
    new (ptr) ::xla::TransferToServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToServerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransferToServerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransferToServerRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsTransferToServerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToServerResponse_default_instance_;
    new (ptr) ::xla::TransferToServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransferToServerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransferToServerResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsTransferToInfeedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToInfeedRequest_default_instance_;
    new (ptr) ::xla::TransferToInfeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToInfeedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransferToInfeedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransferToInfeedRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsTransferToInfeedResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferToInfeedResponse_default_instance_;
    new (ptr) ::xla::TransferToInfeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferToInfeedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferToInfeedResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferToInfeedResponse}, {}};

static void InitDefaultsTransferFromOutfeedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferFromOutfeedRequest_default_instance_;
    new (ptr) ::xla::TransferFromOutfeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferFromOutfeedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransferFromOutfeedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransferFromOutfeedRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsTransferFromOutfeedResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TransferFromOutfeedResponse_default_instance_;
    new (ptr) ::xla::TransferFromOutfeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TransferFromOutfeedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransferFromOutfeedResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransferFromOutfeedResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,}};

static void InitDefaultsResetDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ResetDeviceRequest_default_instance_;
    new (ptr) ::xla::ResetDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ResetDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResetDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResetDeviceRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base,}};

static void InitDefaultsResetDeviceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ResetDeviceResponse_default_instance_;
    new (ptr) ::xla::ResetDeviceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ResetDeviceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetDeviceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetDeviceResponse}, {}};

static void InitDefaultsComputationGraphStatsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ComputationGraphStatsRequest_default_instance_;
    new (ptr) ::xla::ComputationGraphStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ComputationGraphStatsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ComputationGraphStatsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsComputationGraphStatsRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions.base,}};

static void InitDefaultsComputationStatsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ComputationStatsResponse_default_instance_;
    new (ptr) ::xla::ComputationStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ComputationStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ComputationStatsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsComputationStatsResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ComputationStats.base,}};

static void InitDefaultsCreateChannelHandleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_CreateChannelHandleRequest_default_instance_;
    new (ptr) ::xla::CreateChannelHandleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::CreateChannelHandleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateChannelHandleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateChannelHandleRequest}, {}};

static void InitDefaultsCreateChannelHandleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_CreateChannelHandleResponse_default_instance_;
    new (ptr) ::xla::CreateChannelHandleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::CreateChannelHandleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateChannelHandleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateChannelHandleResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ChannelHandle.base,}};

static void InitDefaultsUnregisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_UnregisterRequest_default_instance_;
    new (ptr) ::xla::UnregisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::UnregisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnregisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnregisterRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsUnregisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_UnregisterResponse_default_instance_;
    new (ptr) ::xla::UnregisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::UnregisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnregisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnregisterResponse}, {}};

static void InitDefaultsCompileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_CompileRequest_default_instance_;
    new (ptr) ::xla::CompileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::CompileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CompileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCompileRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecutionOptions.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsCompileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_CompileResponse_default_instance_;
    new (ptr) ::xla::CompileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::CompileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompileResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base,}};

static void InitDefaultsExecuteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecuteRequest_default_instance_;
    new (ptr) ::xla::ExecuteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecuteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExecuteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExecuteRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsExecuteGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecuteGraphRequest_default_instance_;
    new (ptr) ::xla::ExecuteGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecuteGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ExecuteGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsExecuteGraphRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecutionOptions.base,}};

static void InitDefaultsExecuteGraphParallelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecuteGraphParallelRequest_default_instance_;
    new (ptr) ::xla::ExecuteGraphParallelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecuteGraphParallelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExecuteGraphParallelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExecuteGraphParallelRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteGraphRequest.base,}};

static void InitDefaultsExecuteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecuteResponse_default_instance_;
    new (ptr) ::xla::ExecuteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecuteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExecuteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExecuteResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionProfile.base,}};

static void InitDefaultsExecuteParallelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecuteParallelResponse_default_instance_;
    new (ptr) ::xla::ExecuteParallelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecuteParallelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExecuteParallelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExecuteParallelResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteResponse.base,}};

static void InitDefaultsWaitForExecutionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_WaitForExecutionRequest_default_instance_;
    new (ptr) ::xla::WaitForExecutionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::WaitForExecutionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WaitForExecutionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWaitForExecutionRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base,}};

static void InitDefaultsWaitForExecutionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_WaitForExecutionResponse_default_instance_;
    new (ptr) ::xla::WaitForExecutionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::WaitForExecutionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WaitForExecutionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWaitForExecutionResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionProfile.base,}};

static void InitDefaultsComputeConstantGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ComputeConstantGraphRequest_default_instance_;
    new (ptr) ::xla::ComputeConstantGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ComputeConstantGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ComputeConstantGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsComputeConstantGraphRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::scc_info_HloModuleProto.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LayoutProto.base,}};

static void InitDefaultsComputeConstantResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ComputeConstantResponse_default_instance_;
    new (ptr) ::xla::ComputeConstantResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ComputeConstantResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ComputeConstantResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsComputeConstantResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base,}};

static void InitDefaultsDeconstructTupleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeconstructTupleRequest_default_instance_;
    new (ptr) ::xla::DeconstructTupleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeconstructTupleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeconstructTupleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeconstructTupleRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsDeconstructTupleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeconstructTupleResponse_default_instance_;
    new (ptr) ::xla::DeconstructTupleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeconstructTupleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeconstructTupleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeconstructTupleResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsLoadDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LoadDataRequest_default_instance_;
    new (ptr) ::xla::LoadDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LoadDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoadDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoadDataRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsLoadDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LoadDataResponse_default_instance_;
    new (ptr) ::xla::LoadDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LoadDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LoadDataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLoadDataResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsGetShapeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GetShapeRequest_default_instance_;
    new (ptr) ::xla::GetShapeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GetShapeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetShapeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetShapeRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsGetShapeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GetShapeResponse_default_instance_;
    new (ptr) ::xla::GetShapeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GetShapeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetShapeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetShapeResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsUnpackRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_UnpackRequest_default_instance_;
    new (ptr) ::xla::UnpackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::UnpackRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnpackRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnpackRequest}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

static void InitDefaultsUnpackResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_UnpackResponse_default_instance_;
    new (ptr) ::xla::UnpackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::UnpackResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnpackResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnpackResponse}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HloReducePrecisionOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeviceHandlesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeviceHandlesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToClientRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToClientResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToServerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToServerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToInfeedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferToInfeedResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFromOutfeedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFromOutfeedResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetDeviceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputationGraphStatsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputationStatsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateChannelHandleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateChannelHandleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnregisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnregisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteGraphParallelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteParallelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForExecutionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForExecutionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputeConstantGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputeConstantResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeconstructTupleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeconstructTupleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadDataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetShapeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetShapeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnpackRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnpackResponse.base);
}

::google::protobuf::Metadata file_level_metadata[41];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, exponent_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, mantissa_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, opcodes_to_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::HloReducePrecisionOptions, opname_substrings_to_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_generate_hlo_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_graph_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_graph_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_dump_as_graphdef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_log_hlo_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_generate_hlo_text_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_optimized_hlo_proto_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_computations_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_executions_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_disable_hlo_passes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_disable_all_hlo_passes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_backend_optimization_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_embed_ir_in_executable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_ir_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_eliminate_hlo_implicit_broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_cpu_multi_thread_eigen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_cuda_data_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_ftz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_disable_multi_streaming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_llvm_enable_alias_scope_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_llvm_enable_noalias_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_llvm_enable_invariant_load_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_llvm_disable_expensive_passes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, hlo_reduce_precision_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_test_all_output_layouts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_test_all_input_layouts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_graph_sharding_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_tfgraph_device_scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_use_cudnn_batchnorm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_unoptimized_hlo_proto_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_dump_per_pass_hlo_proto_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_cpu_use_mkl_dnn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_max_kernel_unroll_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_cpu_enable_fast_math_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_enable_fast_min_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_crash_on_verification_failures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_force_host_platform_device_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_gpu_disable_ptxas_optimizations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_dump_as_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_hlo_evaluator_use_fast_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DebugOptions, xla_backend_extra_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionOptions, shape_with_output_layout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionOptions, seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionOptions, debug_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionOptions, device_handles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetDeviceHandlesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetDeviceHandlesRequest, device_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetDeviceHandlesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetDeviceHandlesResponse, device_handles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToClientRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToClientRequest, shape_with_layout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToClientResponse, literal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToServerRequest, literal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToServerRequest, device_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToServerResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToInfeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToInfeedRequest, literal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToInfeedRequest, replica_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToInfeedRequest, device_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferToInfeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedRequest, shape_with_layout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedRequest, replica_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedRequest, device_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TransferFromOutfeedResponse, literal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ResetDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ResetDeviceRequest, device_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ResetDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationGraphStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationGraphStatsRequest, computation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationGraphStatsRequest, debug_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationStatsResponse, stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CreateChannelHandleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CreateChannelHandleRequest, channel_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CreateChannelHandleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CreateChannelHandleResponse, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnregisterRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileRequest, computation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileRequest, execution_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileRequest, input_shape_with_layout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::CompileResponse, handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteRequest, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteRequest, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphRequest, computation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphRequest, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphRequest, execution_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphParallelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteGraphParallelRequest, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteResponse, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteResponse, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteParallelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecuteParallelResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WaitForExecutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WaitForExecutionRequest, execution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WaitForExecutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WaitForExecutionResponse, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WaitForExecutionResponse, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputeConstantGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputeConstantGraphRequest, computation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputeConstantGraphRequest, output_layout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputeConstantResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputeConstantResponse, literal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeconstructTupleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeconstructTupleRequest, tuple_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeconstructTupleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeconstructTupleResponse, element_handles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, columnio_tablet_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, columnio_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, element_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataRequest, zip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, data_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, available_rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, rows_loaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LoadDataResponse, nanoseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetShapeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetShapeRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetShapeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GetShapeResponse, shape_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnpackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnpackRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnpackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::UnpackResponse, tied_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xla::HloReducePrecisionOptions)},
  { 10, 17, sizeof(::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse)},
  { 19, -1, sizeof(::xla::DebugOptions)},
  { 66, -1, sizeof(::xla::ExecutionOptions)},
  { 75, -1, sizeof(::xla::GetDeviceHandlesRequest)},
  { 81, -1, sizeof(::xla::GetDeviceHandlesResponse)},
  { 87, -1, sizeof(::xla::TransferToClientRequest)},
  { 94, -1, sizeof(::xla::TransferToClientResponse)},
  { 100, -1, sizeof(::xla::TransferToServerRequest)},
  { 107, -1, sizeof(::xla::TransferToServerResponse)},
  { 113, -1, sizeof(::xla::TransferToInfeedRequest)},
  { 121, -1, sizeof(::xla::TransferToInfeedResponse)},
  { 126, -1, sizeof(::xla::TransferFromOutfeedRequest)},
  { 134, -1, sizeof(::xla::TransferFromOutfeedResponse)},
  { 140, -1, sizeof(::xla::ResetDeviceRequest)},
  { 146, -1, sizeof(::xla::ResetDeviceResponse)},
  { 151, -1, sizeof(::xla::ComputationGraphStatsRequest)},
  { 158, -1, sizeof(::xla::ComputationStatsResponse)},
  { 164, -1, sizeof(::xla::CreateChannelHandleRequest)},
  { 170, -1, sizeof(::xla::CreateChannelHandleResponse)},
  { 176, -1, sizeof(::xla::UnregisterRequest)},
  { 182, -1, sizeof(::xla::UnregisterResponse)},
  { 187, -1, sizeof(::xla::CompileRequest)},
  { 195, -1, sizeof(::xla::CompileResponse)},
  { 201, -1, sizeof(::xla::ExecuteRequest)},
  { 208, -1, sizeof(::xla::ExecuteGraphRequest)},
  { 216, -1, sizeof(::xla::ExecuteGraphParallelRequest)},
  { 222, -1, sizeof(::xla::ExecuteResponse)},
  { 229, -1, sizeof(::xla::ExecuteParallelResponse)},
  { 235, -1, sizeof(::xla::WaitForExecutionRequest)},
  { 241, -1, sizeof(::xla::WaitForExecutionResponse)},
  { 248, -1, sizeof(::xla::ComputeConstantGraphRequest)},
  { 255, -1, sizeof(::xla::ComputeConstantResponse)},
  { 261, -1, sizeof(::xla::DeconstructTupleRequest)},
  { 267, -1, sizeof(::xla::DeconstructTupleResponse)},
  { 273, -1, sizeof(::xla::LoadDataRequest)},
  { 284, -1, sizeof(::xla::LoadDataResponse)},
  { 294, -1, sizeof(::xla::GetShapeRequest)},
  { 300, -1, sizeof(::xla::GetShapeResponse)},
  { 306, -1, sizeof(::xla::UnpackRequest)},
  { 312, -1, sizeof(::xla::UnpackResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_HloReducePrecisionOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DebugOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecutionOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GetDeviceHandlesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GetDeviceHandlesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToClientRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToClientResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToInfeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferToInfeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferFromOutfeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TransferFromOutfeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ResetDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ResetDeviceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ComputationGraphStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ComputationStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_CreateChannelHandleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_CreateChannelHandleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_UnregisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_UnregisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_CompileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_CompileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecuteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecuteGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecuteGraphParallelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecuteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecuteParallelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_WaitForExecutionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_WaitForExecutionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ComputeConstantGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ComputeConstantResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeconstructTupleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeconstructTupleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LoadDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LoadDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GetShapeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GetShapeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_UnpackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_UnpackResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/compiler/xla/xla.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 41);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+diplomacy_tensorflow/compiler/xla/xla."
      "proto\022\003xla\0320diplomacy_tensorflow/compile"
      "r/xla/xla_data.proto\0323diplomacy_tensorfl"
      "ow/compiler/xla/service/hlo.proto\"\304\002\n\031Hl"
      "oReducePrecisionOptions\0229\n\010location\030\001 \001("
      "\0162\'.xla.HloReducePrecisionOptions.Locati"
      "on\022\025\n\rexponent_bits\030\002 \001(\r\022\025\n\rmantissa_bi"
      "ts\030\003 \001(\r\022\031\n\021opcodes_to_suffix\030\004 \003(\r\022#\n\033o"
      "pname_substrings_to_suffix\030\005 \003(\t\"~\n\010Loca"
      "tion\022\r\n\tOP_INPUTS\020\000\022\016\n\nOP_OUTPUTS\020\001\022\026\n\022U"
      "NFUSED_OP_OUTPUTS\020\002\022\034\n\030FUSION_INPUTS_BY_"
      "CONTENT\020\003\022\035\n\031FUSION_OUTPUTS_BY_CONTENT\020\004"
      "\"\236\r\n\014DebugOptions\022\036\n\026xla_generate_hlo_gr"
      "aph\030\001 \001(\t\022\037\n\027xla_hlo_graph_addresses\030\002 \001"
      "(\010\022\032\n\022xla_hlo_graph_path\030\004 \001(\t\022 \n\030xla_hl"
      "o_dump_as_graphdef\030\005 \001(\010\022\030\n\020xla_log_hlo_"
      "text\030\006 \001(\t\022 \n\030xla_generate_hlo_text_to\030\007"
      " \001(\t\022\'\n\037xla_dump_optimized_hlo_proto_to\030"
      "\010 \001(\t\022\027\n\017xla_hlo_profile\030\t \001(\010\022 \n\030xla_du"
      "mp_computations_to\030\n \001(\t\022\036\n\026xla_dump_exe"
      "cutions_to\030\013 \001(\t\022\036\n\026xla_disable_hlo_pass"
      "es\030\036 \003(\t\022\"\n\032xla_disable_all_hlo_passes\030h"
      " \001(\010\022&\n\036xla_backend_optimization_level\030\037"
      " \001(\005\022\"\n\032xla_embed_ir_in_executable\030! \001(\010"
      "\022\026\n\016xla_dump_ir_to\030\" \001(\t\022,\n$xla_eliminat"
      "e_hlo_implicit_broadcast\030# \001(\010\022\"\n\032xla_cp"
      "u_multi_thread_eigen\030< \001(\010\022\035\n\025xla_gpu_cu"
      "da_data_dir\030= \001(\t\022\023\n\013xla_gpu_ftz\030> \001(\010\022\'"
      "\n\037xla_gpu_disable_multi_streaming\030\? \001(\010\022"
      ",\n$xla_llvm_enable_alias_scope_metadata\030"
      "F \001(\010\022(\n xla_llvm_enable_noalias_metadat"
      "a\030G \001(\010\022/\n\'xla_llvm_enable_invariant_loa"
      "d_metadata\030H \001(\010\022)\n!xla_llvm_disable_exp"
      "ensive_passes\030I \001(\010\022D\n\034hlo_reduce_precis"
      "ion_options\030P \003(\0132\036.xla.HloReducePrecisi"
      "onOptions\022#\n\033xla_test_all_output_layouts"
      "\030Z \001(\010\022\"\n\032xla_test_all_input_layouts\030[ \001"
      "(\010\022$\n\034xla_hlo_graph_sharding_color\030\\ \001(\010"
      "\022%\n\035xla_hlo_tfgraph_device_scopes\030] \001(\010\022"
      "#\n\033xla_gpu_use_cudnn_batchnorm\030^ \001(\010\022)\n!"
      "xla_dump_unoptimized_hlo_proto_to\030_ \001(\t\022"
      "&\n\036xla_dump_per_pass_hlo_proto_to\030` \001(\t\022"
      "\033\n\023xla_cpu_use_mkl_dnn\030a \001(\010\022(\n xla_gpu_"
      "max_kernel_unroll_factor\030b \001(\005\022 \n\030xla_cp"
      "u_enable_fast_math\030c \001(\010\022#\n\033xla_gpu_enab"
      "le_fast_min_max\030d \001(\010\022.\n&xla_gpu_crash_o"
      "n_verification_failures\030e \001(\010\022,\n$xla_for"
      "ce_host_platform_device_count\030f \001(\005\022+\n#x"
      "la_gpu_disable_ptxas_optimizations\030g \001(\010"
      "\022\034\n\024xla_hlo_dump_as_html\030i \001(\010\022\'\n\037xla_hl"
      "o_evaluator_use_fast_path\030j \001(\010\022Q\n\031xla_b"
      "ackend_extra_options\030\364\003 \003(\0132-.xla.DebugO"
      "ptions.XlaBackendExtraOptionsEntry\032=\n\033Xl"
      "aBackendExtraOptionsEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"\250\001\n\020ExecutionOptions\0221"
      "\n\030shape_with_output_layout\030\002 \001(\0132\017.xla.S"
      "hapeProto\022\014\n\004seed\030\003 \001(\004\022(\n\rdebug_options"
      "\030\004 \001(\0132\021.xla.DebugOptions\022)\n\016device_hand"
      "les\030\005 \003(\0132\021.xla.DeviceHandle\"/\n\027GetDevic"
      "eHandlesRequest\022\024\n\014device_count\030\001 \001(\003\"E\n"
      "\030GetDeviceHandlesResponse\022)\n\016device_hand"
      "les\030\001 \003(\0132\021.xla.DeviceHandle\"j\n\027Transfer"
      "ToClientRequest\022#\n\004data\030\001 \001(\0132\025.xla.Glob"
      "alDataHandle\022*\n\021shape_with_layout\030\002 \001(\0132"
      "\017.xla.ShapeProto\">\n\030TransferToClientResp"
      "onse\022\"\n\007literal\030\001 \001(\0132\021.xla.LiteralProto"
      "\"g\n\027TransferToServerRequest\022\"\n\007literal\030\001"
      " \001(\0132\021.xla.LiteralProto\022(\n\rdevice_handle"
      "\030\002 \001(\0132\021.xla.DeviceHandle\"\?\n\030TransferToS"
      "erverResponse\022#\n\004data\030\001 \001(\0132\025.xla.Global"
      "DataHandle\"{\n\027TransferToInfeedRequest\022\"\n"
      "\007literal\030\001 \001(\0132\021.xla.LiteralProto\022\022\n\nrep"
      "lica_id\030\002 \001(\003\022(\n\rdevice_handle\030\003 \001(\0132\021.x"
      "la.DeviceHandle\"\032\n\030TransferToInfeedRespo"
      "nse\"\206\001\n\032TransferFromOutfeedRequest\022*\n\021sh"
      "ape_with_layout\030\001 \001(\0132\017.xla.ShapeProto\022\022"
      "\n\nreplica_id\030\002 \001(\003\022(\n\rdevice_handle\030\003 \001("
      "\0132\021.xla.DeviceHandle\"A\n\033TransferFromOutf"
      "eedResponse\022\"\n\007literal\030\001 \001(\0132\021.xla.Liter"
      "alProto\">\n\022ResetDeviceRequest\022(\n\rdevice_"
      "handle\030\001 \001(\0132\021.xla.DeviceHandle\"\025\n\023Reset"
      "DeviceResponse\"r\n\034ComputationGraphStatsR"
      "equest\022(\n\013computation\030\001 \001(\0132\023.xla.HloMod"
      "uleProto\022(\n\rdebug_options\030\002 \001(\0132\021.xla.De"
      "bugOptions\"@\n\030ComputationStatsResponse\022$"
      "\n\005stats\030\001 \001(\0132\025.xla.ComputationStats\"R\n\032"
      "CreateChannelHandleRequest\0224\n\014channel_ty"
      "pe\030\001 \001(\0162\036.xla.ChannelHandle.ChannelType"
      "\"B\n\033CreateChannelHandleResponse\022#\n\007chann"
      "el\030\001 \001(\0132\022.xla.ChannelHandle\"8\n\021Unregist"
      "erRequest\022#\n\004data\030\001 \003(\0132\025.xla.GlobalData"
      "Handle\"\024\n\022UnregisterResponse\"\236\001\n\016Compile"
      "Request\022(\n\013computation\030\001 \001(\0132\023.xla.HloMo"
      "duleProto\0220\n\021execution_options\030\002 \001(\0132\025.x"
      "la.ExecutionOptions\0220\n\027input_shape_with_"
      "layout\030\003 \003(\0132\017.xla.ShapeProto\"7\n\017Compile"
      "Response\022$\n\006handle\030\001 \001(\0132\024.xla.Execution"
      "Handle\"`\n\016ExecuteRequest\022$\n\006handle\030\001 \001(\013"
      "2\024.xla.ExecutionHandle\022(\n\targuments\030\002 \003("
      "\0132\025.xla.GlobalDataHandle\"\233\001\n\023ExecuteGrap"
      "hRequest\022(\n\013computation\030\001 \001(\0132\023.xla.HloM"
      "oduleProto\022(\n\targuments\030\002 \003(\0132\025.xla.Glob"
      "alDataHandle\0220\n\021execution_options\030\003 \001(\0132"
      "\025.xla.ExecutionOptions\"I\n\033ExecuteGraphPa"
      "rallelRequest\022*\n\010requests\030\001 \003(\0132\030.xla.Ex"
      "ecuteGraphRequest\"`\n\017ExecuteResponse\022%\n\006"
      "output\030\001 \001(\0132\025.xla.GlobalDataHandle\022&\n\007p"
      "rofile\030\002 \001(\0132\025.xla.ExecutionProfile\"B\n\027E"
      "xecuteParallelResponse\022\'\n\tresponses\030\001 \003("
      "\0132\024.xla.ExecuteResponse\"B\n\027WaitForExecut"
      "ionRequest\022\'\n\texecution\030\001 \001(\0132\024.xla.Exec"
      "utionHandle\"i\n\030WaitForExecutionResponse\022"
      "%\n\006output\030\001 \001(\0132\025.xla.GlobalDataHandle\022&"
      "\n\007profile\030\002 \001(\0132\025.xla.ExecutionProfile\"p"
      "\n\033ComputeConstantGraphRequest\022(\n\013computa"
      "tion\030\001 \001(\0132\023.xla.HloModuleProto\022\'\n\routpu"
      "t_layout\030\002 \001(\0132\020.xla.LayoutProto\"=\n\027Comp"
      "uteConstantResponse\022\"\n\007literal\030\001 \001(\0132\021.x"
      "la.LiteralProto\"F\n\027DeconstructTupleReque"
      "st\022+\n\014tuple_handle\030\002 \001(\0132\025.xla.GlobalDat"
      "aHandle\"J\n\030DeconstructTupleResponse\022.\n\017e"
      "lement_handles\030\001 \003(\0132\025.xla.GlobalDataHan"
      "dle\"\233\001\n\017LoadDataRequest\022\034\n\024columnio_tabl"
      "et_path\030\001 \001(\t\022\026\n\016columnio_field\030\002 \001(\t\022&\n"
      "\relement_shape\030\003 \001(\0132\017.xla.ShapeProto\022\016\n"
      "\006offset\030\004 \001(\003\022\r\n\005limit\030\005 \001(\003\022\013\n\003zip\030\006 \001("
      "\010\"\236\001\n\020LoadDataResponse\022#\n\004data\030\001 \001(\0132\025.x"
      "la.GlobalDataHandle\022#\n\ndata_shape\030\002 \001(\0132"
      "\017.xla.ShapeProto\022\026\n\016available_rows\030\003 \001(\003"
      "\022\023\n\013rows_loaded\030\004 \001(\003\022\023\n\013nanoseconds\030\005 \001"
      "(\003\"6\n\017GetShapeRequest\022#\n\004data\030\001 \001(\0132\025.xl"
      "a.GlobalDataHandle\"2\n\020GetShapeResponse\022\036"
      "\n\005shape\030\001 \001(\0132\017.xla.ShapeProto\"4\n\rUnpack"
      "Request\022#\n\004data\030\001 \001(\0132\025.xla.GlobalDataHa"
      "ndle\":\n\016UnpackResponse\022(\n\ttied_data\030\001 \003("
      "\0132\025.xla.GlobalDataHandleb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/compiler/xla/xla.proto", &protobuf_RegisterTypes);
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::AddDescriptors();
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fservice_2fhlo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto
namespace xla {
const ::google::protobuf::EnumDescriptor* HloReducePrecisionOptions_Location_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_enum_descriptors[0];
}
bool HloReducePrecisionOptions_Location_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::OP_INPUTS;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::OP_OUTPUTS;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::UNFUSED_OP_OUTPUTS;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::FUSION_INPUTS_BY_CONTENT;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::FUSION_OUTPUTS_BY_CONTENT;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::Location_MIN;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions::Location_MAX;
const int HloReducePrecisionOptions::Location_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HloReducePrecisionOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HloReducePrecisionOptions::kLocationFieldNumber;
const int HloReducePrecisionOptions::kExponentBitsFieldNumber;
const int HloReducePrecisionOptions::kMantissaBitsFieldNumber;
const int HloReducePrecisionOptions::kOpcodesToSuffixFieldNumber;
const int HloReducePrecisionOptions::kOpnameSubstringsToSuffixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HloReducePrecisionOptions::HloReducePrecisionOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_HloReducePrecisionOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.HloReducePrecisionOptions)
}
HloReducePrecisionOptions::HloReducePrecisionOptions(const HloReducePrecisionOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      opcodes_to_suffix_(from.opcodes_to_suffix_),
      opname_substrings_to_suffix_(from.opname_substrings_to_suffix_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&location_, &from.location_,
    static_cast<size_t>(reinterpret_cast<char*>(&mantissa_bits_) -
    reinterpret_cast<char*>(&location_)) + sizeof(mantissa_bits_));
  // @@protoc_insertion_point(copy_constructor:xla.HloReducePrecisionOptions)
}

void HloReducePrecisionOptions::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mantissa_bits_) -
      reinterpret_cast<char*>(&location_)) + sizeof(mantissa_bits_));
}

HloReducePrecisionOptions::~HloReducePrecisionOptions() {
  // @@protoc_insertion_point(destructor:xla.HloReducePrecisionOptions)
  SharedDtor();
}

void HloReducePrecisionOptions::SharedDtor() {
}

void HloReducePrecisionOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HloReducePrecisionOptions::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HloReducePrecisionOptions& HloReducePrecisionOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_HloReducePrecisionOptions.base);
  return *internal_default_instance();
}


void HloReducePrecisionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloReducePrecisionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opcodes_to_suffix_.Clear();
  opname_substrings_to_suffix_.Clear();
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mantissa_bits_) -
      reinterpret_cast<char*>(&location_)) + sizeof(mantissa_bits_));
  _internal_metadata_.Clear();
}

bool HloReducePrecisionOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.HloReducePrecisionOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloReducePrecisionOptions.Location location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_location(static_cast< ::xla::HloReducePrecisionOptions_Location >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exponent_bits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exponent_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mantissa_bits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mantissa_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 opcodes_to_suffix = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_opcodes_to_suffix())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_opcodes_to_suffix())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string opname_substrings_to_suffix = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_opname_substrings_to_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opname_substrings_to_suffix(this->opname_substrings_to_suffix_size() - 1).data(),
            static_cast<int>(this->opname_substrings_to_suffix(this->opname_substrings_to_suffix_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.HloReducePrecisionOptions.opname_substrings_to_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.HloReducePrecisionOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.HloReducePrecisionOptions)
  return false;
#undef DO_
}

void HloReducePrecisionOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.HloReducePrecisionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloReducePrecisionOptions.Location location = 1;
  if (this->location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->location(), output);
  }

  // uint32 exponent_bits = 2;
  if (this->exponent_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exponent_bits(), output);
  }

  // uint32 mantissa_bits = 3;
  if (this->mantissa_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mantissa_bits(), output);
  }

  // repeated uint32 opcodes_to_suffix = 4;
  if (this->opcodes_to_suffix_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _opcodes_to_suffix_cached_byte_size_));
  }
  for (int i = 0, n = this->opcodes_to_suffix_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->opcodes_to_suffix(i), output);
  }

  // repeated string opname_substrings_to_suffix = 5;
  for (int i = 0, n = this->opname_substrings_to_suffix_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname_substrings_to_suffix(i).data(), static_cast<int>(this->opname_substrings_to_suffix(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloReducePrecisionOptions.opname_substrings_to_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->opname_substrings_to_suffix(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.HloReducePrecisionOptions)
}

::google::protobuf::uint8* HloReducePrecisionOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloReducePrecisionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloReducePrecisionOptions.Location location = 1;
  if (this->location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->location(), target);
  }

  // uint32 exponent_bits = 2;
  if (this->exponent_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exponent_bits(), target);
  }

  // uint32 mantissa_bits = 3;
  if (this->mantissa_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mantissa_bits(), target);
  }

  // repeated uint32 opcodes_to_suffix = 4;
  if (this->opcodes_to_suffix_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _opcodes_to_suffix_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->opcodes_to_suffix_, target);
  }

  // repeated string opname_substrings_to_suffix = 5;
  for (int i = 0, n = this->opname_substrings_to_suffix_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname_substrings_to_suffix(i).data(), static_cast<int>(this->opname_substrings_to_suffix(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.HloReducePrecisionOptions.opname_substrings_to_suffix");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->opname_substrings_to_suffix(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloReducePrecisionOptions)
  return target;
}

size_t HloReducePrecisionOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloReducePrecisionOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 opcodes_to_suffix = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->opcodes_to_suffix_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _opcodes_to_suffix_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string opname_substrings_to_suffix = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->opname_substrings_to_suffix_size());
  for (int i = 0, n = this->opname_substrings_to_suffix_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->opname_substrings_to_suffix(i));
  }

  // .xla.HloReducePrecisionOptions.Location location = 1;
  if (this->location() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->location());
  }

  // uint32 exponent_bits = 2;
  if (this->exponent_bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exponent_bits());
  }

  // uint32 mantissa_bits = 3;
  if (this->mantissa_bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mantissa_bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HloReducePrecisionOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.HloReducePrecisionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const HloReducePrecisionOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HloReducePrecisionOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.HloReducePrecisionOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.HloReducePrecisionOptions)
    MergeFrom(*source);
  }
}

void HloReducePrecisionOptions::MergeFrom(const HloReducePrecisionOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.HloReducePrecisionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opcodes_to_suffix_.MergeFrom(from.opcodes_to_suffix_);
  opname_substrings_to_suffix_.MergeFrom(from.opname_substrings_to_suffix_);
  if (from.location() != 0) {
    set_location(from.location());
  }
  if (from.exponent_bits() != 0) {
    set_exponent_bits(from.exponent_bits());
  }
  if (from.mantissa_bits() != 0) {
    set_mantissa_bits(from.mantissa_bits());
  }
}

void HloReducePrecisionOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.HloReducePrecisionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HloReducePrecisionOptions::CopyFrom(const HloReducePrecisionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloReducePrecisionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloReducePrecisionOptions::IsInitialized() const {
  return true;
}

void HloReducePrecisionOptions::Swap(HloReducePrecisionOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HloReducePrecisionOptions::InternalSwap(HloReducePrecisionOptions* other) {
  using std::swap;
  opcodes_to_suffix_.InternalSwap(&other->opcodes_to_suffix_);
  opname_substrings_to_suffix_.InternalSwap(CastToBase(&other->opname_substrings_to_suffix_));
  swap(location_, other->location_);
  swap(exponent_bits_, other->exponent_bits_);
  swap(mantissa_bits_, other->mantissa_bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HloReducePrecisionOptions::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse() {}
DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::MergeFrom(const DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[1];
}
void DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DebugOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugOptions::kXlaGenerateHloGraphFieldNumber;
const int DebugOptions::kXlaHloGraphAddressesFieldNumber;
const int DebugOptions::kXlaHloGraphPathFieldNumber;
const int DebugOptions::kXlaHloDumpAsGraphdefFieldNumber;
const int DebugOptions::kXlaLogHloTextFieldNumber;
const int DebugOptions::kXlaGenerateHloTextToFieldNumber;
const int DebugOptions::kXlaDumpOptimizedHloProtoToFieldNumber;
const int DebugOptions::kXlaHloProfileFieldNumber;
const int DebugOptions::kXlaDumpComputationsToFieldNumber;
const int DebugOptions::kXlaDumpExecutionsToFieldNumber;
const int DebugOptions::kXlaDisableHloPassesFieldNumber;
const int DebugOptions::kXlaDisableAllHloPassesFieldNumber;
const int DebugOptions::kXlaBackendOptimizationLevelFieldNumber;
const int DebugOptions::kXlaEmbedIrInExecutableFieldNumber;
const int DebugOptions::kXlaDumpIrToFieldNumber;
const int DebugOptions::kXlaEliminateHloImplicitBroadcastFieldNumber;
const int DebugOptions::kXlaCpuMultiThreadEigenFieldNumber;
const int DebugOptions::kXlaGpuCudaDataDirFieldNumber;
const int DebugOptions::kXlaGpuFtzFieldNumber;
const int DebugOptions::kXlaGpuDisableMultiStreamingFieldNumber;
const int DebugOptions::kXlaLlvmEnableAliasScopeMetadataFieldNumber;
const int DebugOptions::kXlaLlvmEnableNoaliasMetadataFieldNumber;
const int DebugOptions::kXlaLlvmEnableInvariantLoadMetadataFieldNumber;
const int DebugOptions::kXlaLlvmDisableExpensivePassesFieldNumber;
const int DebugOptions::kHloReducePrecisionOptionsFieldNumber;
const int DebugOptions::kXlaTestAllOutputLayoutsFieldNumber;
const int DebugOptions::kXlaTestAllInputLayoutsFieldNumber;
const int DebugOptions::kXlaHloGraphShardingColorFieldNumber;
const int DebugOptions::kXlaHloTfgraphDeviceScopesFieldNumber;
const int DebugOptions::kXlaGpuUseCudnnBatchnormFieldNumber;
const int DebugOptions::kXlaDumpUnoptimizedHloProtoToFieldNumber;
const int DebugOptions::kXlaDumpPerPassHloProtoToFieldNumber;
const int DebugOptions::kXlaCpuUseMklDnnFieldNumber;
const int DebugOptions::kXlaGpuMaxKernelUnrollFactorFieldNumber;
const int DebugOptions::kXlaCpuEnableFastMathFieldNumber;
const int DebugOptions::kXlaGpuEnableFastMinMaxFieldNumber;
const int DebugOptions::kXlaGpuCrashOnVerificationFailuresFieldNumber;
const int DebugOptions::kXlaForceHostPlatformDeviceCountFieldNumber;
const int DebugOptions::kXlaGpuDisablePtxasOptimizationsFieldNumber;
const int DebugOptions::kXlaHloDumpAsHtmlFieldNumber;
const int DebugOptions::kXlaHloEvaluatorUseFastPathFieldNumber;
const int DebugOptions::kXlaBackendExtraOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugOptions::DebugOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DebugOptions)
}
DebugOptions::DebugOptions(const DebugOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      xla_disable_hlo_passes_(from.xla_disable_hlo_passes_),
      hlo_reduce_precision_options_(from.hlo_reduce_precision_options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xla_backend_extra_options_.MergeFrom(from.xla_backend_extra_options_);
  xla_generate_hlo_graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_generate_hlo_graph().size() > 0) {
    xla_generate_hlo_graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_generate_hlo_graph_);
  }
  xla_hlo_graph_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_hlo_graph_path().size() > 0) {
    xla_hlo_graph_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_hlo_graph_path_);
  }
  xla_log_hlo_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_log_hlo_text().size() > 0) {
    xla_log_hlo_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_log_hlo_text_);
  }
  xla_generate_hlo_text_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_generate_hlo_text_to().size() > 0) {
    xla_generate_hlo_text_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_generate_hlo_text_to_);
  }
  xla_dump_optimized_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_optimized_hlo_proto_to().size() > 0) {
    xla_dump_optimized_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_optimized_hlo_proto_to_);
  }
  xla_dump_computations_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_computations_to().size() > 0) {
    xla_dump_computations_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_computations_to_);
  }
  xla_dump_executions_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_executions_to().size() > 0) {
    xla_dump_executions_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_executions_to_);
  }
  xla_dump_ir_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_ir_to().size() > 0) {
    xla_dump_ir_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_ir_to_);
  }
  xla_gpu_cuda_data_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_gpu_cuda_data_dir().size() > 0) {
    xla_gpu_cuda_data_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_gpu_cuda_data_dir_);
  }
  xla_dump_unoptimized_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_unoptimized_hlo_proto_to().size() > 0) {
    xla_dump_unoptimized_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_unoptimized_hlo_proto_to_);
  }
  xla_dump_per_pass_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xla_dump_per_pass_hlo_proto_to().size() > 0) {
    xla_dump_per_pass_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_per_pass_hlo_proto_to_);
  }
  ::memcpy(&xla_hlo_graph_addresses_, &from.xla_hlo_graph_addresses_,
    static_cast<size_t>(reinterpret_cast<char*>(&xla_hlo_evaluator_use_fast_path_) -
    reinterpret_cast<char*>(&xla_hlo_graph_addresses_)) + sizeof(xla_hlo_evaluator_use_fast_path_));
  // @@protoc_insertion_point(copy_constructor:xla.DebugOptions)
}

void DebugOptions::SharedCtor() {
  xla_generate_hlo_graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_hlo_graph_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_log_hlo_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_generate_hlo_text_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_optimized_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_computations_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_executions_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_ir_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_gpu_cuda_data_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_unoptimized_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_per_pass_hlo_proto_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xla_hlo_graph_addresses_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xla_hlo_evaluator_use_fast_path_) -
      reinterpret_cast<char*>(&xla_hlo_graph_addresses_)) + sizeof(xla_hlo_evaluator_use_fast_path_));
}

DebugOptions::~DebugOptions() {
  // @@protoc_insertion_point(destructor:xla.DebugOptions)
  SharedDtor();
}

void DebugOptions::SharedDtor() {
  xla_generate_hlo_graph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_hlo_graph_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_log_hlo_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_generate_hlo_text_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_optimized_hlo_proto_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_computations_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_executions_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_ir_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_gpu_cuda_data_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_unoptimized_hlo_proto_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_per_pass_hlo_proto_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebugOptions::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugOptions& DebugOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DebugOptions.base);
  return *internal_default_instance();
}


void DebugOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DebugOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xla_disable_hlo_passes_.Clear();
  hlo_reduce_precision_options_.Clear();
  xla_backend_extra_options_.Clear();
  xla_generate_hlo_graph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_hlo_graph_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_log_hlo_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_generate_hlo_text_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_optimized_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_computations_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_executions_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_ir_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_gpu_cuda_data_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_unoptimized_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xla_dump_per_pass_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xla_hlo_graph_addresses_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xla_hlo_evaluator_use_fast_path_) -
      reinterpret_cast<char*>(&xla_hlo_graph_addresses_)) + sizeof(xla_hlo_evaluator_use_fast_path_));
  _internal_metadata_.Clear();
}

bool DebugOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DebugOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string xla_generate_hlo_graph = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_generate_hlo_graph()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_generate_hlo_graph().data(), static_cast<int>(this->xla_generate_hlo_graph().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_generate_hlo_graph"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_graph_addresses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_graph_addresses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_hlo_graph_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_hlo_graph_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_hlo_graph_path().data(), static_cast<int>(this->xla_hlo_graph_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_hlo_graph_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_dump_as_graphdef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_dump_as_graphdef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_log_hlo_text = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_log_hlo_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_log_hlo_text().data(), static_cast<int>(this->xla_log_hlo_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_log_hlo_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_generate_hlo_text_to = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_generate_hlo_text_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_generate_hlo_text_to().data(), static_cast<int>(this->xla_generate_hlo_text_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_generate_hlo_text_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_optimized_hlo_proto_to = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_optimized_hlo_proto_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_optimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_optimized_hlo_proto_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_optimized_hlo_proto_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_profile = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_profile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_computations_to = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_computations_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_computations_to().data(), static_cast<int>(this->xla_dump_computations_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_computations_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_executions_to = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_executions_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_executions_to().data(), static_cast<int>(this->xla_dump_executions_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_executions_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string xla_disable_hlo_passes = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_xla_disable_hlo_passes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_disable_hlo_passes(this->xla_disable_hlo_passes_size() - 1).data(),
            static_cast<int>(this->xla_disable_hlo_passes(this->xla_disable_hlo_passes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_disable_hlo_passes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xla_backend_optimization_level = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xla_backend_optimization_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_embed_ir_in_executable = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_embed_ir_in_executable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_ir_to = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_ir_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_ir_to().data(), static_cast<int>(this->xla_dump_ir_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_ir_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_eliminate_hlo_implicit_broadcast = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_eliminate_hlo_implicit_broadcast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_cpu_multi_thread_eigen = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_cpu_multi_thread_eigen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_gpu_cuda_data_dir = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_gpu_cuda_data_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_gpu_cuda_data_dir().data(), static_cast<int>(this->xla_gpu_cuda_data_dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_gpu_cuda_data_dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_ftz = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 496 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_ftz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_disable_multi_streaming = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 504 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_disable_multi_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_llvm_enable_alias_scope_metadata = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_llvm_enable_alias_scope_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_llvm_enable_noalias_metadata = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 568 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_llvm_enable_noalias_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_llvm_enable_invariant_load_metadata = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 576 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_llvm_enable_invariant_load_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_llvm_disable_expensive_passes = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_llvm_disable_expensive_passes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hlo_reduce_precision_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_test_all_output_layouts = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 720 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_test_all_output_layouts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_test_all_input_layouts = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 728 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_test_all_input_layouts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_graph_sharding_color = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 736 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_graph_sharding_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_tfgraph_device_scopes = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 744 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_tfgraph_device_scopes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_use_cudnn_batchnorm = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 752 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_use_cudnn_batchnorm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_unoptimized_hlo_proto_to = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_unoptimized_hlo_proto_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_unoptimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_unoptimized_hlo_proto_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xla_dump_per_pass_hlo_proto_to = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xla_dump_per_pass_hlo_proto_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xla_dump_per_pass_hlo_proto_to().data(), static_cast<int>(this->xla_dump_per_pass_hlo_proto_to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.xla_dump_per_pass_hlo_proto_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_cpu_use_mkl_dnn = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 776 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_cpu_use_mkl_dnn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xla_gpu_max_kernel_unroll_factor = 98;
      case 98: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 784 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xla_gpu_max_kernel_unroll_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_cpu_enable_fast_math = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 792 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_cpu_enable_fast_math_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_enable_fast_min_max = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_enable_fast_min_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_crash_on_verification_failures = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_crash_on_verification_failures_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xla_force_host_platform_device_count = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xla_force_host_platform_device_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_gpu_disable_ptxas_optimizations = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 824 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_gpu_disable_ptxas_optimizations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_disable_all_hlo_passes = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 832 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_disable_all_hlo_passes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_dump_as_html = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 840 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_dump_as_html_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xla_hlo_evaluator_use_fast_path = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 848 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xla_hlo_evaluator_use_fast_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> xla_backend_extra_options = 500;
      case 500: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 4002 & 0xFF */)) {
          DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&xla_backend_extra_options_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.XlaBackendExtraOptionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.DebugOptions.XlaBackendExtraOptionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DebugOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DebugOptions)
  return false;
#undef DO_
}

void DebugOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DebugOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xla_generate_hlo_graph = 1;
  if (this->xla_generate_hlo_graph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_generate_hlo_graph().data(), static_cast<int>(this->xla_generate_hlo_graph().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_generate_hlo_graph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xla_generate_hlo_graph(), output);
  }

  // bool xla_hlo_graph_addresses = 2;
  if (this->xla_hlo_graph_addresses() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->xla_hlo_graph_addresses(), output);
  }

  // string xla_hlo_graph_path = 4;
  if (this->xla_hlo_graph_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_hlo_graph_path().data(), static_cast<int>(this->xla_hlo_graph_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_hlo_graph_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->xla_hlo_graph_path(), output);
  }

  // bool xla_hlo_dump_as_graphdef = 5;
  if (this->xla_hlo_dump_as_graphdef() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->xla_hlo_dump_as_graphdef(), output);
  }

  // string xla_log_hlo_text = 6;
  if (this->xla_log_hlo_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_log_hlo_text().data(), static_cast<int>(this->xla_log_hlo_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_log_hlo_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->xla_log_hlo_text(), output);
  }

  // string xla_generate_hlo_text_to = 7;
  if (this->xla_generate_hlo_text_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_generate_hlo_text_to().data(), static_cast<int>(this->xla_generate_hlo_text_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_generate_hlo_text_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->xla_generate_hlo_text_to(), output);
  }

  // string xla_dump_optimized_hlo_proto_to = 8;
  if (this->xla_dump_optimized_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_optimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_optimized_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_optimized_hlo_proto_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->xla_dump_optimized_hlo_proto_to(), output);
  }

  // bool xla_hlo_profile = 9;
  if (this->xla_hlo_profile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->xla_hlo_profile(), output);
  }

  // string xla_dump_computations_to = 10;
  if (this->xla_dump_computations_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_computations_to().data(), static_cast<int>(this->xla_dump_computations_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_computations_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->xla_dump_computations_to(), output);
  }

  // string xla_dump_executions_to = 11;
  if (this->xla_dump_executions_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_executions_to().data(), static_cast<int>(this->xla_dump_executions_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_executions_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->xla_dump_executions_to(), output);
  }

  // repeated string xla_disable_hlo_passes = 30;
  for (int i = 0, n = this->xla_disable_hlo_passes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_disable_hlo_passes(i).data(), static_cast<int>(this->xla_disable_hlo_passes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_disable_hlo_passes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->xla_disable_hlo_passes(i), output);
  }

  // int32 xla_backend_optimization_level = 31;
  if (this->xla_backend_optimization_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->xla_backend_optimization_level(), output);
  }

  // bool xla_embed_ir_in_executable = 33;
  if (this->xla_embed_ir_in_executable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(33, this->xla_embed_ir_in_executable(), output);
  }

  // string xla_dump_ir_to = 34;
  if (this->xla_dump_ir_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_ir_to().data(), static_cast<int>(this->xla_dump_ir_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_ir_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->xla_dump_ir_to(), output);
  }

  // bool xla_eliminate_hlo_implicit_broadcast = 35;
  if (this->xla_eliminate_hlo_implicit_broadcast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->xla_eliminate_hlo_implicit_broadcast(), output);
  }

  // bool xla_cpu_multi_thread_eigen = 60;
  if (this->xla_cpu_multi_thread_eigen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(60, this->xla_cpu_multi_thread_eigen(), output);
  }

  // string xla_gpu_cuda_data_dir = 61;
  if (this->xla_gpu_cuda_data_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_gpu_cuda_data_dir().data(), static_cast<int>(this->xla_gpu_cuda_data_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_gpu_cuda_data_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      61, this->xla_gpu_cuda_data_dir(), output);
  }

  // bool xla_gpu_ftz = 62;
  if (this->xla_gpu_ftz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(62, this->xla_gpu_ftz(), output);
  }

  // bool xla_gpu_disable_multi_streaming = 63;
  if (this->xla_gpu_disable_multi_streaming() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(63, this->xla_gpu_disable_multi_streaming(), output);
  }

  // bool xla_llvm_enable_alias_scope_metadata = 70;
  if (this->xla_llvm_enable_alias_scope_metadata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(70, this->xla_llvm_enable_alias_scope_metadata(), output);
  }

  // bool xla_llvm_enable_noalias_metadata = 71;
  if (this->xla_llvm_enable_noalias_metadata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(71, this->xla_llvm_enable_noalias_metadata(), output);
  }

  // bool xla_llvm_enable_invariant_load_metadata = 72;
  if (this->xla_llvm_enable_invariant_load_metadata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(72, this->xla_llvm_enable_invariant_load_metadata(), output);
  }

  // bool xla_llvm_disable_expensive_passes = 73;
  if (this->xla_llvm_disable_expensive_passes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->xla_llvm_disable_expensive_passes(), output);
  }

  // repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hlo_reduce_precision_options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80,
      this->hlo_reduce_precision_options(static_cast<int>(i)),
      output);
  }

  // bool xla_test_all_output_layouts = 90;
  if (this->xla_test_all_output_layouts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(90, this->xla_test_all_output_layouts(), output);
  }

  // bool xla_test_all_input_layouts = 91;
  if (this->xla_test_all_input_layouts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(91, this->xla_test_all_input_layouts(), output);
  }

  // bool xla_hlo_graph_sharding_color = 92;
  if (this->xla_hlo_graph_sharding_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(92, this->xla_hlo_graph_sharding_color(), output);
  }

  // bool xla_hlo_tfgraph_device_scopes = 93;
  if (this->xla_hlo_tfgraph_device_scopes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(93, this->xla_hlo_tfgraph_device_scopes(), output);
  }

  // bool xla_gpu_use_cudnn_batchnorm = 94;
  if (this->xla_gpu_use_cudnn_batchnorm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(94, this->xla_gpu_use_cudnn_batchnorm(), output);
  }

  // string xla_dump_unoptimized_hlo_proto_to = 95;
  if (this->xla_dump_unoptimized_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_unoptimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_unoptimized_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      95, this->xla_dump_unoptimized_hlo_proto_to(), output);
  }

  // string xla_dump_per_pass_hlo_proto_to = 96;
  if (this->xla_dump_per_pass_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_per_pass_hlo_proto_to().data(), static_cast<int>(this->xla_dump_per_pass_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_per_pass_hlo_proto_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      96, this->xla_dump_per_pass_hlo_proto_to(), output);
  }

  // bool xla_cpu_use_mkl_dnn = 97;
  if (this->xla_cpu_use_mkl_dnn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(97, this->xla_cpu_use_mkl_dnn(), output);
  }

  // int32 xla_gpu_max_kernel_unroll_factor = 98;
  if (this->xla_gpu_max_kernel_unroll_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(98, this->xla_gpu_max_kernel_unroll_factor(), output);
  }

  // bool xla_cpu_enable_fast_math = 99;
  if (this->xla_cpu_enable_fast_math() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(99, this->xla_cpu_enable_fast_math(), output);
  }

  // bool xla_gpu_enable_fast_min_max = 100;
  if (this->xla_gpu_enable_fast_min_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(100, this->xla_gpu_enable_fast_min_max(), output);
  }

  // bool xla_gpu_crash_on_verification_failures = 101;
  if (this->xla_gpu_crash_on_verification_failures() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(101, this->xla_gpu_crash_on_verification_failures(), output);
  }

  // int32 xla_force_host_platform_device_count = 102;
  if (this->xla_force_host_platform_device_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(102, this->xla_force_host_platform_device_count(), output);
  }

  // bool xla_gpu_disable_ptxas_optimizations = 103;
  if (this->xla_gpu_disable_ptxas_optimizations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(103, this->xla_gpu_disable_ptxas_optimizations(), output);
  }

  // bool xla_disable_all_hlo_passes = 104;
  if (this->xla_disable_all_hlo_passes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(104, this->xla_disable_all_hlo_passes(), output);
  }

  // bool xla_hlo_dump_as_html = 105;
  if (this->xla_hlo_dump_as_html() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(105, this->xla_hlo_dump_as_html(), output);
  }

  // bool xla_hlo_evaluator_use_fast_path = 106;
  if (this->xla_hlo_evaluator_use_fast_path() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(106, this->xla_hlo_evaluator_use_fast_path(), output);
  }

  // map<string, string> xla_backend_extra_options = 500;
  if (!this->xla_backend_extra_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "xla.DebugOptions.XlaBackendExtraOptionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "xla.DebugOptions.XlaBackendExtraOptionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->xla_backend_extra_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->xla_backend_extra_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->xla_backend_extra_options().begin();
          it != this->xla_backend_extra_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(xla_backend_extra_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            500, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->xla_backend_extra_options().begin();
          it != this->xla_backend_extra_options().end(); ++it) {
        entry.reset(xla_backend_extra_options_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            500, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DebugOptions)
}

::google::protobuf::uint8* DebugOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DebugOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xla_generate_hlo_graph = 1;
  if (this->xla_generate_hlo_graph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_generate_hlo_graph().data(), static_cast<int>(this->xla_generate_hlo_graph().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_generate_hlo_graph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xla_generate_hlo_graph(), target);
  }

  // bool xla_hlo_graph_addresses = 2;
  if (this->xla_hlo_graph_addresses() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->xla_hlo_graph_addresses(), target);
  }

  // string xla_hlo_graph_path = 4;
  if (this->xla_hlo_graph_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_hlo_graph_path().data(), static_cast<int>(this->xla_hlo_graph_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_hlo_graph_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->xla_hlo_graph_path(), target);
  }

  // bool xla_hlo_dump_as_graphdef = 5;
  if (this->xla_hlo_dump_as_graphdef() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->xla_hlo_dump_as_graphdef(), target);
  }

  // string xla_log_hlo_text = 6;
  if (this->xla_log_hlo_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_log_hlo_text().data(), static_cast<int>(this->xla_log_hlo_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_log_hlo_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->xla_log_hlo_text(), target);
  }

  // string xla_generate_hlo_text_to = 7;
  if (this->xla_generate_hlo_text_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_generate_hlo_text_to().data(), static_cast<int>(this->xla_generate_hlo_text_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_generate_hlo_text_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->xla_generate_hlo_text_to(), target);
  }

  // string xla_dump_optimized_hlo_proto_to = 8;
  if (this->xla_dump_optimized_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_optimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_optimized_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_optimized_hlo_proto_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->xla_dump_optimized_hlo_proto_to(), target);
  }

  // bool xla_hlo_profile = 9;
  if (this->xla_hlo_profile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->xla_hlo_profile(), target);
  }

  // string xla_dump_computations_to = 10;
  if (this->xla_dump_computations_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_computations_to().data(), static_cast<int>(this->xla_dump_computations_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_computations_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->xla_dump_computations_to(), target);
  }

  // string xla_dump_executions_to = 11;
  if (this->xla_dump_executions_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_executions_to().data(), static_cast<int>(this->xla_dump_executions_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_executions_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->xla_dump_executions_to(), target);
  }

  // repeated string xla_disable_hlo_passes = 30;
  for (int i = 0, n = this->xla_disable_hlo_passes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_disable_hlo_passes(i).data(), static_cast<int>(this->xla_disable_hlo_passes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_disable_hlo_passes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(30, this->xla_disable_hlo_passes(i), target);
  }

  // int32 xla_backend_optimization_level = 31;
  if (this->xla_backend_optimization_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->xla_backend_optimization_level(), target);
  }

  // bool xla_embed_ir_in_executable = 33;
  if (this->xla_embed_ir_in_executable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(33, this->xla_embed_ir_in_executable(), target);
  }

  // string xla_dump_ir_to = 34;
  if (this->xla_dump_ir_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_ir_to().data(), static_cast<int>(this->xla_dump_ir_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_ir_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->xla_dump_ir_to(), target);
  }

  // bool xla_eliminate_hlo_implicit_broadcast = 35;
  if (this->xla_eliminate_hlo_implicit_broadcast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->xla_eliminate_hlo_implicit_broadcast(), target);
  }

  // bool xla_cpu_multi_thread_eigen = 60;
  if (this->xla_cpu_multi_thread_eigen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(60, this->xla_cpu_multi_thread_eigen(), target);
  }

  // string xla_gpu_cuda_data_dir = 61;
  if (this->xla_gpu_cuda_data_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_gpu_cuda_data_dir().data(), static_cast<int>(this->xla_gpu_cuda_data_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_gpu_cuda_data_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        61, this->xla_gpu_cuda_data_dir(), target);
  }

  // bool xla_gpu_ftz = 62;
  if (this->xla_gpu_ftz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(62, this->xla_gpu_ftz(), target);
  }

  // bool xla_gpu_disable_multi_streaming = 63;
  if (this->xla_gpu_disable_multi_streaming() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(63, this->xla_gpu_disable_multi_streaming(), target);
  }

  // bool xla_llvm_enable_alias_scope_metadata = 70;
  if (this->xla_llvm_enable_alias_scope_metadata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(70, this->xla_llvm_enable_alias_scope_metadata(), target);
  }

  // bool xla_llvm_enable_noalias_metadata = 71;
  if (this->xla_llvm_enable_noalias_metadata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(71, this->xla_llvm_enable_noalias_metadata(), target);
  }

  // bool xla_llvm_enable_invariant_load_metadata = 72;
  if (this->xla_llvm_enable_invariant_load_metadata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(72, this->xla_llvm_enable_invariant_load_metadata(), target);
  }

  // bool xla_llvm_disable_expensive_passes = 73;
  if (this->xla_llvm_disable_expensive_passes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(73, this->xla_llvm_disable_expensive_passes(), target);
  }

  // repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hlo_reduce_precision_options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80, this->hlo_reduce_precision_options(static_cast<int>(i)), deterministic, target);
  }

  // bool xla_test_all_output_layouts = 90;
  if (this->xla_test_all_output_layouts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(90, this->xla_test_all_output_layouts(), target);
  }

  // bool xla_test_all_input_layouts = 91;
  if (this->xla_test_all_input_layouts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(91, this->xla_test_all_input_layouts(), target);
  }

  // bool xla_hlo_graph_sharding_color = 92;
  if (this->xla_hlo_graph_sharding_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(92, this->xla_hlo_graph_sharding_color(), target);
  }

  // bool xla_hlo_tfgraph_device_scopes = 93;
  if (this->xla_hlo_tfgraph_device_scopes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(93, this->xla_hlo_tfgraph_device_scopes(), target);
  }

  // bool xla_gpu_use_cudnn_batchnorm = 94;
  if (this->xla_gpu_use_cudnn_batchnorm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(94, this->xla_gpu_use_cudnn_batchnorm(), target);
  }

  // string xla_dump_unoptimized_hlo_proto_to = 95;
  if (this->xla_dump_unoptimized_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_unoptimized_hlo_proto_to().data(), static_cast<int>(this->xla_dump_unoptimized_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        95, this->xla_dump_unoptimized_hlo_proto_to(), target);
  }

  // string xla_dump_per_pass_hlo_proto_to = 96;
  if (this->xla_dump_per_pass_hlo_proto_to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xla_dump_per_pass_hlo_proto_to().data(), static_cast<int>(this->xla_dump_per_pass_hlo_proto_to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.DebugOptions.xla_dump_per_pass_hlo_proto_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        96, this->xla_dump_per_pass_hlo_proto_to(), target);
  }

  // bool xla_cpu_use_mkl_dnn = 97;
  if (this->xla_cpu_use_mkl_dnn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(97, this->xla_cpu_use_mkl_dnn(), target);
  }

  // int32 xla_gpu_max_kernel_unroll_factor = 98;
  if (this->xla_gpu_max_kernel_unroll_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(98, this->xla_gpu_max_kernel_unroll_factor(), target);
  }

  // bool xla_cpu_enable_fast_math = 99;
  if (this->xla_cpu_enable_fast_math() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(99, this->xla_cpu_enable_fast_math(), target);
  }

  // bool xla_gpu_enable_fast_min_max = 100;
  if (this->xla_gpu_enable_fast_min_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(100, this->xla_gpu_enable_fast_min_max(), target);
  }

  // bool xla_gpu_crash_on_verification_failures = 101;
  if (this->xla_gpu_crash_on_verification_failures() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(101, this->xla_gpu_crash_on_verification_failures(), target);
  }

  // int32 xla_force_host_platform_device_count = 102;
  if (this->xla_force_host_platform_device_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(102, this->xla_force_host_platform_device_count(), target);
  }

  // bool xla_gpu_disable_ptxas_optimizations = 103;
  if (this->xla_gpu_disable_ptxas_optimizations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(103, this->xla_gpu_disable_ptxas_optimizations(), target);
  }

  // bool xla_disable_all_hlo_passes = 104;
  if (this->xla_disable_all_hlo_passes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(104, this->xla_disable_all_hlo_passes(), target);
  }

  // bool xla_hlo_dump_as_html = 105;
  if (this->xla_hlo_dump_as_html() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(105, this->xla_hlo_dump_as_html(), target);
  }

  // bool xla_hlo_evaluator_use_fast_path = 106;
  if (this->xla_hlo_evaluator_use_fast_path() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(106, this->xla_hlo_evaluator_use_fast_path(), target);
  }

  // map<string, string> xla_backend_extra_options = 500;
  if (!this->xla_backend_extra_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "xla.DebugOptions.XlaBackendExtraOptionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "xla.DebugOptions.XlaBackendExtraOptionsEntry.value");
      }
    };

    if (deterministic &&
        this->xla_backend_extra_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->xla_backend_extra_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->xla_backend_extra_options().begin();
          it != this->xla_backend_extra_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(xla_backend_extra_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       500, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->xla_backend_extra_options().begin();
          it != this->xla_backend_extra_options().end(); ++it) {
        entry.reset(xla_backend_extra_options_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       500, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DebugOptions)
  return target;
}

size_t DebugOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DebugOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string xla_disable_hlo_passes = 30;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->xla_disable_hlo_passes_size());
  for (int i = 0, n = this->xla_disable_hlo_passes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->xla_disable_hlo_passes(i));
  }

  // repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
  {
    unsigned int count = static_cast<unsigned int>(this->hlo_reduce_precision_options_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hlo_reduce_precision_options(static_cast<int>(i)));
    }
  }

  // map<string, string> xla_backend_extra_options = 500;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->xla_backend_extra_options_size());
  {
    ::std::unique_ptr<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->xla_backend_extra_options().begin();
        it != this->xla_backend_extra_options().end(); ++it) {
      entry.reset(xla_backend_extra_options_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string xla_generate_hlo_graph = 1;
  if (this->xla_generate_hlo_graph().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_generate_hlo_graph());
  }

  // string xla_hlo_graph_path = 4;
  if (this->xla_hlo_graph_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_hlo_graph_path());
  }

  // string xla_log_hlo_text = 6;
  if (this->xla_log_hlo_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_log_hlo_text());
  }

  // string xla_generate_hlo_text_to = 7;
  if (this->xla_generate_hlo_text_to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_generate_hlo_text_to());
  }

  // string xla_dump_optimized_hlo_proto_to = 8;
  if (this->xla_dump_optimized_hlo_proto_to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_optimized_hlo_proto_to());
  }

  // string xla_dump_computations_to = 10;
  if (this->xla_dump_computations_to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_computations_to());
  }

  // string xla_dump_executions_to = 11;
  if (this->xla_dump_executions_to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_executions_to());
  }

  // string xla_dump_ir_to = 34;
  if (this->xla_dump_ir_to().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_ir_to());
  }

  // string xla_gpu_cuda_data_dir = 61;
  if (this->xla_gpu_cuda_data_dir().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_gpu_cuda_data_dir());
  }

  // string xla_dump_unoptimized_hlo_proto_to = 95;
  if (this->xla_dump_unoptimized_hlo_proto_to().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_unoptimized_hlo_proto_to());
  }

  // string xla_dump_per_pass_hlo_proto_to = 96;
  if (this->xla_dump_per_pass_hlo_proto_to().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xla_dump_per_pass_hlo_proto_to());
  }

  // bool xla_hlo_graph_addresses = 2;
  if (this->xla_hlo_graph_addresses() != 0) {
    total_size += 1 + 1;
  }

  // bool xla_hlo_dump_as_graphdef = 5;
  if (this->xla_hlo_dump_as_graphdef() != 0) {
    total_size += 1 + 1;
  }

  // bool xla_hlo_profile = 9;
  if (this->xla_hlo_profile() != 0) {
    total_size += 1 + 1;
  }

  // bool xla_disable_all_hlo_passes = 104;
  if (this->xla_disable_all_hlo_passes() != 0) {
    total_size += 2 + 1;
  }

  // int32 xla_backend_optimization_level = 31;
  if (this->xla_backend_optimization_level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xla_backend_optimization_level());
  }

  // bool xla_embed_ir_in_executable = 33;
  if (this->xla_embed_ir_in_executable() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_eliminate_hlo_implicit_broadcast = 35;
  if (this->xla_eliminate_hlo_implicit_broadcast() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_cpu_multi_thread_eigen = 60;
  if (this->xla_cpu_multi_thread_eigen() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_gpu_ftz = 62;
  if (this->xla_gpu_ftz() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_gpu_disable_multi_streaming = 63;
  if (this->xla_gpu_disable_multi_streaming() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_llvm_enable_alias_scope_metadata = 70;
  if (this->xla_llvm_enable_alias_scope_metadata() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_llvm_enable_noalias_metadata = 71;
  if (this->xla_llvm_enable_noalias_metadata() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_llvm_enable_invariant_load_metadata = 72;
  if (this->xla_llvm_enable_invariant_load_metadata() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_llvm_disable_expensive_passes = 73;
  if (this->xla_llvm_disable_expensive_passes() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_test_all_output_layouts = 90;
  if (this->xla_test_all_output_layouts() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_test_all_input_layouts = 91;
  if (this->xla_test_all_input_layouts() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_hlo_graph_sharding_color = 92;
  if (this->xla_hlo_graph_sharding_color() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_hlo_tfgraph_device_scopes = 93;
  if (this->xla_hlo_tfgraph_device_scopes() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_gpu_use_cudnn_batchnorm = 94;
  if (this->xla_gpu_use_cudnn_batchnorm() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_cpu_use_mkl_dnn = 97;
  if (this->xla_cpu_use_mkl_dnn() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_cpu_enable_fast_math = 99;
  if (this->xla_cpu_enable_fast_math() != 0) {
    total_size += 2 + 1;
  }

  // int32 xla_gpu_max_kernel_unroll_factor = 98;
  if (this->xla_gpu_max_kernel_unroll_factor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xla_gpu_max_kernel_unroll_factor());
  }

  // int32 xla_force_host_platform_device_count = 102;
  if (this->xla_force_host_platform_device_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xla_force_host_platform_device_count());
  }

  // bool xla_gpu_enable_fast_min_max = 100;
  if (this->xla_gpu_enable_fast_min_max() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_gpu_crash_on_verification_failures = 101;
  if (this->xla_gpu_crash_on_verification_failures() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_gpu_disable_ptxas_optimizations = 103;
  if (this->xla_gpu_disable_ptxas_optimizations() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_hlo_dump_as_html = 105;
  if (this->xla_hlo_dump_as_html() != 0) {
    total_size += 2 + 1;
  }

  // bool xla_hlo_evaluator_use_fast_path = 106;
  if (this->xla_hlo_evaluator_use_fast_path() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DebugOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DebugOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DebugOptions)
    MergeFrom(*source);
  }
}

void DebugOptions::MergeFrom(const DebugOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DebugOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  xla_disable_hlo_passes_.MergeFrom(from.xla_disable_hlo_passes_);
  hlo_reduce_precision_options_.MergeFrom(from.hlo_reduce_precision_options_);
  xla_backend_extra_options_.MergeFrom(from.xla_backend_extra_options_);
  if (from.xla_generate_hlo_graph().size() > 0) {

    xla_generate_hlo_graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_generate_hlo_graph_);
  }
  if (from.xla_hlo_graph_path().size() > 0) {

    xla_hlo_graph_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_hlo_graph_path_);
  }
  if (from.xla_log_hlo_text().size() > 0) {

    xla_log_hlo_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_log_hlo_text_);
  }
  if (from.xla_generate_hlo_text_to().size() > 0) {

    xla_generate_hlo_text_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_generate_hlo_text_to_);
  }
  if (from.xla_dump_optimized_hlo_proto_to().size() > 0) {

    xla_dump_optimized_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_optimized_hlo_proto_to_);
  }
  if (from.xla_dump_computations_to().size() > 0) {

    xla_dump_computations_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_computations_to_);
  }
  if (from.xla_dump_executions_to().size() > 0) {

    xla_dump_executions_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_executions_to_);
  }
  if (from.xla_dump_ir_to().size() > 0) {

    xla_dump_ir_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_ir_to_);
  }
  if (from.xla_gpu_cuda_data_dir().size() > 0) {

    xla_gpu_cuda_data_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_gpu_cuda_data_dir_);
  }
  if (from.xla_dump_unoptimized_hlo_proto_to().size() > 0) {

    xla_dump_unoptimized_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_unoptimized_hlo_proto_to_);
  }
  if (from.xla_dump_per_pass_hlo_proto_to().size() > 0) {

    xla_dump_per_pass_hlo_proto_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xla_dump_per_pass_hlo_proto_to_);
  }
  if (from.xla_hlo_graph_addresses() != 0) {
    set_xla_hlo_graph_addresses(from.xla_hlo_graph_addresses());
  }
  if (from.xla_hlo_dump_as_graphdef() != 0) {
    set_xla_hlo_dump_as_graphdef(from.xla_hlo_dump_as_graphdef());
  }
  if (from.xla_hlo_profile() != 0) {
    set_xla_hlo_profile(from.xla_hlo_profile());
  }
  if (from.xla_disable_all_hlo_passes() != 0) {
    set_xla_disable_all_hlo_passes(from.xla_disable_all_hlo_passes());
  }
  if (from.xla_backend_optimization_level() != 0) {
    set_xla_backend_optimization_level(from.xla_backend_optimization_level());
  }
  if (from.xla_embed_ir_in_executable() != 0) {
    set_xla_embed_ir_in_executable(from.xla_embed_ir_in_executable());
  }
  if (from.xla_eliminate_hlo_implicit_broadcast() != 0) {
    set_xla_eliminate_hlo_implicit_broadcast(from.xla_eliminate_hlo_implicit_broadcast());
  }
  if (from.xla_cpu_multi_thread_eigen() != 0) {
    set_xla_cpu_multi_thread_eigen(from.xla_cpu_multi_thread_eigen());
  }
  if (from.xla_gpu_ftz() != 0) {
    set_xla_gpu_ftz(from.xla_gpu_ftz());
  }
  if (from.xla_gpu_disable_multi_streaming() != 0) {
    set_xla_gpu_disable_multi_streaming(from.xla_gpu_disable_multi_streaming());
  }
  if (from.xla_llvm_enable_alias_scope_metadata() != 0) {
    set_xla_llvm_enable_alias_scope_metadata(from.xla_llvm_enable_alias_scope_metadata());
  }
  if (from.xla_llvm_enable_noalias_metadata() != 0) {
    set_xla_llvm_enable_noalias_metadata(from.xla_llvm_enable_noalias_metadata());
  }
  if (from.xla_llvm_enable_invariant_load_metadata() != 0) {
    set_xla_llvm_enable_invariant_load_metadata(from.xla_llvm_enable_invariant_load_metadata());
  }
  if (from.xla_llvm_disable_expensive_passes() != 0) {
    set_xla_llvm_disable_expensive_passes(from.xla_llvm_disable_expensive_passes());
  }
  if (from.xla_test_all_output_layouts() != 0) {
    set_xla_test_all_output_layouts(from.xla_test_all_output_layouts());
  }
  if (from.xla_test_all_input_layouts() != 0) {
    set_xla_test_all_input_layouts(from.xla_test_all_input_layouts());
  }
  if (from.xla_hlo_graph_sharding_color() != 0) {
    set_xla_hlo_graph_sharding_color(from.xla_hlo_graph_sharding_color());
  }
  if (from.xla_hlo_tfgraph_device_scopes() != 0) {
    set_xla_hlo_tfgraph_device_scopes(from.xla_hlo_tfgraph_device_scopes());
  }
  if (from.xla_gpu_use_cudnn_batchnorm() != 0) {
    set_xla_gpu_use_cudnn_batchnorm(from.xla_gpu_use_cudnn_batchnorm());
  }
  if (from.xla_cpu_use_mkl_dnn() != 0) {
    set_xla_cpu_use_mkl_dnn(from.xla_cpu_use_mkl_dnn());
  }
  if (from.xla_cpu_enable_fast_math() != 0) {
    set_xla_cpu_enable_fast_math(from.xla_cpu_enable_fast_math());
  }
  if (from.xla_gpu_max_kernel_unroll_factor() != 0) {
    set_xla_gpu_max_kernel_unroll_factor(from.xla_gpu_max_kernel_unroll_factor());
  }
  if (from.xla_force_host_platform_device_count() != 0) {
    set_xla_force_host_platform_device_count(from.xla_force_host_platform_device_count());
  }
  if (from.xla_gpu_enable_fast_min_max() != 0) {
    set_xla_gpu_enable_fast_min_max(from.xla_gpu_enable_fast_min_max());
  }
  if (from.xla_gpu_crash_on_verification_failures() != 0) {
    set_xla_gpu_crash_on_verification_failures(from.xla_gpu_crash_on_verification_failures());
  }
  if (from.xla_gpu_disable_ptxas_optimizations() != 0) {
    set_xla_gpu_disable_ptxas_optimizations(from.xla_gpu_disable_ptxas_optimizations());
  }
  if (from.xla_hlo_dump_as_html() != 0) {
    set_xla_hlo_dump_as_html(from.xla_hlo_dump_as_html());
  }
  if (from.xla_hlo_evaluator_use_fast_path() != 0) {
    set_xla_hlo_evaluator_use_fast_path(from.xla_hlo_evaluator_use_fast_path());
  }
}

void DebugOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DebugOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugOptions::CopyFrom(const DebugOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DebugOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugOptions::IsInitialized() const {
  return true;
}

void DebugOptions::Swap(DebugOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugOptions::InternalSwap(DebugOptions* other) {
  using std::swap;
  xla_disable_hlo_passes_.InternalSwap(CastToBase(&other->xla_disable_hlo_passes_));
  CastToBase(&hlo_reduce_precision_options_)->InternalSwap(CastToBase(&other->hlo_reduce_precision_options_));
  xla_backend_extra_options_.Swap(&other->xla_backend_extra_options_);
  xla_generate_hlo_graph_.Swap(&other->xla_generate_hlo_graph_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_hlo_graph_path_.Swap(&other->xla_hlo_graph_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_log_hlo_text_.Swap(&other->xla_log_hlo_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_generate_hlo_text_to_.Swap(&other->xla_generate_hlo_text_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_optimized_hlo_proto_to_.Swap(&other->xla_dump_optimized_hlo_proto_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_computations_to_.Swap(&other->xla_dump_computations_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_executions_to_.Swap(&other->xla_dump_executions_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_ir_to_.Swap(&other->xla_dump_ir_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_gpu_cuda_data_dir_.Swap(&other->xla_gpu_cuda_data_dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_unoptimized_hlo_proto_to_.Swap(&other->xla_dump_unoptimized_hlo_proto_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  xla_dump_per_pass_hlo_proto_to_.Swap(&other->xla_dump_per_pass_hlo_proto_to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(xla_hlo_graph_addresses_, other->xla_hlo_graph_addresses_);
  swap(xla_hlo_dump_as_graphdef_, other->xla_hlo_dump_as_graphdef_);
  swap(xla_hlo_profile_, other->xla_hlo_profile_);
  swap(xla_disable_all_hlo_passes_, other->xla_disable_all_hlo_passes_);
  swap(xla_backend_optimization_level_, other->xla_backend_optimization_level_);
  swap(xla_embed_ir_in_executable_, other->xla_embed_ir_in_executable_);
  swap(xla_eliminate_hlo_implicit_broadcast_, other->xla_eliminate_hlo_implicit_broadcast_);
  swap(xla_cpu_multi_thread_eigen_, other->xla_cpu_multi_thread_eigen_);
  swap(xla_gpu_ftz_, other->xla_gpu_ftz_);
  swap(xla_gpu_disable_multi_streaming_, other->xla_gpu_disable_multi_streaming_);
  swap(xla_llvm_enable_alias_scope_metadata_, other->xla_llvm_enable_alias_scope_metadata_);
  swap(xla_llvm_enable_noalias_metadata_, other->xla_llvm_enable_noalias_metadata_);
  swap(xla_llvm_enable_invariant_load_metadata_, other->xla_llvm_enable_invariant_load_metadata_);
  swap(xla_llvm_disable_expensive_passes_, other->xla_llvm_disable_expensive_passes_);
  swap(xla_test_all_output_layouts_, other->xla_test_all_output_layouts_);
  swap(xla_test_all_input_layouts_, other->xla_test_all_input_layouts_);
  swap(xla_hlo_graph_sharding_color_, other->xla_hlo_graph_sharding_color_);
  swap(xla_hlo_tfgraph_device_scopes_, other->xla_hlo_tfgraph_device_scopes_);
  swap(xla_gpu_use_cudnn_batchnorm_, other->xla_gpu_use_cudnn_batchnorm_);
  swap(xla_cpu_use_mkl_dnn_, other->xla_cpu_use_mkl_dnn_);
  swap(xla_cpu_enable_fast_math_, other->xla_cpu_enable_fast_math_);
  swap(xla_gpu_max_kernel_unroll_factor_, other->xla_gpu_max_kernel_unroll_factor_);
  swap(xla_force_host_platform_device_count_, other->xla_force_host_platform_device_count_);
  swap(xla_gpu_enable_fast_min_max_, other->xla_gpu_enable_fast_min_max_);
  swap(xla_gpu_crash_on_verification_failures_, other->xla_gpu_crash_on_verification_failures_);
  swap(xla_gpu_disable_ptxas_optimizations_, other->xla_gpu_disable_ptxas_optimizations_);
  swap(xla_hlo_dump_as_html_, other->xla_hlo_dump_as_html_);
  swap(xla_hlo_evaluator_use_fast_path_, other->xla_hlo_evaluator_use_fast_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebugOptions::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionOptions::InitAsDefaultInstance() {
  ::xla::_ExecutionOptions_default_instance_._instance.get_mutable()->shape_with_output_layout_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
  ::xla::_ExecutionOptions_default_instance_._instance.get_mutable()->debug_options_ = const_cast< ::xla::DebugOptions*>(
      ::xla::DebugOptions::internal_default_instance());
}
void ExecutionOptions::clear_shape_with_output_layout() {
  if (GetArenaNoVirtual() == NULL && shape_with_output_layout_ != NULL) {
    delete shape_with_output_layout_;
  }
  shape_with_output_layout_ = NULL;
}
void ExecutionOptions::clear_device_handles() {
  device_handles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionOptions::kShapeWithOutputLayoutFieldNumber;
const int ExecutionOptions::kSeedFieldNumber;
const int ExecutionOptions::kDebugOptionsFieldNumber;
const int ExecutionOptions::kDeviceHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionOptions::ExecutionOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecutionOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecutionOptions)
}
ExecutionOptions::ExecutionOptions(const ExecutionOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_handles_(from.device_handles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape_with_output_layout()) {
    shape_with_output_layout_ = new ::xla::ShapeProto(*from.shape_with_output_layout_);
  } else {
    shape_with_output_layout_ = NULL;
  }
  if (from.has_debug_options()) {
    debug_options_ = new ::xla::DebugOptions(*from.debug_options_);
  } else {
    debug_options_ = NULL;
  }
  seed_ = from.seed_;
  // @@protoc_insertion_point(copy_constructor:xla.ExecutionOptions)
}

void ExecutionOptions::SharedCtor() {
  ::memset(&shape_with_output_layout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seed_) -
      reinterpret_cast<char*>(&shape_with_output_layout_)) + sizeof(seed_));
}

ExecutionOptions::~ExecutionOptions() {
  // @@protoc_insertion_point(destructor:xla.ExecutionOptions)
  SharedDtor();
}

void ExecutionOptions::SharedDtor() {
  if (this != internal_default_instance()) delete shape_with_output_layout_;
  if (this != internal_default_instance()) delete debug_options_;
}

void ExecutionOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecutionOptions::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionOptions& ExecutionOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecutionOptions.base);
  return *internal_default_instance();
}


void ExecutionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecutionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_handles_.Clear();
  if (GetArenaNoVirtual() == NULL && shape_with_output_layout_ != NULL) {
    delete shape_with_output_layout_;
  }
  shape_with_output_layout_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
  seed_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExecutionOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecutionOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ShapeProto shape_with_output_layout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape_with_output_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 seed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DebugOptions debug_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.DeviceHandle device_handles = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_handles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecutionOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecutionOptions)
  return false;
#undef DO_
}

void ExecutionOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecutionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape_with_output_layout = 2;
  if (this->has_shape_with_output_layout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shape_with_output_layout(), output);
  }

  // uint64 seed = 3;
  if (this->seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->seed(), output);
  }

  // .xla.DebugOptions debug_options = 4;
  if (this->has_debug_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_debug_options(), output);
  }

  // repeated .xla.DeviceHandle device_handles = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_handles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->device_handles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecutionOptions)
}

::google::protobuf::uint8* ExecutionOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecutionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape_with_output_layout = 2;
  if (this->has_shape_with_output_layout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shape_with_output_layout(), deterministic, target);
  }

  // uint64 seed = 3;
  if (this->seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->seed(), target);
  }

  // .xla.DebugOptions debug_options = 4;
  if (this->has_debug_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_debug_options(), deterministic, target);
  }

  // repeated .xla.DeviceHandle device_handles = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_handles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->device_handles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecutionOptions)
  return target;
}

size_t ExecutionOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecutionOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.DeviceHandle device_handles = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->device_handles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_handles(static_cast<int>(i)));
    }
  }

  // .xla.ShapeProto shape_with_output_layout = 2;
  if (this->has_shape_with_output_layout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_with_output_layout_);
  }

  // .xla.DebugOptions debug_options = 4;
  if (this->has_debug_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_options_);
  }

  // uint64 seed = 3;
  if (this->seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecutionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecutionOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecutionOptions)
    MergeFrom(*source);
  }
}

void ExecutionOptions::MergeFrom(const ExecutionOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecutionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_handles_.MergeFrom(from.device_handles_);
  if (from.has_shape_with_output_layout()) {
    mutable_shape_with_output_layout()->::xla::ShapeProto::MergeFrom(from.shape_with_output_layout());
  }
  if (from.has_debug_options()) {
    mutable_debug_options()->::xla::DebugOptions::MergeFrom(from.debug_options());
  }
  if (from.seed() != 0) {
    set_seed(from.seed());
  }
}

void ExecutionOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecutionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionOptions::CopyFrom(const ExecutionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecutionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionOptions::IsInitialized() const {
  return true;
}

void ExecutionOptions::Swap(ExecutionOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionOptions::InternalSwap(ExecutionOptions* other) {
  using std::swap;
  CastToBase(&device_handles_)->InternalSwap(CastToBase(&other->device_handles_));
  swap(shape_with_output_layout_, other->shape_with_output_layout_);
  swap(debug_options_, other->debug_options_);
  swap(seed_, other->seed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecutionOptions::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeviceHandlesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeviceHandlesRequest::kDeviceCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeviceHandlesRequest::GetDeviceHandlesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetDeviceHandlesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GetDeviceHandlesRequest)
}
GetDeviceHandlesRequest::GetDeviceHandlesRequest(const GetDeviceHandlesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_count_ = from.device_count_;
  // @@protoc_insertion_point(copy_constructor:xla.GetDeviceHandlesRequest)
}

void GetDeviceHandlesRequest::SharedCtor() {
  device_count_ = GOOGLE_LONGLONG(0);
}

GetDeviceHandlesRequest::~GetDeviceHandlesRequest() {
  // @@protoc_insertion_point(destructor:xla.GetDeviceHandlesRequest)
  SharedDtor();
}

void GetDeviceHandlesRequest::SharedDtor() {
}

void GetDeviceHandlesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeviceHandlesRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeviceHandlesRequest& GetDeviceHandlesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetDeviceHandlesRequest.base);
  return *internal_default_instance();
}


void GetDeviceHandlesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GetDeviceHandlesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetDeviceHandlesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GetDeviceHandlesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 device_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GetDeviceHandlesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GetDeviceHandlesRequest)
  return false;
#undef DO_
}

void GetDeviceHandlesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GetDeviceHandlesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 device_count = 1;
  if (this->device_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->device_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GetDeviceHandlesRequest)
}

::google::protobuf::uint8* GetDeviceHandlesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GetDeviceHandlesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 device_count = 1;
  if (this->device_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->device_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GetDeviceHandlesRequest)
  return target;
}

size_t GetDeviceHandlesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GetDeviceHandlesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 device_count = 1;
  if (this->device_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceHandlesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GetDeviceHandlesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceHandlesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeviceHandlesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GetDeviceHandlesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GetDeviceHandlesRequest)
    MergeFrom(*source);
  }
}

void GetDeviceHandlesRequest::MergeFrom(const GetDeviceHandlesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GetDeviceHandlesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_count() != 0) {
    set_device_count(from.device_count());
  }
}

void GetDeviceHandlesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GetDeviceHandlesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceHandlesRequest::CopyFrom(const GetDeviceHandlesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GetDeviceHandlesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceHandlesRequest::IsInitialized() const {
  return true;
}

void GetDeviceHandlesRequest::Swap(GetDeviceHandlesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeviceHandlesRequest::InternalSwap(GetDeviceHandlesRequest* other) {
  using std::swap;
  swap(device_count_, other->device_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeviceHandlesRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeviceHandlesResponse::InitAsDefaultInstance() {
}
void GetDeviceHandlesResponse::clear_device_handles() {
  device_handles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeviceHandlesResponse::kDeviceHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeviceHandlesResponse::GetDeviceHandlesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetDeviceHandlesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GetDeviceHandlesResponse)
}
GetDeviceHandlesResponse::GetDeviceHandlesResponse(const GetDeviceHandlesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_handles_(from.device_handles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.GetDeviceHandlesResponse)
}

void GetDeviceHandlesResponse::SharedCtor() {
}

GetDeviceHandlesResponse::~GetDeviceHandlesResponse() {
  // @@protoc_insertion_point(destructor:xla.GetDeviceHandlesResponse)
  SharedDtor();
}

void GetDeviceHandlesResponse::SharedDtor() {
}

void GetDeviceHandlesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeviceHandlesResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeviceHandlesResponse& GetDeviceHandlesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetDeviceHandlesResponse.base);
  return *internal_default_instance();
}


void GetDeviceHandlesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GetDeviceHandlesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_handles_.Clear();
  _internal_metadata_.Clear();
}

bool GetDeviceHandlesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GetDeviceHandlesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.DeviceHandle device_handles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_handles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GetDeviceHandlesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GetDeviceHandlesResponse)
  return false;
#undef DO_
}

void GetDeviceHandlesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GetDeviceHandlesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.DeviceHandle device_handles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_handles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->device_handles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GetDeviceHandlesResponse)
}

::google::protobuf::uint8* GetDeviceHandlesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GetDeviceHandlesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.DeviceHandle device_handles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_handles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->device_handles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GetDeviceHandlesResponse)
  return target;
}

size_t GetDeviceHandlesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GetDeviceHandlesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.DeviceHandle device_handles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->device_handles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_handles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceHandlesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GetDeviceHandlesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceHandlesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeviceHandlesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GetDeviceHandlesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GetDeviceHandlesResponse)
    MergeFrom(*source);
  }
}

void GetDeviceHandlesResponse::MergeFrom(const GetDeviceHandlesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GetDeviceHandlesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_handles_.MergeFrom(from.device_handles_);
}

void GetDeviceHandlesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GetDeviceHandlesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceHandlesResponse::CopyFrom(const GetDeviceHandlesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GetDeviceHandlesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceHandlesResponse::IsInitialized() const {
  return true;
}

void GetDeviceHandlesResponse::Swap(GetDeviceHandlesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeviceHandlesResponse::InternalSwap(GetDeviceHandlesResponse* other) {
  using std::swap;
  CastToBase(&device_handles_)->InternalSwap(CastToBase(&other->device_handles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeviceHandlesResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToClientRequest::InitAsDefaultInstance() {
  ::xla::_TransferToClientRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
  ::xla::_TransferToClientRequest_default_instance_._instance.get_mutable()->shape_with_layout_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void TransferToClientRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
void TransferToClientRequest::clear_shape_with_layout() {
  if (GetArenaNoVirtual() == NULL && shape_with_layout_ != NULL) {
    delete shape_with_layout_;
  }
  shape_with_layout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToClientRequest::kDataFieldNumber;
const int TransferToClientRequest::kShapeWithLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToClientRequest::TransferToClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToClientRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToClientRequest)
}
TransferToClientRequest::TransferToClientRequest(const TransferToClientRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::xla::GlobalDataHandle(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_shape_with_layout()) {
    shape_with_layout_ = new ::xla::ShapeProto(*from.shape_with_layout_);
  } else {
    shape_with_layout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.TransferToClientRequest)
}

void TransferToClientRequest::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shape_with_layout_) -
      reinterpret_cast<char*>(&data_)) + sizeof(shape_with_layout_));
}

TransferToClientRequest::~TransferToClientRequest() {
  // @@protoc_insertion_point(destructor:xla.TransferToClientRequest)
  SharedDtor();
}

void TransferToClientRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete shape_with_layout_;
}

void TransferToClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToClientRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToClientRequest& TransferToClientRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToClientRequest.base);
  return *internal_default_instance();
}


void TransferToClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && shape_with_layout_ != NULL) {
    delete shape_with_layout_;
  }
  shape_with_layout_ = NULL;
  _internal_metadata_.Clear();
}

bool TransferToClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToClientRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto shape_with_layout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape_with_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToClientRequest)
  return false;
#undef DO_
}

void TransferToClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  // .xla.ShapeProto shape_with_layout = 2;
  if (this->has_shape_with_layout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shape_with_layout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToClientRequest)
}

::google::protobuf::uint8* TransferToClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  // .xla.ShapeProto shape_with_layout = 2;
  if (this->has_shape_with_layout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shape_with_layout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToClientRequest)
  return target;
}

size_t TransferToClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToClientRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .xla.ShapeProto shape_with_layout = 2;
  if (this->has_shape_with_layout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_with_layout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToClientRequest)
    MergeFrom(*source);
  }
}

void TransferToClientRequest::MergeFrom(const TransferToClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::xla::GlobalDataHandle::MergeFrom(from.data());
  }
  if (from.has_shape_with_layout()) {
    mutable_shape_with_layout()->::xla::ShapeProto::MergeFrom(from.shape_with_layout());
  }
}

void TransferToClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToClientRequest::CopyFrom(const TransferToClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToClientRequest::IsInitialized() const {
  return true;
}

void TransferToClientRequest::Swap(TransferToClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToClientRequest::InternalSwap(TransferToClientRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(shape_with_layout_, other->shape_with_layout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToClientRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToClientResponse::InitAsDefaultInstance() {
  ::xla::_TransferToClientResponse_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
}
void TransferToClientResponse::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToClientResponse::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToClientResponse::TransferToClientResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToClientResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToClientResponse)
}
TransferToClientResponse::TransferToClientResponse(const TransferToClientResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.TransferToClientResponse)
}

void TransferToClientResponse::SharedCtor() {
  literal_ = NULL;
}

TransferToClientResponse::~TransferToClientResponse() {
  // @@protoc_insertion_point(destructor:xla.TransferToClientResponse)
  SharedDtor();
}

void TransferToClientResponse::SharedDtor() {
  if (this != internal_default_instance()) delete literal_;
}

void TransferToClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToClientResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToClientResponse& TransferToClientResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToClientResponse.base);
  return *internal_default_instance();
}


void TransferToClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  _internal_metadata_.Clear();
}

bool TransferToClientResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToClientResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.LiteralProto literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToClientResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToClientResponse)
  return false;
#undef DO_
}

void TransferToClientResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToClientResponse)
}

::google::protobuf::uint8* TransferToClientResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToClientResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToClientResponse)
  return target;
}

size_t TransferToClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToClientResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToClientResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToClientResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToClientResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToClientResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToClientResponse)
    MergeFrom(*source);
  }
}

void TransferToClientResponse::MergeFrom(const TransferToClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
}

void TransferToClientResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToClientResponse::CopyFrom(const TransferToClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToClientResponse::IsInitialized() const {
  return true;
}

void TransferToClientResponse::Swap(TransferToClientResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToClientResponse::InternalSwap(TransferToClientResponse* other) {
  using std::swap;
  swap(literal_, other->literal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToClientResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToServerRequest::InitAsDefaultInstance() {
  ::xla::_TransferToServerRequest_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
  ::xla::_TransferToServerRequest_default_instance_._instance.get_mutable()->device_handle_ = const_cast< ::xla::DeviceHandle*>(
      ::xla::DeviceHandle::internal_default_instance());
}
void TransferToServerRequest::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
void TransferToServerRequest::clear_device_handle() {
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToServerRequest::kLiteralFieldNumber;
const int TransferToServerRequest::kDeviceHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToServerRequest::TransferToServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToServerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToServerRequest)
}
TransferToServerRequest::TransferToServerRequest(const TransferToServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  if (from.has_device_handle()) {
    device_handle_ = new ::xla::DeviceHandle(*from.device_handle_);
  } else {
    device_handle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.TransferToServerRequest)
}

void TransferToServerRequest::SharedCtor() {
  ::memset(&literal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_handle_) -
      reinterpret_cast<char*>(&literal_)) + sizeof(device_handle_));
}

TransferToServerRequest::~TransferToServerRequest() {
  // @@protoc_insertion_point(destructor:xla.TransferToServerRequest)
  SharedDtor();
}

void TransferToServerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete literal_;
  if (this != internal_default_instance()) delete device_handle_;
}

void TransferToServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToServerRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToServerRequest& TransferToServerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToServerRequest.base);
  return *internal_default_instance();
}


void TransferToServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
  _internal_metadata_.Clear();
}

bool TransferToServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToServerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.LiteralProto literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DeviceHandle device_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToServerRequest)
  return false;
#undef DO_
}

void TransferToServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  // .xla.DeviceHandle device_handle = 2;
  if (this->has_device_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_device_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToServerRequest)
}

::google::protobuf::uint8* TransferToServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  // .xla.DeviceHandle device_handle = 2;
  if (this->has_device_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_device_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToServerRequest)
  return target;
}

size_t TransferToServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  // .xla.DeviceHandle device_handle = 2;
  if (this->has_device_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_handle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToServerRequest)
    MergeFrom(*source);
  }
}

void TransferToServerRequest::MergeFrom(const TransferToServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
  if (from.has_device_handle()) {
    mutable_device_handle()->::xla::DeviceHandle::MergeFrom(from.device_handle());
  }
}

void TransferToServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToServerRequest::CopyFrom(const TransferToServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToServerRequest::IsInitialized() const {
  return true;
}

void TransferToServerRequest::Swap(TransferToServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToServerRequest::InternalSwap(TransferToServerRequest* other) {
  using std::swap;
  swap(literal_, other->literal_);
  swap(device_handle_, other->device_handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToServerRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToServerResponse::InitAsDefaultInstance() {
  ::xla::_TransferToServerResponse_default_instance_._instance.get_mutable()->data_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
}
void TransferToServerResponse::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToServerResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToServerResponse::TransferToServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToServerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToServerResponse)
}
TransferToServerResponse::TransferToServerResponse(const TransferToServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::xla::GlobalDataHandle(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.TransferToServerResponse)
}

void TransferToServerResponse::SharedCtor() {
  data_ = NULL;
}

TransferToServerResponse::~TransferToServerResponse() {
  // @@protoc_insertion_point(destructor:xla.TransferToServerResponse)
  SharedDtor();
}

void TransferToServerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void TransferToServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToServerResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToServerResponse& TransferToServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToServerResponse.base);
  return *internal_default_instance();
}


void TransferToServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool TransferToServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToServerResponse)
  return false;
#undef DO_
}

void TransferToServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToServerResponse)
}

::google::protobuf::uint8* TransferToServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToServerResponse)
  return target;
}

size_t TransferToServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToServerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToServerResponse)
    MergeFrom(*source);
  }
}

void TransferToServerResponse::MergeFrom(const TransferToServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::xla::GlobalDataHandle::MergeFrom(from.data());
  }
}

void TransferToServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToServerResponse::CopyFrom(const TransferToServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToServerResponse::IsInitialized() const {
  return true;
}

void TransferToServerResponse::Swap(TransferToServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToServerResponse::InternalSwap(TransferToServerResponse* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToServerResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToInfeedRequest::InitAsDefaultInstance() {
  ::xla::_TransferToInfeedRequest_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
  ::xla::_TransferToInfeedRequest_default_instance_._instance.get_mutable()->device_handle_ = const_cast< ::xla::DeviceHandle*>(
      ::xla::DeviceHandle::internal_default_instance());
}
void TransferToInfeedRequest::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
void TransferToInfeedRequest::clear_device_handle() {
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferToInfeedRequest::kLiteralFieldNumber;
const int TransferToInfeedRequest::kReplicaIdFieldNumber;
const int TransferToInfeedRequest::kDeviceHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToInfeedRequest::TransferToInfeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToInfeedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToInfeedRequest)
}
TransferToInfeedRequest::TransferToInfeedRequest(const TransferToInfeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  if (from.has_device_handle()) {
    device_handle_ = new ::xla::DeviceHandle(*from.device_handle_);
  } else {
    device_handle_ = NULL;
  }
  replica_id_ = from.replica_id_;
  // @@protoc_insertion_point(copy_constructor:xla.TransferToInfeedRequest)
}

void TransferToInfeedRequest::SharedCtor() {
  ::memset(&literal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_id_) -
      reinterpret_cast<char*>(&literal_)) + sizeof(replica_id_));
}

TransferToInfeedRequest::~TransferToInfeedRequest() {
  // @@protoc_insertion_point(destructor:xla.TransferToInfeedRequest)
  SharedDtor();
}

void TransferToInfeedRequest::SharedDtor() {
  if (this != internal_default_instance()) delete literal_;
  if (this != internal_default_instance()) delete device_handle_;
}

void TransferToInfeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToInfeedRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToInfeedRequest& TransferToInfeedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToInfeedRequest.base);
  return *internal_default_instance();
}


void TransferToInfeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToInfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
  replica_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferToInfeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToInfeedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.LiteralProto literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 replica_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &replica_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DeviceHandle device_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToInfeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToInfeedRequest)
  return false;
#undef DO_
}

void TransferToInfeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToInfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->replica_id(), output);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_device_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToInfeedRequest)
}

::google::protobuf::uint8* TransferToInfeedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToInfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->replica_id(), target);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_device_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToInfeedRequest)
  return target;
}

size_t TransferToInfeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToInfeedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_handle_);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->replica_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToInfeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToInfeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToInfeedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToInfeedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToInfeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToInfeedRequest)
    MergeFrom(*source);
  }
}

void TransferToInfeedRequest::MergeFrom(const TransferToInfeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToInfeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
  if (from.has_device_handle()) {
    mutable_device_handle()->::xla::DeviceHandle::MergeFrom(from.device_handle());
  }
  if (from.replica_id() != 0) {
    set_replica_id(from.replica_id());
  }
}

void TransferToInfeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToInfeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToInfeedRequest::CopyFrom(const TransferToInfeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToInfeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToInfeedRequest::IsInitialized() const {
  return true;
}

void TransferToInfeedRequest::Swap(TransferToInfeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToInfeedRequest::InternalSwap(TransferToInfeedRequest* other) {
  using std::swap;
  swap(literal_, other->literal_);
  swap(device_handle_, other->device_handle_);
  swap(replica_id_, other->replica_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToInfeedRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferToInfeedResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferToInfeedResponse::TransferToInfeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToInfeedResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferToInfeedResponse)
}
TransferToInfeedResponse::TransferToInfeedResponse(const TransferToInfeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.TransferToInfeedResponse)
}

void TransferToInfeedResponse::SharedCtor() {
}

TransferToInfeedResponse::~TransferToInfeedResponse() {
  // @@protoc_insertion_point(destructor:xla.TransferToInfeedResponse)
  SharedDtor();
}

void TransferToInfeedResponse::SharedDtor() {
}

void TransferToInfeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferToInfeedResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferToInfeedResponse& TransferToInfeedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferToInfeedResponse.base);
  return *internal_default_instance();
}


void TransferToInfeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferToInfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TransferToInfeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferToInfeedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferToInfeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferToInfeedResponse)
  return false;
#undef DO_
}

void TransferToInfeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferToInfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferToInfeedResponse)
}

::google::protobuf::uint8* TransferToInfeedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferToInfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferToInfeedResponse)
  return target;
}

size_t TransferToInfeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferToInfeedResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferToInfeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferToInfeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferToInfeedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferToInfeedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferToInfeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferToInfeedResponse)
    MergeFrom(*source);
  }
}

void TransferToInfeedResponse::MergeFrom(const TransferToInfeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferToInfeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransferToInfeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferToInfeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferToInfeedResponse::CopyFrom(const TransferToInfeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferToInfeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferToInfeedResponse::IsInitialized() const {
  return true;
}

void TransferToInfeedResponse::Swap(TransferToInfeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferToInfeedResponse::InternalSwap(TransferToInfeedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferToInfeedResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFromOutfeedRequest::InitAsDefaultInstance() {
  ::xla::_TransferFromOutfeedRequest_default_instance_._instance.get_mutable()->shape_with_layout_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
  ::xla::_TransferFromOutfeedRequest_default_instance_._instance.get_mutable()->device_handle_ = const_cast< ::xla::DeviceHandle*>(
      ::xla::DeviceHandle::internal_default_instance());
}
void TransferFromOutfeedRequest::clear_shape_with_layout() {
  if (GetArenaNoVirtual() == NULL && shape_with_layout_ != NULL) {
    delete shape_with_layout_;
  }
  shape_with_layout_ = NULL;
}
void TransferFromOutfeedRequest::clear_device_handle() {
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFromOutfeedRequest::kShapeWithLayoutFieldNumber;
const int TransferFromOutfeedRequest::kReplicaIdFieldNumber;
const int TransferFromOutfeedRequest::kDeviceHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFromOutfeedRequest::TransferFromOutfeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferFromOutfeedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferFromOutfeedRequest)
}
TransferFromOutfeedRequest::TransferFromOutfeedRequest(const TransferFromOutfeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape_with_layout()) {
    shape_with_layout_ = new ::xla::ShapeProto(*from.shape_with_layout_);
  } else {
    shape_with_layout_ = NULL;
  }
  if (from.has_device_handle()) {
    device_handle_ = new ::xla::DeviceHandle(*from.device_handle_);
  } else {
    device_handle_ = NULL;
  }
  replica_id_ = from.replica_id_;
  // @@protoc_insertion_point(copy_constructor:xla.TransferFromOutfeedRequest)
}

void TransferFromOutfeedRequest::SharedCtor() {
  ::memset(&shape_with_layout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_id_) -
      reinterpret_cast<char*>(&shape_with_layout_)) + sizeof(replica_id_));
}

TransferFromOutfeedRequest::~TransferFromOutfeedRequest() {
  // @@protoc_insertion_point(destructor:xla.TransferFromOutfeedRequest)
  SharedDtor();
}

void TransferFromOutfeedRequest::SharedDtor() {
  if (this != internal_default_instance()) delete shape_with_layout_;
  if (this != internal_default_instance()) delete device_handle_;
}

void TransferFromOutfeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFromOutfeedRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFromOutfeedRequest& TransferFromOutfeedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferFromOutfeedRequest.base);
  return *internal_default_instance();
}


void TransferFromOutfeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferFromOutfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && shape_with_layout_ != NULL) {
    delete shape_with_layout_;
  }
  shape_with_layout_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
  replica_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferFromOutfeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferFromOutfeedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ShapeProto shape_with_layout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape_with_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 replica_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &replica_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DeviceHandle device_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferFromOutfeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferFromOutfeedRequest)
  return false;
#undef DO_
}

void TransferFromOutfeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferFromOutfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape_with_layout = 1;
  if (this->has_shape_with_layout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shape_with_layout(), output);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->replica_id(), output);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_device_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferFromOutfeedRequest)
}

::google::protobuf::uint8* TransferFromOutfeedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferFromOutfeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape_with_layout = 1;
  if (this->has_shape_with_layout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shape_with_layout(), deterministic, target);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->replica_id(), target);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_device_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferFromOutfeedRequest)
  return target;
}

size_t TransferFromOutfeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferFromOutfeedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ShapeProto shape_with_layout = 1;
  if (this->has_shape_with_layout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_with_layout_);
  }

  // .xla.DeviceHandle device_handle = 3;
  if (this->has_device_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_handle_);
  }

  // int64 replica_id = 2;
  if (this->replica_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->replica_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFromOutfeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferFromOutfeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFromOutfeedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFromOutfeedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferFromOutfeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferFromOutfeedRequest)
    MergeFrom(*source);
  }
}

void TransferFromOutfeedRequest::MergeFrom(const TransferFromOutfeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferFromOutfeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shape_with_layout()) {
    mutable_shape_with_layout()->::xla::ShapeProto::MergeFrom(from.shape_with_layout());
  }
  if (from.has_device_handle()) {
    mutable_device_handle()->::xla::DeviceHandle::MergeFrom(from.device_handle());
  }
  if (from.replica_id() != 0) {
    set_replica_id(from.replica_id());
  }
}

void TransferFromOutfeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferFromOutfeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFromOutfeedRequest::CopyFrom(const TransferFromOutfeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferFromOutfeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFromOutfeedRequest::IsInitialized() const {
  return true;
}

void TransferFromOutfeedRequest::Swap(TransferFromOutfeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFromOutfeedRequest::InternalSwap(TransferFromOutfeedRequest* other) {
  using std::swap;
  swap(shape_with_layout_, other->shape_with_layout_);
  swap(device_handle_, other->device_handle_);
  swap(replica_id_, other->replica_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFromOutfeedRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFromOutfeedResponse::InitAsDefaultInstance() {
  ::xla::_TransferFromOutfeedResponse_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
}
void TransferFromOutfeedResponse::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFromOutfeedResponse::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFromOutfeedResponse::TransferFromOutfeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferFromOutfeedResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TransferFromOutfeedResponse)
}
TransferFromOutfeedResponse::TransferFromOutfeedResponse(const TransferFromOutfeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.TransferFromOutfeedResponse)
}

void TransferFromOutfeedResponse::SharedCtor() {
  literal_ = NULL;
}

TransferFromOutfeedResponse::~TransferFromOutfeedResponse() {
  // @@protoc_insertion_point(destructor:xla.TransferFromOutfeedResponse)
  SharedDtor();
}

void TransferFromOutfeedResponse::SharedDtor() {
  if (this != internal_default_instance()) delete literal_;
}

void TransferFromOutfeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFromOutfeedResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFromOutfeedResponse& TransferFromOutfeedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_TransferFromOutfeedResponse.base);
  return *internal_default_instance();
}


void TransferFromOutfeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TransferFromOutfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  _internal_metadata_.Clear();
}

bool TransferFromOutfeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TransferFromOutfeedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.LiteralProto literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TransferFromOutfeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TransferFromOutfeedResponse)
  return false;
#undef DO_
}

void TransferFromOutfeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TransferFromOutfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TransferFromOutfeedResponse)
}

::google::protobuf::uint8* TransferFromOutfeedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TransferFromOutfeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TransferFromOutfeedResponse)
  return target;
}

size_t TransferFromOutfeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TransferFromOutfeedResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFromOutfeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TransferFromOutfeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFromOutfeedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFromOutfeedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TransferFromOutfeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TransferFromOutfeedResponse)
    MergeFrom(*source);
  }
}

void TransferFromOutfeedResponse::MergeFrom(const TransferFromOutfeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TransferFromOutfeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
}

void TransferFromOutfeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TransferFromOutfeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFromOutfeedResponse::CopyFrom(const TransferFromOutfeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TransferFromOutfeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFromOutfeedResponse::IsInitialized() const {
  return true;
}

void TransferFromOutfeedResponse::Swap(TransferFromOutfeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFromOutfeedResponse::InternalSwap(TransferFromOutfeedResponse* other) {
  using std::swap;
  swap(literal_, other->literal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFromOutfeedResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetDeviceRequest::InitAsDefaultInstance() {
  ::xla::_ResetDeviceRequest_default_instance_._instance.get_mutable()->device_handle_ = const_cast< ::xla::DeviceHandle*>(
      ::xla::DeviceHandle::internal_default_instance());
}
void ResetDeviceRequest::clear_device_handle() {
  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetDeviceRequest::kDeviceHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetDeviceRequest::ResetDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ResetDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ResetDeviceRequest)
}
ResetDeviceRequest::ResetDeviceRequest(const ResetDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_handle()) {
    device_handle_ = new ::xla::DeviceHandle(*from.device_handle_);
  } else {
    device_handle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ResetDeviceRequest)
}

void ResetDeviceRequest::SharedCtor() {
  device_handle_ = NULL;
}

ResetDeviceRequest::~ResetDeviceRequest() {
  // @@protoc_insertion_point(destructor:xla.ResetDeviceRequest)
  SharedDtor();
}

void ResetDeviceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete device_handle_;
}

void ResetDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetDeviceRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetDeviceRequest& ResetDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ResetDeviceRequest.base);
  return *internal_default_instance();
}


void ResetDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ResetDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && device_handle_ != NULL) {
    delete device_handle_;
  }
  device_handle_ = NULL;
  _internal_metadata_.Clear();
}

bool ResetDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ResetDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.DeviceHandle device_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ResetDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ResetDeviceRequest)
  return false;
#undef DO_
}

void ResetDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ResetDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.DeviceHandle device_handle = 1;
  if (this->has_device_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_device_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ResetDeviceRequest)
}

::google::protobuf::uint8* ResetDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ResetDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.DeviceHandle device_handle = 1;
  if (this->has_device_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_device_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ResetDeviceRequest)
  return target;
}

size_t ResetDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ResetDeviceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.DeviceHandle device_handle = 1;
  if (this->has_device_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_handle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ResetDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ResetDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ResetDeviceRequest)
    MergeFrom(*source);
  }
}

void ResetDeviceRequest::MergeFrom(const ResetDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ResetDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_device_handle()) {
    mutable_device_handle()->::xla::DeviceHandle::MergeFrom(from.device_handle());
  }
}

void ResetDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ResetDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetDeviceRequest::CopyFrom(const ResetDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ResetDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetDeviceRequest::IsInitialized() const {
  return true;
}

void ResetDeviceRequest::Swap(ResetDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetDeviceRequest::InternalSwap(ResetDeviceRequest* other) {
  using std::swap;
  swap(device_handle_, other->device_handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetDeviceRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetDeviceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetDeviceResponse::ResetDeviceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ResetDeviceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ResetDeviceResponse)
}
ResetDeviceResponse::ResetDeviceResponse(const ResetDeviceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.ResetDeviceResponse)
}

void ResetDeviceResponse::SharedCtor() {
}

ResetDeviceResponse::~ResetDeviceResponse() {
  // @@protoc_insertion_point(destructor:xla.ResetDeviceResponse)
  SharedDtor();
}

void ResetDeviceResponse::SharedDtor() {
}

void ResetDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetDeviceResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetDeviceResponse& ResetDeviceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ResetDeviceResponse.base);
  return *internal_default_instance();
}


void ResetDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ResetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ResetDeviceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ResetDeviceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ResetDeviceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ResetDeviceResponse)
  return false;
#undef DO_
}

void ResetDeviceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ResetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ResetDeviceResponse)
}

::google::protobuf::uint8* ResetDeviceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ResetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ResetDeviceResponse)
  return target;
}

size_t ResetDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ResetDeviceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetDeviceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ResetDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetDeviceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetDeviceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ResetDeviceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ResetDeviceResponse)
    MergeFrom(*source);
  }
}

void ResetDeviceResponse::MergeFrom(const ResetDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ResetDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetDeviceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ResetDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetDeviceResponse::CopyFrom(const ResetDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ResetDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetDeviceResponse::IsInitialized() const {
  return true;
}

void ResetDeviceResponse::Swap(ResetDeviceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetDeviceResponse::InternalSwap(ResetDeviceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetDeviceResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputationGraphStatsRequest::InitAsDefaultInstance() {
  ::xla::_ComputationGraphStatsRequest_default_instance_._instance.get_mutable()->computation_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_ComputationGraphStatsRequest_default_instance_._instance.get_mutable()->debug_options_ = const_cast< ::xla::DebugOptions*>(
      ::xla::DebugOptions::internal_default_instance());
}
void ComputationGraphStatsRequest::clear_computation() {
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputationGraphStatsRequest::kComputationFieldNumber;
const int ComputationGraphStatsRequest::kDebugOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputationGraphStatsRequest::ComputationGraphStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputationGraphStatsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ComputationGraphStatsRequest)
}
ComputationGraphStatsRequest::ComputationGraphStatsRequest(const ComputationGraphStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_computation()) {
    computation_ = new ::xla::HloModuleProto(*from.computation_);
  } else {
    computation_ = NULL;
  }
  if (from.has_debug_options()) {
    debug_options_ = new ::xla::DebugOptions(*from.debug_options_);
  } else {
    debug_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ComputationGraphStatsRequest)
}

void ComputationGraphStatsRequest::SharedCtor() {
  ::memset(&computation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debug_options_) -
      reinterpret_cast<char*>(&computation_)) + sizeof(debug_options_));
}

ComputationGraphStatsRequest::~ComputationGraphStatsRequest() {
  // @@protoc_insertion_point(destructor:xla.ComputationGraphStatsRequest)
  SharedDtor();
}

void ComputationGraphStatsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete computation_;
  if (this != internal_default_instance()) delete debug_options_;
}

void ComputationGraphStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputationGraphStatsRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputationGraphStatsRequest& ComputationGraphStatsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputationGraphStatsRequest.base);
  return *internal_default_instance();
}


void ComputationGraphStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ComputationGraphStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
  _internal_metadata_.Clear();
}

bool ComputationGraphStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ComputationGraphStatsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto computation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.DebugOptions debug_options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ComputationGraphStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ComputationGraphStatsRequest)
  return false;
#undef DO_
}

void ComputationGraphStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ComputationGraphStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_computation(), output);
  }

  // .xla.DebugOptions debug_options = 2;
  if (this->has_debug_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_debug_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ComputationGraphStatsRequest)
}

::google::protobuf::uint8* ComputationGraphStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ComputationGraphStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_computation(), deterministic, target);
  }

  // .xla.DebugOptions debug_options = 2;
  if (this->has_debug_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_debug_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ComputationGraphStatsRequest)
  return target;
}

size_t ComputationGraphStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ComputationGraphStatsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *computation_);
  }

  // .xla.DebugOptions debug_options = 2;
  if (this->has_debug_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputationGraphStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ComputationGraphStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputationGraphStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputationGraphStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ComputationGraphStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ComputationGraphStatsRequest)
    MergeFrom(*source);
  }
}

void ComputationGraphStatsRequest::MergeFrom(const ComputationGraphStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ComputationGraphStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_computation()) {
    mutable_computation()->::xla::HloModuleProto::MergeFrom(from.computation());
  }
  if (from.has_debug_options()) {
    mutable_debug_options()->::xla::DebugOptions::MergeFrom(from.debug_options());
  }
}

void ComputationGraphStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ComputationGraphStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputationGraphStatsRequest::CopyFrom(const ComputationGraphStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ComputationGraphStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputationGraphStatsRequest::IsInitialized() const {
  return true;
}

void ComputationGraphStatsRequest::Swap(ComputationGraphStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputationGraphStatsRequest::InternalSwap(ComputationGraphStatsRequest* other) {
  using std::swap;
  swap(computation_, other->computation_);
  swap(debug_options_, other->debug_options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputationGraphStatsRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputationStatsResponse::InitAsDefaultInstance() {
  ::xla::_ComputationStatsResponse_default_instance_._instance.get_mutable()->stats_ = const_cast< ::xla::ComputationStats*>(
      ::xla::ComputationStats::internal_default_instance());
}
void ComputationStatsResponse::clear_stats() {
  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputationStatsResponse::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputationStatsResponse::ComputationStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputationStatsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ComputationStatsResponse)
}
ComputationStatsResponse::ComputationStatsResponse(const ComputationStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stats()) {
    stats_ = new ::xla::ComputationStats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ComputationStatsResponse)
}

void ComputationStatsResponse::SharedCtor() {
  stats_ = NULL;
}

ComputationStatsResponse::~ComputationStatsResponse() {
  // @@protoc_insertion_point(destructor:xla.ComputationStatsResponse)
  SharedDtor();
}

void ComputationStatsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete stats_;
}

void ComputationStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputationStatsResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputationStatsResponse& ComputationStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputationStatsResponse.base);
  return *internal_default_instance();
}


void ComputationStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ComputationStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
  _internal_metadata_.Clear();
}

bool ComputationStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ComputationStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ComputationStats stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ComputationStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ComputationStatsResponse)
  return false;
#undef DO_
}

void ComputationStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ComputationStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ComputationStats stats = 1;
  if (this->has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stats(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ComputationStatsResponse)
}

::google::protobuf::uint8* ComputationStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ComputationStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ComputationStats stats = 1;
  if (this->has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stats(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ComputationStatsResponse)
  return target;
}

size_t ComputationStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ComputationStatsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ComputationStats stats = 1;
  if (this->has_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stats_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputationStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ComputationStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputationStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputationStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ComputationStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ComputationStatsResponse)
    MergeFrom(*source);
  }
}

void ComputationStatsResponse::MergeFrom(const ComputationStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ComputationStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stats()) {
    mutable_stats()->::xla::ComputationStats::MergeFrom(from.stats());
  }
}

void ComputationStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ComputationStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputationStatsResponse::CopyFrom(const ComputationStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ComputationStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputationStatsResponse::IsInitialized() const {
  return true;
}

void ComputationStatsResponse::Swap(ComputationStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputationStatsResponse::InternalSwap(ComputationStatsResponse* other) {
  using std::swap;
  swap(stats_, other->stats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputationStatsResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateChannelHandleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChannelHandleRequest::kChannelTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChannelHandleRequest::CreateChannelHandleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CreateChannelHandleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.CreateChannelHandleRequest)
}
CreateChannelHandleRequest::CreateChannelHandleRequest(const CreateChannelHandleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_type_ = from.channel_type_;
  // @@protoc_insertion_point(copy_constructor:xla.CreateChannelHandleRequest)
}

void CreateChannelHandleRequest::SharedCtor() {
  channel_type_ = 0;
}

CreateChannelHandleRequest::~CreateChannelHandleRequest() {
  // @@protoc_insertion_point(destructor:xla.CreateChannelHandleRequest)
  SharedDtor();
}

void CreateChannelHandleRequest::SharedDtor() {
}

void CreateChannelHandleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateChannelHandleRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateChannelHandleRequest& CreateChannelHandleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CreateChannelHandleRequest.base);
  return *internal_default_instance();
}


void CreateChannelHandleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CreateChannelHandleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_type_ = 0;
  _internal_metadata_.Clear();
}

bool CreateChannelHandleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.CreateChannelHandleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ChannelHandle.ChannelType channel_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel_type(static_cast< ::xla::ChannelHandle_ChannelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.CreateChannelHandleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.CreateChannelHandleRequest)
  return false;
#undef DO_
}

void CreateChannelHandleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.CreateChannelHandleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ChannelHandle.ChannelType channel_type = 1;
  if (this->channel_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->channel_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.CreateChannelHandleRequest)
}

::google::protobuf::uint8* CreateChannelHandleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.CreateChannelHandleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ChannelHandle.ChannelType channel_type = 1;
  if (this->channel_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->channel_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CreateChannelHandleRequest)
  return target;
}

size_t CreateChannelHandleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CreateChannelHandleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ChannelHandle.ChannelType channel_type = 1;
  if (this->channel_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateChannelHandleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.CreateChannelHandleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateChannelHandleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateChannelHandleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.CreateChannelHandleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.CreateChannelHandleRequest)
    MergeFrom(*source);
  }
}

void CreateChannelHandleRequest::MergeFrom(const CreateChannelHandleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.CreateChannelHandleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_type() != 0) {
    set_channel_type(from.channel_type());
  }
}

void CreateChannelHandleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.CreateChannelHandleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateChannelHandleRequest::CopyFrom(const CreateChannelHandleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CreateChannelHandleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateChannelHandleRequest::IsInitialized() const {
  return true;
}

void CreateChannelHandleRequest::Swap(CreateChannelHandleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChannelHandleRequest::InternalSwap(CreateChannelHandleRequest* other) {
  using std::swap;
  swap(channel_type_, other->channel_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateChannelHandleRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateChannelHandleResponse::InitAsDefaultInstance() {
  ::xla::_CreateChannelHandleResponse_default_instance_._instance.get_mutable()->channel_ = const_cast< ::xla::ChannelHandle*>(
      ::xla::ChannelHandle::internal_default_instance());
}
void CreateChannelHandleResponse::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChannelHandleResponse::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChannelHandleResponse::CreateChannelHandleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CreateChannelHandleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.CreateChannelHandleResponse)
}
CreateChannelHandleResponse::CreateChannelHandleResponse(const CreateChannelHandleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::xla::ChannelHandle(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.CreateChannelHandleResponse)
}

void CreateChannelHandleResponse::SharedCtor() {
  channel_ = NULL;
}

CreateChannelHandleResponse::~CreateChannelHandleResponse() {
  // @@protoc_insertion_point(destructor:xla.CreateChannelHandleResponse)
  SharedDtor();
}

void CreateChannelHandleResponse::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void CreateChannelHandleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateChannelHandleResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateChannelHandleResponse& CreateChannelHandleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CreateChannelHandleResponse.base);
  return *internal_default_instance();
}


void CreateChannelHandleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CreateChannelHandleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateChannelHandleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.CreateChannelHandleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ChannelHandle channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.CreateChannelHandleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.CreateChannelHandleResponse)
  return false;
#undef DO_
}

void CreateChannelHandleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.CreateChannelHandleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ChannelHandle channel = 1;
  if (this->has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.CreateChannelHandleResponse)
}

::google::protobuf::uint8* CreateChannelHandleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.CreateChannelHandleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ChannelHandle channel = 1;
  if (this->has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_channel(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CreateChannelHandleResponse)
  return target;
}

size_t CreateChannelHandleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CreateChannelHandleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ChannelHandle channel = 1;
  if (this->has_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *channel_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateChannelHandleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.CreateChannelHandleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateChannelHandleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateChannelHandleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.CreateChannelHandleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.CreateChannelHandleResponse)
    MergeFrom(*source);
  }
}

void CreateChannelHandleResponse::MergeFrom(const CreateChannelHandleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.CreateChannelHandleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel()) {
    mutable_channel()->::xla::ChannelHandle::MergeFrom(from.channel());
  }
}

void CreateChannelHandleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.CreateChannelHandleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateChannelHandleResponse::CopyFrom(const CreateChannelHandleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CreateChannelHandleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateChannelHandleResponse::IsInitialized() const {
  return true;
}

void CreateChannelHandleResponse::Swap(CreateChannelHandleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChannelHandleResponse::InternalSwap(CreateChannelHandleResponse* other) {
  using std::swap;
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateChannelHandleResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnregisterRequest::InitAsDefaultInstance() {
}
void UnregisterRequest::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnregisterRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnregisterRequest::UnregisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnregisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.UnregisterRequest)
}
UnregisterRequest::UnregisterRequest(const UnregisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.UnregisterRequest)
}

void UnregisterRequest::SharedCtor() {
}

UnregisterRequest::~UnregisterRequest() {
  // @@protoc_insertion_point(destructor:xla.UnregisterRequest)
  SharedDtor();
}

void UnregisterRequest::SharedDtor() {
}

void UnregisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnregisterRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnregisterRequest& UnregisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnregisterRequest.base);
  return *internal_default_instance();
}


void UnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.UnregisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool UnregisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.UnregisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.UnregisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.UnregisterRequest)
  return false;
#undef DO_
}

void UnregisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.UnregisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.UnregisterRequest)
}

::google::protobuf::uint8* UnregisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.UnregisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.UnregisterRequest)
  return target;
}

size_t UnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.UnregisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.GlobalDataHandle data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.UnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnregisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.UnregisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.UnregisterRequest)
    MergeFrom(*source);
  }
}

void UnregisterRequest::MergeFrom(const UnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.UnregisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void UnregisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.UnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterRequest::CopyFrom(const UnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.UnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterRequest::IsInitialized() const {
  return true;
}

void UnregisterRequest::Swap(UnregisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnregisterRequest::InternalSwap(UnregisterRequest* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnregisterRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnregisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnregisterResponse::UnregisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnregisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.UnregisterResponse)
}
UnregisterResponse::UnregisterResponse(const UnregisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.UnregisterResponse)
}

void UnregisterResponse::SharedCtor() {
}

UnregisterResponse::~UnregisterResponse() {
  // @@protoc_insertion_point(destructor:xla.UnregisterResponse)
  SharedDtor();
}

void UnregisterResponse::SharedDtor() {
}

void UnregisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnregisterResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnregisterResponse& UnregisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnregisterResponse.base);
  return *internal_default_instance();
}


void UnregisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.UnregisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UnregisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.UnregisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xla.UnregisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.UnregisterResponse)
  return false;
#undef DO_
}

void UnregisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.UnregisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.UnregisterResponse)
}

::google::protobuf::uint8* UnregisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.UnregisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.UnregisterResponse)
  return target;
}

size_t UnregisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.UnregisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.UnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnregisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.UnregisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.UnregisterResponse)
    MergeFrom(*source);
  }
}

void UnregisterResponse::MergeFrom(const UnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.UnregisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnregisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.UnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterResponse::CopyFrom(const UnregisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.UnregisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterResponse::IsInitialized() const {
  return true;
}

void UnregisterResponse::Swap(UnregisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnregisterResponse::InternalSwap(UnregisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnregisterResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompileRequest::InitAsDefaultInstance() {
  ::xla::_CompileRequest_default_instance_._instance.get_mutable()->computation_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_CompileRequest_default_instance_._instance.get_mutable()->execution_options_ = const_cast< ::xla::ExecutionOptions*>(
      ::xla::ExecutionOptions::internal_default_instance());
}
void CompileRequest::clear_computation() {
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
}
void CompileRequest::clear_input_shape_with_layout() {
  input_shape_with_layout_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompileRequest::kComputationFieldNumber;
const int CompileRequest::kExecutionOptionsFieldNumber;
const int CompileRequest::kInputShapeWithLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompileRequest::CompileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CompileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.CompileRequest)
}
CompileRequest::CompileRequest(const CompileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_shape_with_layout_(from.input_shape_with_layout_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_computation()) {
    computation_ = new ::xla::HloModuleProto(*from.computation_);
  } else {
    computation_ = NULL;
  }
  if (from.has_execution_options()) {
    execution_options_ = new ::xla::ExecutionOptions(*from.execution_options_);
  } else {
    execution_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.CompileRequest)
}

void CompileRequest::SharedCtor() {
  ::memset(&computation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&execution_options_) -
      reinterpret_cast<char*>(&computation_)) + sizeof(execution_options_));
}

CompileRequest::~CompileRequest() {
  // @@protoc_insertion_point(destructor:xla.CompileRequest)
  SharedDtor();
}

void CompileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete computation_;
  if (this != internal_default_instance()) delete execution_options_;
}

void CompileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompileRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompileRequest& CompileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CompileRequest.base);
  return *internal_default_instance();
}


void CompileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_shape_with_layout_.Clear();
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
  if (GetArenaNoVirtual() == NULL && execution_options_ != NULL) {
    delete execution_options_;
  }
  execution_options_ = NULL;
  _internal_metadata_.Clear();
}

bool CompileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.CompileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto computation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ExecutionOptions execution_options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.ShapeProto input_shape_with_layout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_shape_with_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.CompileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.CompileRequest)
  return false;
#undef DO_
}

void CompileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_computation(), output);
  }

  // .xla.ExecutionOptions execution_options = 2;
  if (this->has_execution_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_execution_options(), output);
  }

  // repeated .xla.ShapeProto input_shape_with_layout = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_shape_with_layout_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->input_shape_with_layout(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.CompileRequest)
}

::google::protobuf::uint8* CompileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.CompileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_computation(), deterministic, target);
  }

  // .xla.ExecutionOptions execution_options = 2;
  if (this->has_execution_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_execution_options(), deterministic, target);
  }

  // repeated .xla.ShapeProto input_shape_with_layout = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_shape_with_layout_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->input_shape_with_layout(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CompileRequest)
  return target;
}

size_t CompileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CompileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ShapeProto input_shape_with_layout = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->input_shape_with_layout_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_shape_with_layout(static_cast<int>(i)));
    }
  }

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *computation_);
  }

  // .xla.ExecutionOptions execution_options = 2;
  if (this->has_execution_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *execution_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.CompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.CompileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.CompileRequest)
    MergeFrom(*source);
  }
}

void CompileRequest::MergeFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.CompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_shape_with_layout_.MergeFrom(from.input_shape_with_layout_);
  if (from.has_computation()) {
    mutable_computation()->::xla::HloModuleProto::MergeFrom(from.computation());
  }
  if (from.has_execution_options()) {
    mutable_execution_options()->::xla::ExecutionOptions::MergeFrom(from.execution_options());
  }
}

void CompileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.CompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompileRequest::CopyFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileRequest::IsInitialized() const {
  return true;
}

void CompileRequest::Swap(CompileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompileRequest::InternalSwap(CompileRequest* other) {
  using std::swap;
  CastToBase(&input_shape_with_layout_)->InternalSwap(CastToBase(&other->input_shape_with_layout_));
  swap(computation_, other->computation_);
  swap(execution_options_, other->execution_options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompileRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompileResponse::InitAsDefaultInstance() {
  ::xla::_CompileResponse_default_instance_._instance.get_mutable()->handle_ = const_cast< ::xla::ExecutionHandle*>(
      ::xla::ExecutionHandle::internal_default_instance());
}
void CompileResponse::clear_handle() {
  if (GetArenaNoVirtual() == NULL && handle_ != NULL) {
    delete handle_;
  }
  handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompileResponse::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompileResponse::CompileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CompileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.CompileResponse)
}
CompileResponse::CompileResponse(const CompileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_handle()) {
    handle_ = new ::xla::ExecutionHandle(*from.handle_);
  } else {
    handle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.CompileResponse)
}

void CompileResponse::SharedCtor() {
  handle_ = NULL;
}

CompileResponse::~CompileResponse() {
  // @@protoc_insertion_point(destructor:xla.CompileResponse)
  SharedDtor();
}

void CompileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete handle_;
}

void CompileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompileResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompileResponse& CompileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_CompileResponse.base);
  return *internal_default_instance();
}


void CompileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && handle_ != NULL) {
    delete handle_;
  }
  handle_ = NULL;
  _internal_metadata_.Clear();
}

bool CompileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.CompileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ExecutionHandle handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.CompileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.CompileResponse)
  return false;
#undef DO_
}

void CompileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.CompileResponse)
}

::google::protobuf::uint8* CompileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.CompileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CompileResponse)
  return target;
}

size_t CompileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CompileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.CompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.CompileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.CompileResponse)
    MergeFrom(*source);
  }
}

void CompileResponse::MergeFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.CompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handle()) {
    mutable_handle()->::xla::ExecutionHandle::MergeFrom(from.handle());
  }
}

void CompileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.CompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompileResponse::CopyFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileResponse::IsInitialized() const {
  return true;
}

void CompileResponse::Swap(CompileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompileResponse::InternalSwap(CompileResponse* other) {
  using std::swap;
  swap(handle_, other->handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompileResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteRequest::InitAsDefaultInstance() {
  ::xla::_ExecuteRequest_default_instance_._instance.get_mutable()->handle_ = const_cast< ::xla::ExecutionHandle*>(
      ::xla::ExecutionHandle::internal_default_instance());
}
void ExecuteRequest::clear_handle() {
  if (GetArenaNoVirtual() == NULL && handle_ != NULL) {
    delete handle_;
  }
  handle_ = NULL;
}
void ExecuteRequest::clear_arguments() {
  arguments_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteRequest::kHandleFieldNumber;
const int ExecuteRequest::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteRequest::ExecuteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecuteRequest)
}
ExecuteRequest::ExecuteRequest(const ExecuteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_handle()) {
    handle_ = new ::xla::ExecutionHandle(*from.handle_);
  } else {
    handle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ExecuteRequest)
}

void ExecuteRequest::SharedCtor() {
  handle_ = NULL;
}

ExecuteRequest::~ExecuteRequest() {
  // @@protoc_insertion_point(destructor:xla.ExecuteRequest)
  SharedDtor();
}

void ExecuteRequest::SharedDtor() {
  if (this != internal_default_instance()) delete handle_;
}

void ExecuteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteRequest& ExecuteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteRequest.base);
  return *internal_default_instance();
}


void ExecuteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && handle_ != NULL) {
    delete handle_;
  }
  handle_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecuteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecuteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ExecutionHandle handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.GlobalDataHandle arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecuteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecuteRequest)
  return false;
#undef DO_
}

void ExecuteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_handle(), output);
  }

  // repeated .xla.GlobalDataHandle arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arguments(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecuteRequest)
}

::google::protobuf::uint8* ExecuteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_handle(), deterministic, target);
  }

  // repeated .xla.GlobalDataHandle arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecuteRequest)
  return target;
}

size_t ExecuteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecuteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.GlobalDataHandle arguments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // .xla.ExecutionHandle handle = 1;
  if (this->has_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecuteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecuteRequest)
    MergeFrom(*source);
  }
}

void ExecuteRequest::MergeFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.has_handle()) {
    mutable_handle()->::xla::ExecutionHandle::MergeFrom(from.handle());
  }
}

void ExecuteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteRequest::CopyFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteRequest::IsInitialized() const {
  return true;
}

void ExecuteRequest::Swap(ExecuteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteRequest::InternalSwap(ExecuteRequest* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  swap(handle_, other->handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteGraphRequest::InitAsDefaultInstance() {
  ::xla::_ExecuteGraphRequest_default_instance_._instance.get_mutable()->computation_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_ExecuteGraphRequest_default_instance_._instance.get_mutable()->execution_options_ = const_cast< ::xla::ExecutionOptions*>(
      ::xla::ExecutionOptions::internal_default_instance());
}
void ExecuteGraphRequest::clear_computation() {
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
}
void ExecuteGraphRequest::clear_arguments() {
  arguments_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGraphRequest::kComputationFieldNumber;
const int ExecuteGraphRequest::kArgumentsFieldNumber;
const int ExecuteGraphRequest::kExecutionOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGraphRequest::ExecuteGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecuteGraphRequest)
}
ExecuteGraphRequest::ExecuteGraphRequest(const ExecuteGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_computation()) {
    computation_ = new ::xla::HloModuleProto(*from.computation_);
  } else {
    computation_ = NULL;
  }
  if (from.has_execution_options()) {
    execution_options_ = new ::xla::ExecutionOptions(*from.execution_options_);
  } else {
    execution_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ExecuteGraphRequest)
}

void ExecuteGraphRequest::SharedCtor() {
  ::memset(&computation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&execution_options_) -
      reinterpret_cast<char*>(&computation_)) + sizeof(execution_options_));
}

ExecuteGraphRequest::~ExecuteGraphRequest() {
  // @@protoc_insertion_point(destructor:xla.ExecuteGraphRequest)
  SharedDtor();
}

void ExecuteGraphRequest::SharedDtor() {
  if (this != internal_default_instance()) delete computation_;
  if (this != internal_default_instance()) delete execution_options_;
}

void ExecuteGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteGraphRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGraphRequest& ExecuteGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteGraphRequest.base);
  return *internal_default_instance();
}


void ExecuteGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecuteGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
  if (GetArenaNoVirtual() == NULL && execution_options_ != NULL) {
    delete execution_options_;
  }
  execution_options_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecuteGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecuteGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto computation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.GlobalDataHandle arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ExecutionOptions execution_options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecuteGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecuteGraphRequest)
  return false;
#undef DO_
}

void ExecuteGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecuteGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_computation(), output);
  }

  // repeated .xla.GlobalDataHandle arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // .xla.ExecutionOptions execution_options = 3;
  if (this->has_execution_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_execution_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecuteGraphRequest)
}

::google::protobuf::uint8* ExecuteGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecuteGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_computation(), deterministic, target);
  }

  // repeated .xla.GlobalDataHandle arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // .xla.ExecutionOptions execution_options = 3;
  if (this->has_execution_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_execution_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecuteGraphRequest)
  return target;
}

size_t ExecuteGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecuteGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.GlobalDataHandle arguments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *computation_);
  }

  // .xla.ExecutionOptions execution_options = 3;
  if (this->has_execution_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *execution_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecuteGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecuteGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecuteGraphRequest)
    MergeFrom(*source);
  }
}

void ExecuteGraphRequest::MergeFrom(const ExecuteGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecuteGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.has_computation()) {
    mutable_computation()->::xla::HloModuleProto::MergeFrom(from.computation());
  }
  if (from.has_execution_options()) {
    mutable_execution_options()->::xla::ExecutionOptions::MergeFrom(from.execution_options());
  }
}

void ExecuteGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecuteGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGraphRequest::CopyFrom(const ExecuteGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecuteGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGraphRequest::IsInitialized() const {
  return true;
}

void ExecuteGraphRequest::Swap(ExecuteGraphRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGraphRequest::InternalSwap(ExecuteGraphRequest* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  swap(computation_, other->computation_);
  swap(execution_options_, other->execution_options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteGraphRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteGraphParallelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGraphParallelRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGraphParallelRequest::ExecuteGraphParallelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteGraphParallelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecuteGraphParallelRequest)
}
ExecuteGraphParallelRequest::ExecuteGraphParallelRequest(const ExecuteGraphParallelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.ExecuteGraphParallelRequest)
}

void ExecuteGraphParallelRequest::SharedCtor() {
}

ExecuteGraphParallelRequest::~ExecuteGraphParallelRequest() {
  // @@protoc_insertion_point(destructor:xla.ExecuteGraphParallelRequest)
  SharedDtor();
}

void ExecuteGraphParallelRequest::SharedDtor() {
}

void ExecuteGraphParallelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteGraphParallelRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGraphParallelRequest& ExecuteGraphParallelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteGraphParallelRequest.base);
  return *internal_default_instance();
}


void ExecuteGraphParallelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecuteGraphParallelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool ExecuteGraphParallelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecuteGraphParallelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.ExecuteGraphRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecuteGraphParallelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecuteGraphParallelRequest)
  return false;
#undef DO_
}

void ExecuteGraphParallelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecuteGraphParallelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ExecuteGraphRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecuteGraphParallelRequest)
}

::google::protobuf::uint8* ExecuteGraphParallelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecuteGraphParallelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ExecuteGraphRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecuteGraphParallelRequest)
  return target;
}

size_t ExecuteGraphParallelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecuteGraphParallelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ExecuteGraphRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteGraphParallelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecuteGraphParallelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGraphParallelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGraphParallelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecuteGraphParallelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecuteGraphParallelRequest)
    MergeFrom(*source);
  }
}

void ExecuteGraphParallelRequest::MergeFrom(const ExecuteGraphParallelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecuteGraphParallelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void ExecuteGraphParallelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecuteGraphParallelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGraphParallelRequest::CopyFrom(const ExecuteGraphParallelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecuteGraphParallelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGraphParallelRequest::IsInitialized() const {
  return true;
}

void ExecuteGraphParallelRequest::Swap(ExecuteGraphParallelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGraphParallelRequest::InternalSwap(ExecuteGraphParallelRequest* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteGraphParallelRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteResponse::InitAsDefaultInstance() {
  ::xla::_ExecuteResponse_default_instance_._instance.get_mutable()->output_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
  ::xla::_ExecuteResponse_default_instance_._instance.get_mutable()->profile_ = const_cast< ::xla::ExecutionProfile*>(
      ::xla::ExecutionProfile::internal_default_instance());
}
void ExecuteResponse::clear_output() {
  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
}
void ExecuteResponse::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteResponse::kOutputFieldNumber;
const int ExecuteResponse::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteResponse::ExecuteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecuteResponse)
}
ExecuteResponse::ExecuteResponse(const ExecuteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output()) {
    output_ = new ::xla::GlobalDataHandle(*from.output_);
  } else {
    output_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::xla::ExecutionProfile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ExecuteResponse)
}

void ExecuteResponse::SharedCtor() {
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_) -
      reinterpret_cast<char*>(&output_)) + sizeof(profile_));
}

ExecuteResponse::~ExecuteResponse() {
  // @@protoc_insertion_point(destructor:xla.ExecuteResponse)
  SharedDtor();
}

void ExecuteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete profile_;
}

void ExecuteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteResponse& ExecuteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteResponse.base);
  return *internal_default_instance();
}


void ExecuteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecuteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecuteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle output = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ExecutionProfile profile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecuteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecuteResponse)
  return false;
#undef DO_
}

void ExecuteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_output(), output);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_profile(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecuteResponse)
}

::google::protobuf::uint8* ExecuteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_output(), deterministic, target);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_profile(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecuteResponse)
  return target;
}

size_t ExecuteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecuteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecuteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecuteResponse)
    MergeFrom(*source);
  }
}

void ExecuteResponse::MergeFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output()) {
    mutable_output()->::xla::GlobalDataHandle::MergeFrom(from.output());
  }
  if (from.has_profile()) {
    mutable_profile()->::xla::ExecutionProfile::MergeFrom(from.profile());
  }
}

void ExecuteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteResponse::CopyFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteResponse::IsInitialized() const {
  return true;
}

void ExecuteResponse::Swap(ExecuteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteResponse::InternalSwap(ExecuteResponse* other) {
  using std::swap;
  swap(output_, other->output_);
  swap(profile_, other->profile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteParallelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteParallelResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteParallelResponse::ExecuteParallelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteParallelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecuteParallelResponse)
}
ExecuteParallelResponse::ExecuteParallelResponse(const ExecuteParallelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.ExecuteParallelResponse)
}

void ExecuteParallelResponse::SharedCtor() {
}

ExecuteParallelResponse::~ExecuteParallelResponse() {
  // @@protoc_insertion_point(destructor:xla.ExecuteParallelResponse)
  SharedDtor();
}

void ExecuteParallelResponse::SharedDtor() {
}

void ExecuteParallelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteParallelResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteParallelResponse& ExecuteParallelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ExecuteParallelResponse.base);
  return *internal_default_instance();
}


void ExecuteParallelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecuteParallelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool ExecuteParallelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecuteParallelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.ExecuteResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecuteParallelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecuteParallelResponse)
  return false;
#undef DO_
}

void ExecuteParallelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecuteParallelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ExecuteResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecuteParallelResponse)
}

::google::protobuf::uint8* ExecuteParallelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecuteParallelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ExecuteResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecuteParallelResponse)
  return target;
}

size_t ExecuteParallelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecuteParallelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ExecuteResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteParallelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecuteParallelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteParallelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteParallelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecuteParallelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecuteParallelResponse)
    MergeFrom(*source);
  }
}

void ExecuteParallelResponse::MergeFrom(const ExecuteParallelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecuteParallelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void ExecuteParallelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecuteParallelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteParallelResponse::CopyFrom(const ExecuteParallelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecuteParallelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteParallelResponse::IsInitialized() const {
  return true;
}

void ExecuteParallelResponse::Swap(ExecuteParallelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteParallelResponse::InternalSwap(ExecuteParallelResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteParallelResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitForExecutionRequest::InitAsDefaultInstance() {
  ::xla::_WaitForExecutionRequest_default_instance_._instance.get_mutable()->execution_ = const_cast< ::xla::ExecutionHandle*>(
      ::xla::ExecutionHandle::internal_default_instance());
}
void WaitForExecutionRequest::clear_execution() {
  if (GetArenaNoVirtual() == NULL && execution_ != NULL) {
    delete execution_;
  }
  execution_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForExecutionRequest::kExecutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForExecutionRequest::WaitForExecutionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_WaitForExecutionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.WaitForExecutionRequest)
}
WaitForExecutionRequest::WaitForExecutionRequest(const WaitForExecutionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_execution()) {
    execution_ = new ::xla::ExecutionHandle(*from.execution_);
  } else {
    execution_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.WaitForExecutionRequest)
}

void WaitForExecutionRequest::SharedCtor() {
  execution_ = NULL;
}

WaitForExecutionRequest::~WaitForExecutionRequest() {
  // @@protoc_insertion_point(destructor:xla.WaitForExecutionRequest)
  SharedDtor();
}

void WaitForExecutionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete execution_;
}

void WaitForExecutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitForExecutionRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitForExecutionRequest& WaitForExecutionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_WaitForExecutionRequest.base);
  return *internal_default_instance();
}


void WaitForExecutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.WaitForExecutionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && execution_ != NULL) {
    delete execution_;
  }
  execution_ = NULL;
  _internal_metadata_.Clear();
}

bool WaitForExecutionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.WaitForExecutionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ExecutionHandle execution = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.WaitForExecutionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.WaitForExecutionRequest)
  return false;
#undef DO_
}

void WaitForExecutionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.WaitForExecutionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle execution = 1;
  if (this->has_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_execution(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.WaitForExecutionRequest)
}

::google::protobuf::uint8* WaitForExecutionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.WaitForExecutionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ExecutionHandle execution = 1;
  if (this->has_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_execution(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.WaitForExecutionRequest)
  return target;
}

size_t WaitForExecutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.WaitForExecutionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ExecutionHandle execution = 1;
  if (this->has_execution()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *execution_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForExecutionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.WaitForExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForExecutionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitForExecutionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.WaitForExecutionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.WaitForExecutionRequest)
    MergeFrom(*source);
  }
}

void WaitForExecutionRequest::MergeFrom(const WaitForExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.WaitForExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_execution()) {
    mutable_execution()->::xla::ExecutionHandle::MergeFrom(from.execution());
  }
}

void WaitForExecutionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.WaitForExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForExecutionRequest::CopyFrom(const WaitForExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.WaitForExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForExecutionRequest::IsInitialized() const {
  return true;
}

void WaitForExecutionRequest::Swap(WaitForExecutionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForExecutionRequest::InternalSwap(WaitForExecutionRequest* other) {
  using std::swap;
  swap(execution_, other->execution_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitForExecutionRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitForExecutionResponse::InitAsDefaultInstance() {
  ::xla::_WaitForExecutionResponse_default_instance_._instance.get_mutable()->output_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
  ::xla::_WaitForExecutionResponse_default_instance_._instance.get_mutable()->profile_ = const_cast< ::xla::ExecutionProfile*>(
      ::xla::ExecutionProfile::internal_default_instance());
}
void WaitForExecutionResponse::clear_output() {
  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
}
void WaitForExecutionResponse::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForExecutionResponse::kOutputFieldNumber;
const int WaitForExecutionResponse::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForExecutionResponse::WaitForExecutionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_WaitForExecutionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.WaitForExecutionResponse)
}
WaitForExecutionResponse::WaitForExecutionResponse(const WaitForExecutionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output()) {
    output_ = new ::xla::GlobalDataHandle(*from.output_);
  } else {
    output_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::xla::ExecutionProfile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.WaitForExecutionResponse)
}

void WaitForExecutionResponse::SharedCtor() {
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_) -
      reinterpret_cast<char*>(&output_)) + sizeof(profile_));
}

WaitForExecutionResponse::~WaitForExecutionResponse() {
  // @@protoc_insertion_point(destructor:xla.WaitForExecutionResponse)
  SharedDtor();
}

void WaitForExecutionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete profile_;
}

void WaitForExecutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitForExecutionResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitForExecutionResponse& WaitForExecutionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_WaitForExecutionResponse.base);
  return *internal_default_instance();
}


void WaitForExecutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.WaitForExecutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  _internal_metadata_.Clear();
}

bool WaitForExecutionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.WaitForExecutionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle output = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ExecutionProfile profile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.WaitForExecutionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.WaitForExecutionResponse)
  return false;
#undef DO_
}

void WaitForExecutionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.WaitForExecutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_output(), output);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_profile(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.WaitForExecutionResponse)
}

::google::protobuf::uint8* WaitForExecutionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.WaitForExecutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_output(), deterministic, target);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_profile(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.WaitForExecutionResponse)
  return target;
}

size_t WaitForExecutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.WaitForExecutionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle output = 1;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_);
  }

  // .xla.ExecutionProfile profile = 2;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForExecutionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.WaitForExecutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForExecutionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitForExecutionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.WaitForExecutionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.WaitForExecutionResponse)
    MergeFrom(*source);
  }
}

void WaitForExecutionResponse::MergeFrom(const WaitForExecutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.WaitForExecutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output()) {
    mutable_output()->::xla::GlobalDataHandle::MergeFrom(from.output());
  }
  if (from.has_profile()) {
    mutable_profile()->::xla::ExecutionProfile::MergeFrom(from.profile());
  }
}

void WaitForExecutionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.WaitForExecutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForExecutionResponse::CopyFrom(const WaitForExecutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.WaitForExecutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForExecutionResponse::IsInitialized() const {
  return true;
}

void WaitForExecutionResponse::Swap(WaitForExecutionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForExecutionResponse::InternalSwap(WaitForExecutionResponse* other) {
  using std::swap;
  swap(output_, other->output_);
  swap(profile_, other->profile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitForExecutionResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputeConstantGraphRequest::InitAsDefaultInstance() {
  ::xla::_ComputeConstantGraphRequest_default_instance_._instance.get_mutable()->computation_ = const_cast< ::xla::HloModuleProto*>(
      ::xla::HloModuleProto::internal_default_instance());
  ::xla::_ComputeConstantGraphRequest_default_instance_._instance.get_mutable()->output_layout_ = const_cast< ::xla::LayoutProto*>(
      ::xla::LayoutProto::internal_default_instance());
}
void ComputeConstantGraphRequest::clear_computation() {
  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
}
void ComputeConstantGraphRequest::clear_output_layout() {
  if (GetArenaNoVirtual() == NULL && output_layout_ != NULL) {
    delete output_layout_;
  }
  output_layout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeConstantGraphRequest::kComputationFieldNumber;
const int ComputeConstantGraphRequest::kOutputLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeConstantGraphRequest::ComputeConstantGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputeConstantGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ComputeConstantGraphRequest)
}
ComputeConstantGraphRequest::ComputeConstantGraphRequest(const ComputeConstantGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_computation()) {
    computation_ = new ::xla::HloModuleProto(*from.computation_);
  } else {
    computation_ = NULL;
  }
  if (from.has_output_layout()) {
    output_layout_ = new ::xla::LayoutProto(*from.output_layout_);
  } else {
    output_layout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ComputeConstantGraphRequest)
}

void ComputeConstantGraphRequest::SharedCtor() {
  ::memset(&computation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_layout_) -
      reinterpret_cast<char*>(&computation_)) + sizeof(output_layout_));
}

ComputeConstantGraphRequest::~ComputeConstantGraphRequest() {
  // @@protoc_insertion_point(destructor:xla.ComputeConstantGraphRequest)
  SharedDtor();
}

void ComputeConstantGraphRequest::SharedDtor() {
  if (this != internal_default_instance()) delete computation_;
  if (this != internal_default_instance()) delete output_layout_;
}

void ComputeConstantGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputeConstantGraphRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeConstantGraphRequest& ComputeConstantGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputeConstantGraphRequest.base);
  return *internal_default_instance();
}


void ComputeConstantGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ComputeConstantGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && computation_ != NULL) {
    delete computation_;
  }
  computation_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_layout_ != NULL) {
    delete output_layout_;
  }
  output_layout_ = NULL;
  _internal_metadata_.Clear();
}

bool ComputeConstantGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ComputeConstantGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.HloModuleProto computation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LayoutProto output_layout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ComputeConstantGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ComputeConstantGraphRequest)
  return false;
#undef DO_
}

void ComputeConstantGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ComputeConstantGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_computation(), output);
  }

  // .xla.LayoutProto output_layout = 2;
  if (this->has_output_layout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_output_layout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ComputeConstantGraphRequest)
}

::google::protobuf::uint8* ComputeConstantGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ComputeConstantGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_computation(), deterministic, target);
  }

  // .xla.LayoutProto output_layout = 2;
  if (this->has_output_layout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_output_layout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ComputeConstantGraphRequest)
  return target;
}

size_t ComputeConstantGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ComputeConstantGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.HloModuleProto computation = 1;
  if (this->has_computation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *computation_);
  }

  // .xla.LayoutProto output_layout = 2;
  if (this->has_output_layout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_layout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeConstantGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ComputeConstantGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeConstantGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeConstantGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ComputeConstantGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ComputeConstantGraphRequest)
    MergeFrom(*source);
  }
}

void ComputeConstantGraphRequest::MergeFrom(const ComputeConstantGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ComputeConstantGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_computation()) {
    mutable_computation()->::xla::HloModuleProto::MergeFrom(from.computation());
  }
  if (from.has_output_layout()) {
    mutable_output_layout()->::xla::LayoutProto::MergeFrom(from.output_layout());
  }
}

void ComputeConstantGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ComputeConstantGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeConstantGraphRequest::CopyFrom(const ComputeConstantGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ComputeConstantGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeConstantGraphRequest::IsInitialized() const {
  return true;
}

void ComputeConstantGraphRequest::Swap(ComputeConstantGraphRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputeConstantGraphRequest::InternalSwap(ComputeConstantGraphRequest* other) {
  using std::swap;
  swap(computation_, other->computation_);
  swap(output_layout_, other->output_layout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputeConstantGraphRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputeConstantResponse::InitAsDefaultInstance() {
  ::xla::_ComputeConstantResponse_default_instance_._instance.get_mutable()->literal_ = const_cast< ::xla::LiteralProto*>(
      ::xla::LiteralProto::internal_default_instance());
}
void ComputeConstantResponse::clear_literal() {
  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeConstantResponse::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeConstantResponse::ComputeConstantResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputeConstantResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ComputeConstantResponse)
}
ComputeConstantResponse::ComputeConstantResponse(const ComputeConstantResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_literal()) {
    literal_ = new ::xla::LiteralProto(*from.literal_);
  } else {
    literal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ComputeConstantResponse)
}

void ComputeConstantResponse::SharedCtor() {
  literal_ = NULL;
}

ComputeConstantResponse::~ComputeConstantResponse() {
  // @@protoc_insertion_point(destructor:xla.ComputeConstantResponse)
  SharedDtor();
}

void ComputeConstantResponse::SharedDtor() {
  if (this != internal_default_instance()) delete literal_;
}

void ComputeConstantResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputeConstantResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeConstantResponse& ComputeConstantResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_ComputeConstantResponse.base);
  return *internal_default_instance();
}


void ComputeConstantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ComputeConstantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && literal_ != NULL) {
    delete literal_;
  }
  literal_ = NULL;
  _internal_metadata_.Clear();
}

bool ComputeConstantResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ComputeConstantResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.LiteralProto literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ComputeConstantResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ComputeConstantResponse)
  return false;
#undef DO_
}

void ComputeConstantResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ComputeConstantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ComputeConstantResponse)
}

::google::protobuf::uint8* ComputeConstantResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ComputeConstantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ComputeConstantResponse)
  return target;
}

size_t ComputeConstantResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ComputeConstantResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.LiteralProto literal = 1;
  if (this->has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *literal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputeConstantResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ComputeConstantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeConstantResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeConstantResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ComputeConstantResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ComputeConstantResponse)
    MergeFrom(*source);
  }
}

void ComputeConstantResponse::MergeFrom(const ComputeConstantResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ComputeConstantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_literal()) {
    mutable_literal()->::xla::LiteralProto::MergeFrom(from.literal());
  }
}

void ComputeConstantResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ComputeConstantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeConstantResponse::CopyFrom(const ComputeConstantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ComputeConstantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeConstantResponse::IsInitialized() const {
  return true;
}

void ComputeConstantResponse::Swap(ComputeConstantResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputeConstantResponse::InternalSwap(ComputeConstantResponse* other) {
  using std::swap;
  swap(literal_, other->literal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputeConstantResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeconstructTupleRequest::InitAsDefaultInstance() {
  ::xla::_DeconstructTupleRequest_default_instance_._instance.get_mutable()->tuple_handle_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
}
void DeconstructTupleRequest::clear_tuple_handle() {
  if (GetArenaNoVirtual() == NULL && tuple_handle_ != NULL) {
    delete tuple_handle_;
  }
  tuple_handle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeconstructTupleRequest::kTupleHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeconstructTupleRequest::DeconstructTupleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DeconstructTupleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeconstructTupleRequest)
}
DeconstructTupleRequest::DeconstructTupleRequest(const DeconstructTupleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tuple_handle()) {
    tuple_handle_ = new ::xla::GlobalDataHandle(*from.tuple_handle_);
  } else {
    tuple_handle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.DeconstructTupleRequest)
}

void DeconstructTupleRequest::SharedCtor() {
  tuple_handle_ = NULL;
}

DeconstructTupleRequest::~DeconstructTupleRequest() {
  // @@protoc_insertion_point(destructor:xla.DeconstructTupleRequest)
  SharedDtor();
}

void DeconstructTupleRequest::SharedDtor() {
  if (this != internal_default_instance()) delete tuple_handle_;
}

void DeconstructTupleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeconstructTupleRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeconstructTupleRequest& DeconstructTupleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DeconstructTupleRequest.base);
  return *internal_default_instance();
}


void DeconstructTupleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeconstructTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tuple_handle_ != NULL) {
    delete tuple_handle_;
  }
  tuple_handle_ = NULL;
  _internal_metadata_.Clear();
}

bool DeconstructTupleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeconstructTupleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle tuple_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuple_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeconstructTupleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeconstructTupleRequest)
  return false;
#undef DO_
}

void DeconstructTupleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeconstructTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle tuple_handle = 2;
  if (this->has_tuple_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tuple_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeconstructTupleRequest)
}

::google::protobuf::uint8* DeconstructTupleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeconstructTupleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle tuple_handle = 2;
  if (this->has_tuple_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tuple_handle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeconstructTupleRequest)
  return target;
}

size_t DeconstructTupleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeconstructTupleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle tuple_handle = 2;
  if (this->has_tuple_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tuple_handle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeconstructTupleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeconstructTupleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeconstructTupleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeconstructTupleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeconstructTupleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeconstructTupleRequest)
    MergeFrom(*source);
  }
}

void DeconstructTupleRequest::MergeFrom(const DeconstructTupleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeconstructTupleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tuple_handle()) {
    mutable_tuple_handle()->::xla::GlobalDataHandle::MergeFrom(from.tuple_handle());
  }
}

void DeconstructTupleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeconstructTupleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeconstructTupleRequest::CopyFrom(const DeconstructTupleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeconstructTupleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeconstructTupleRequest::IsInitialized() const {
  return true;
}

void DeconstructTupleRequest::Swap(DeconstructTupleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeconstructTupleRequest::InternalSwap(DeconstructTupleRequest* other) {
  using std::swap;
  swap(tuple_handle_, other->tuple_handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeconstructTupleRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeconstructTupleResponse::InitAsDefaultInstance() {
}
void DeconstructTupleResponse::clear_element_handles() {
  element_handles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeconstructTupleResponse::kElementHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeconstructTupleResponse::DeconstructTupleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DeconstructTupleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeconstructTupleResponse)
}
DeconstructTupleResponse::DeconstructTupleResponse(const DeconstructTupleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_handles_(from.element_handles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.DeconstructTupleResponse)
}

void DeconstructTupleResponse::SharedCtor() {
}

DeconstructTupleResponse::~DeconstructTupleResponse() {
  // @@protoc_insertion_point(destructor:xla.DeconstructTupleResponse)
  SharedDtor();
}

void DeconstructTupleResponse::SharedDtor() {
}

void DeconstructTupleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeconstructTupleResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeconstructTupleResponse& DeconstructTupleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_DeconstructTupleResponse.base);
  return *internal_default_instance();
}


void DeconstructTupleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeconstructTupleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_handles_.Clear();
  _internal_metadata_.Clear();
}

bool DeconstructTupleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeconstructTupleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.GlobalDataHandle element_handles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element_handles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeconstructTupleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeconstructTupleResponse)
  return false;
#undef DO_
}

void DeconstructTupleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeconstructTupleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle element_handles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_handles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element_handles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeconstructTupleResponse)
}

::google::protobuf::uint8* DeconstructTupleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeconstructTupleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle element_handles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_handles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element_handles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeconstructTupleResponse)
  return target;
}

size_t DeconstructTupleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeconstructTupleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.GlobalDataHandle element_handles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_handles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element_handles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeconstructTupleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeconstructTupleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeconstructTupleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeconstructTupleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeconstructTupleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeconstructTupleResponse)
    MergeFrom(*source);
  }
}

void DeconstructTupleResponse::MergeFrom(const DeconstructTupleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeconstructTupleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_handles_.MergeFrom(from.element_handles_);
}

void DeconstructTupleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeconstructTupleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeconstructTupleResponse::CopyFrom(const DeconstructTupleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeconstructTupleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeconstructTupleResponse::IsInitialized() const {
  return true;
}

void DeconstructTupleResponse::Swap(DeconstructTupleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeconstructTupleResponse::InternalSwap(DeconstructTupleResponse* other) {
  using std::swap;
  CastToBase(&element_handles_)->InternalSwap(CastToBase(&other->element_handles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeconstructTupleResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDataRequest::InitAsDefaultInstance() {
  ::xla::_LoadDataRequest_default_instance_._instance.get_mutable()->element_shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void LoadDataRequest::clear_element_shape() {
  if (GetArenaNoVirtual() == NULL && element_shape_ != NULL) {
    delete element_shape_;
  }
  element_shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDataRequest::kColumnioTabletPathFieldNumber;
const int LoadDataRequest::kColumnioFieldFieldNumber;
const int LoadDataRequest::kElementShapeFieldNumber;
const int LoadDataRequest::kOffsetFieldNumber;
const int LoadDataRequest::kLimitFieldNumber;
const int LoadDataRequest::kZipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDataRequest::LoadDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_LoadDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LoadDataRequest)
}
LoadDataRequest::LoadDataRequest(const LoadDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  columnio_tablet_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.columnio_tablet_path().size() > 0) {
    columnio_tablet_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnio_tablet_path_);
  }
  columnio_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.columnio_field().size() > 0) {
    columnio_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnio_field_);
  }
  if (from.has_element_shape()) {
    element_shape_ = new ::xla::ShapeProto(*from.element_shape_);
  } else {
    element_shape_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&zip_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(zip_));
  // @@protoc_insertion_point(copy_constructor:xla.LoadDataRequest)
}

void LoadDataRequest::SharedCtor() {
  columnio_tablet_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnio_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&element_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zip_) -
      reinterpret_cast<char*>(&element_shape_)) + sizeof(zip_));
}

LoadDataRequest::~LoadDataRequest() {
  // @@protoc_insertion_point(destructor:xla.LoadDataRequest)
  SharedDtor();
}

void LoadDataRequest::SharedDtor() {
  columnio_tablet_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnio_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete element_shape_;
}

void LoadDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadDataRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDataRequest& LoadDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_LoadDataRequest.base);
  return *internal_default_instance();
}


void LoadDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LoadDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columnio_tablet_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  columnio_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && element_shape_ != NULL) {
    delete element_shape_;
  }
  element_shape_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zip_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(zip_));
  _internal_metadata_.Clear();
}

bool LoadDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LoadDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string columnio_tablet_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_columnio_tablet_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->columnio_tablet_path().data(), static_cast<int>(this->columnio_tablet_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.LoadDataRequest.columnio_tablet_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string columnio_field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_columnio_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->columnio_field().data(), static_cast<int>(this->columnio_field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.LoadDataRequest.columnio_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto element_shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool zip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LoadDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LoadDataRequest)
  return false;
#undef DO_
}

void LoadDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LoadDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string columnio_tablet_path = 1;
  if (this->columnio_tablet_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnio_tablet_path().data(), static_cast<int>(this->columnio_tablet_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LoadDataRequest.columnio_tablet_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->columnio_tablet_path(), output);
  }

  // string columnio_field = 2;
  if (this->columnio_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnio_field().data(), static_cast<int>(this->columnio_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LoadDataRequest.columnio_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->columnio_field(), output);
  }

  // .xla.ShapeProto element_shape = 3;
  if (this->has_element_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_element_shape(), output);
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->offset(), output);
  }

  // int64 limit = 5;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->limit(), output);
  }

  // bool zip = 6;
  if (this->zip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->zip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LoadDataRequest)
}

::google::protobuf::uint8* LoadDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LoadDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string columnio_tablet_path = 1;
  if (this->columnio_tablet_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnio_tablet_path().data(), static_cast<int>(this->columnio_tablet_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LoadDataRequest.columnio_tablet_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->columnio_tablet_path(), target);
  }

  // string columnio_field = 2;
  if (this->columnio_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->columnio_field().data(), static_cast<int>(this->columnio_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.LoadDataRequest.columnio_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->columnio_field(), target);
  }

  // .xla.ShapeProto element_shape = 3;
  if (this->has_element_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_element_shape(), deterministic, target);
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->offset(), target);
  }

  // int64 limit = 5;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->limit(), target);
  }

  // bool zip = 6;
  if (this->zip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->zip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LoadDataRequest)
  return target;
}

size_t LoadDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LoadDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string columnio_tablet_path = 1;
  if (this->columnio_tablet_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->columnio_tablet_path());
  }

  // string columnio_field = 2;
  if (this->columnio_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->columnio_field());
  }

  // .xla.ShapeProto element_shape = 3;
  if (this->has_element_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_shape_);
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 limit = 5;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit());
  }

  // bool zip = 6;
  if (this->zip() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LoadDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LoadDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LoadDataRequest)
    MergeFrom(*source);
  }
}

void LoadDataRequest::MergeFrom(const LoadDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LoadDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.columnio_tablet_path().size() > 0) {

    columnio_tablet_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnio_tablet_path_);
  }
  if (from.columnio_field().size() > 0) {

    columnio_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.columnio_field_);
  }
  if (from.has_element_shape()) {
    mutable_element_shape()->::xla::ShapeProto::MergeFrom(from.element_shape());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.zip() != 0) {
    set_zip(from.zip());
  }
}

void LoadDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LoadDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadDataRequest::CopyFrom(const LoadDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LoadDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadDataRequest::IsInitialized() const {
  return true;
}

void LoadDataRequest::Swap(LoadDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDataRequest::InternalSwap(LoadDataRequest* other) {
  using std::swap;
  columnio_tablet_path_.Swap(&other->columnio_tablet_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  columnio_field_.Swap(&other->columnio_field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(element_shape_, other->element_shape_);
  swap(offset_, other->offset_);
  swap(limit_, other->limit_);
  swap(zip_, other->zip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadDataRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadDataResponse::InitAsDefaultInstance() {
  ::xla::_LoadDataResponse_default_instance_._instance.get_mutable()->data_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
  ::xla::_LoadDataResponse_default_instance_._instance.get_mutable()->data_shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void LoadDataResponse::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
void LoadDataResponse::clear_data_shape() {
  if (GetArenaNoVirtual() == NULL && data_shape_ != NULL) {
    delete data_shape_;
  }
  data_shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDataResponse::kDataFieldNumber;
const int LoadDataResponse::kDataShapeFieldNumber;
const int LoadDataResponse::kAvailableRowsFieldNumber;
const int LoadDataResponse::kRowsLoadedFieldNumber;
const int LoadDataResponse::kNanosecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDataResponse::LoadDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_LoadDataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LoadDataResponse)
}
LoadDataResponse::LoadDataResponse(const LoadDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::xla::GlobalDataHandle(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_data_shape()) {
    data_shape_ = new ::xla::ShapeProto(*from.data_shape_);
  } else {
    data_shape_ = NULL;
  }
  ::memcpy(&available_rows_, &from.available_rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanoseconds_) -
    reinterpret_cast<char*>(&available_rows_)) + sizeof(nanoseconds_));
  // @@protoc_insertion_point(copy_constructor:xla.LoadDataResponse)
}

void LoadDataResponse::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanoseconds_) -
      reinterpret_cast<char*>(&data_)) + sizeof(nanoseconds_));
}

LoadDataResponse::~LoadDataResponse() {
  // @@protoc_insertion_point(destructor:xla.LoadDataResponse)
  SharedDtor();
}

void LoadDataResponse::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete data_shape_;
}

void LoadDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadDataResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadDataResponse& LoadDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_LoadDataResponse.base);
  return *internal_default_instance();
}


void LoadDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LoadDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_shape_ != NULL) {
    delete data_shape_;
  }
  data_shape_ = NULL;
  ::memset(&available_rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanoseconds_) -
      reinterpret_cast<char*>(&available_rows_)) + sizeof(nanoseconds_));
  _internal_metadata_.Clear();
}

bool LoadDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LoadDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto data_shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 available_rows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &available_rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rows_loaded = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rows_loaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nanoseconds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nanoseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LoadDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LoadDataResponse)
  return false;
#undef DO_
}

void LoadDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LoadDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  // .xla.ShapeProto data_shape = 2;
  if (this->has_data_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data_shape(), output);
  }

  // int64 available_rows = 3;
  if (this->available_rows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->available_rows(), output);
  }

  // int64 rows_loaded = 4;
  if (this->rows_loaded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->rows_loaded(), output);
  }

  // int64 nanoseconds = 5;
  if (this->nanoseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->nanoseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LoadDataResponse)
}

::google::protobuf::uint8* LoadDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LoadDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  // .xla.ShapeProto data_shape = 2;
  if (this->has_data_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data_shape(), deterministic, target);
  }

  // int64 available_rows = 3;
  if (this->available_rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->available_rows(), target);
  }

  // int64 rows_loaded = 4;
  if (this->rows_loaded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->rows_loaded(), target);
  }

  // int64 nanoseconds = 5;
  if (this->nanoseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->nanoseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LoadDataResponse)
  return target;
}

size_t LoadDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LoadDataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .xla.ShapeProto data_shape = 2;
  if (this->has_data_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_shape_);
  }

  // int64 available_rows = 3;
  if (this->available_rows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->available_rows());
  }

  // int64 rows_loaded = 4;
  if (this->rows_loaded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rows_loaded());
  }

  // int64 nanoseconds = 5;
  if (this->nanoseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nanoseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LoadDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LoadDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LoadDataResponse)
    MergeFrom(*source);
  }
}

void LoadDataResponse::MergeFrom(const LoadDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LoadDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::xla::GlobalDataHandle::MergeFrom(from.data());
  }
  if (from.has_data_shape()) {
    mutable_data_shape()->::xla::ShapeProto::MergeFrom(from.data_shape());
  }
  if (from.available_rows() != 0) {
    set_available_rows(from.available_rows());
  }
  if (from.rows_loaded() != 0) {
    set_rows_loaded(from.rows_loaded());
  }
  if (from.nanoseconds() != 0) {
    set_nanoseconds(from.nanoseconds());
  }
}

void LoadDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LoadDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadDataResponse::CopyFrom(const LoadDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LoadDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadDataResponse::IsInitialized() const {
  return true;
}

void LoadDataResponse::Swap(LoadDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDataResponse::InternalSwap(LoadDataResponse* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(data_shape_, other->data_shape_);
  swap(available_rows_, other->available_rows_);
  swap(rows_loaded_, other->rows_loaded_);
  swap(nanoseconds_, other->nanoseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadDataResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetShapeRequest::InitAsDefaultInstance() {
  ::xla::_GetShapeRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
}
void GetShapeRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetShapeRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShapeRequest::GetShapeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetShapeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GetShapeRequest)
}
GetShapeRequest::GetShapeRequest(const GetShapeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::xla::GlobalDataHandle(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.GetShapeRequest)
}

void GetShapeRequest::SharedCtor() {
  data_ = NULL;
}

GetShapeRequest::~GetShapeRequest() {
  // @@protoc_insertion_point(destructor:xla.GetShapeRequest)
  SharedDtor();
}

void GetShapeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void GetShapeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetShapeRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetShapeRequest& GetShapeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetShapeRequest.base);
  return *internal_default_instance();
}


void GetShapeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GetShapeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool GetShapeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GetShapeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GetShapeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GetShapeRequest)
  return false;
#undef DO_
}

void GetShapeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GetShapeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GetShapeRequest)
}

::google::protobuf::uint8* GetShapeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GetShapeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GetShapeRequest)
  return target;
}

size_t GetShapeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GetShapeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetShapeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GetShapeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetShapeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShapeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GetShapeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GetShapeRequest)
    MergeFrom(*source);
  }
}

void GetShapeRequest::MergeFrom(const GetShapeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GetShapeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::xla::GlobalDataHandle::MergeFrom(from.data());
  }
}

void GetShapeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GetShapeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShapeRequest::CopyFrom(const GetShapeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GetShapeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShapeRequest::IsInitialized() const {
  return true;
}

void GetShapeRequest::Swap(GetShapeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShapeRequest::InternalSwap(GetShapeRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetShapeRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetShapeResponse::InitAsDefaultInstance() {
  ::xla::_GetShapeResponse_default_instance_._instance.get_mutable()->shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void GetShapeResponse::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetShapeResponse::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShapeResponse::GetShapeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetShapeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GetShapeResponse)
}
GetShapeResponse::GetShapeResponse(const GetShapeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    shape_ = new ::xla::ShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.GetShapeResponse)
}

void GetShapeResponse::SharedCtor() {
  shape_ = NULL;
}

GetShapeResponse::~GetShapeResponse() {
  // @@protoc_insertion_point(destructor:xla.GetShapeResponse)
  SharedDtor();
}

void GetShapeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete shape_;
}

void GetShapeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetShapeResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetShapeResponse& GetShapeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_GetShapeResponse.base);
  return *internal_default_instance();
}


void GetShapeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GetShapeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  _internal_metadata_.Clear();
}

bool GetShapeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GetShapeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ShapeProto shape = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GetShapeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GetShapeResponse)
  return false;
#undef DO_
}

void GetShapeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GetShapeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shape(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GetShapeResponse)
}

::google::protobuf::uint8* GetShapeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GetShapeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shape(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GetShapeResponse)
  return target;
}

size_t GetShapeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GetShapeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetShapeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GetShapeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetShapeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShapeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GetShapeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GetShapeResponse)
    MergeFrom(*source);
  }
}

void GetShapeResponse::MergeFrom(const GetShapeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GetShapeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shape()) {
    mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
  }
}

void GetShapeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GetShapeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShapeResponse::CopyFrom(const GetShapeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GetShapeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShapeResponse::IsInitialized() const {
  return true;
}

void GetShapeResponse::Swap(GetShapeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShapeResponse::InternalSwap(GetShapeResponse* other) {
  using std::swap;
  swap(shape_, other->shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetShapeResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnpackRequest::InitAsDefaultInstance() {
  ::xla::_UnpackRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::xla::GlobalDataHandle*>(
      ::xla::GlobalDataHandle::internal_default_instance());
}
void UnpackRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnpackRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnpackRequest::UnpackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnpackRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.UnpackRequest)
}
UnpackRequest::UnpackRequest(const UnpackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::xla::GlobalDataHandle(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.UnpackRequest)
}

void UnpackRequest::SharedCtor() {
  data_ = NULL;
}

UnpackRequest::~UnpackRequest() {
  // @@protoc_insertion_point(destructor:xla.UnpackRequest)
  SharedDtor();
}

void UnpackRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void UnpackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnpackRequest::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnpackRequest& UnpackRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnpackRequest.base);
  return *internal_default_instance();
}


void UnpackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.UnpackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool UnpackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.UnpackRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.GlobalDataHandle data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.UnpackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.UnpackRequest)
  return false;
#undef DO_
}

void UnpackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.UnpackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.UnpackRequest)
}

::google::protobuf::uint8* UnpackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.UnpackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.UnpackRequest)
  return target;
}

size_t UnpackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.UnpackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .xla.GlobalDataHandle data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnpackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.UnpackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnpackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnpackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.UnpackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.UnpackRequest)
    MergeFrom(*source);
  }
}

void UnpackRequest::MergeFrom(const UnpackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.UnpackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::xla::GlobalDataHandle::MergeFrom(from.data());
  }
}

void UnpackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.UnpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnpackRequest::CopyFrom(const UnpackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.UnpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnpackRequest::IsInitialized() const {
  return true;
}

void UnpackRequest::Swap(UnpackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnpackRequest::InternalSwap(UnpackRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnpackRequest::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnpackResponse::InitAsDefaultInstance() {
}
void UnpackResponse::clear_tied_data() {
  tied_data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnpackResponse::kTiedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnpackResponse::UnpackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnpackResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.UnpackResponse)
}
UnpackResponse::UnpackResponse(const UnpackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tied_data_(from.tied_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.UnpackResponse)
}

void UnpackResponse::SharedCtor() {
}

UnpackResponse::~UnpackResponse() {
  // @@protoc_insertion_point(destructor:xla.UnpackResponse)
  SharedDtor();
}

void UnpackResponse::SharedDtor() {
}

void UnpackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnpackResponse::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnpackResponse& UnpackResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::scc_info_UnpackResponse.base);
  return *internal_default_instance();
}


void UnpackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.UnpackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tied_data_.Clear();
  _internal_metadata_.Clear();
}

bool UnpackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.UnpackResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.GlobalDataHandle tied_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tied_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.UnpackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.UnpackResponse)
  return false;
#undef DO_
}

void UnpackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.UnpackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle tied_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tied_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tied_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.UnpackResponse)
}

::google::protobuf::uint8* UnpackResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.UnpackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.GlobalDataHandle tied_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tied_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tied_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.UnpackResponse)
  return target;
}

size_t UnpackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.UnpackResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.GlobalDataHandle tied_data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tied_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tied_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnpackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.UnpackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnpackResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnpackResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.UnpackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.UnpackResponse)
    MergeFrom(*source);
  }
}

void UnpackResponse::MergeFrom(const UnpackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.UnpackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tied_data_.MergeFrom(from.tied_data_);
}

void UnpackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.UnpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnpackResponse::CopyFrom(const UnpackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.UnpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnpackResponse::IsInitialized() const {
  return true;
}

void UnpackResponse::Swap(UnpackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnpackResponse::InternalSwap(UnpackResponse* other) {
  using std::swap;
  CastToBase(&tied_data_)->InternalSwap(CastToBase(&other->tied_data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnpackResponse::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::HloReducePrecisionOptions* Arena::CreateMaybeMessage< ::xla::HloReducePrecisionOptions >(Arena* arena) {
  return Arena::CreateInternal< ::xla::HloReducePrecisionOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DebugOptions* Arena::CreateMaybeMessage< ::xla::DebugOptions >(Arena* arena) {
  return Arena::CreateInternal< ::xla::DebugOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecutionOptions* Arena::CreateMaybeMessage< ::xla::ExecutionOptions >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecutionOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GetDeviceHandlesRequest* Arena::CreateMaybeMessage< ::xla::GetDeviceHandlesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::GetDeviceHandlesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GetDeviceHandlesResponse* Arena::CreateMaybeMessage< ::xla::GetDeviceHandlesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::GetDeviceHandlesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToClientRequest* Arena::CreateMaybeMessage< ::xla::TransferToClientRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToClientRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToClientResponse* Arena::CreateMaybeMessage< ::xla::TransferToClientResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToClientResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToServerRequest* Arena::CreateMaybeMessage< ::xla::TransferToServerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToServerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToServerResponse* Arena::CreateMaybeMessage< ::xla::TransferToServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToServerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToInfeedRequest* Arena::CreateMaybeMessage< ::xla::TransferToInfeedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToInfeedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferToInfeedResponse* Arena::CreateMaybeMessage< ::xla::TransferToInfeedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferToInfeedResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferFromOutfeedRequest* Arena::CreateMaybeMessage< ::xla::TransferFromOutfeedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferFromOutfeedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TransferFromOutfeedResponse* Arena::CreateMaybeMessage< ::xla::TransferFromOutfeedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::TransferFromOutfeedResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ResetDeviceRequest* Arena::CreateMaybeMessage< ::xla::ResetDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ResetDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ResetDeviceResponse* Arena::CreateMaybeMessage< ::xla::ResetDeviceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ResetDeviceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ComputationGraphStatsRequest* Arena::CreateMaybeMessage< ::xla::ComputationGraphStatsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ComputationGraphStatsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ComputationStatsResponse* Arena::CreateMaybeMessage< ::xla::ComputationStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ComputationStatsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::CreateChannelHandleRequest* Arena::CreateMaybeMessage< ::xla::CreateChannelHandleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::CreateChannelHandleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::CreateChannelHandleResponse* Arena::CreateMaybeMessage< ::xla::CreateChannelHandleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::CreateChannelHandleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::UnregisterRequest* Arena::CreateMaybeMessage< ::xla::UnregisterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::UnregisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::UnregisterResponse* Arena::CreateMaybeMessage< ::xla::UnregisterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::UnregisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::CompileRequest* Arena::CreateMaybeMessage< ::xla::CompileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::CompileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::CompileResponse* Arena::CreateMaybeMessage< ::xla::CompileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::CompileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecuteRequest* Arena::CreateMaybeMessage< ::xla::ExecuteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecuteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecuteGraphRequest* Arena::CreateMaybeMessage< ::xla::ExecuteGraphRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecuteGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecuteGraphParallelRequest* Arena::CreateMaybeMessage< ::xla::ExecuteGraphParallelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecuteGraphParallelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecuteResponse* Arena::CreateMaybeMessage< ::xla::ExecuteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecuteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecuteParallelResponse* Arena::CreateMaybeMessage< ::xla::ExecuteParallelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ExecuteParallelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::WaitForExecutionRequest* Arena::CreateMaybeMessage< ::xla::WaitForExecutionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::WaitForExecutionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::WaitForExecutionResponse* Arena::CreateMaybeMessage< ::xla::WaitForExecutionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::WaitForExecutionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ComputeConstantGraphRequest* Arena::CreateMaybeMessage< ::xla::ComputeConstantGraphRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ComputeConstantGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ComputeConstantResponse* Arena::CreateMaybeMessage< ::xla::ComputeConstantResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::ComputeConstantResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeconstructTupleRequest* Arena::CreateMaybeMessage< ::xla::DeconstructTupleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::DeconstructTupleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeconstructTupleResponse* Arena::CreateMaybeMessage< ::xla::DeconstructTupleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::DeconstructTupleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LoadDataRequest* Arena::CreateMaybeMessage< ::xla::LoadDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::LoadDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LoadDataResponse* Arena::CreateMaybeMessage< ::xla::LoadDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::LoadDataResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GetShapeRequest* Arena::CreateMaybeMessage< ::xla::GetShapeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::GetShapeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GetShapeResponse* Arena::CreateMaybeMessage< ::xla::GetShapeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::GetShapeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::UnpackRequest* Arena::CreateMaybeMessage< ::xla::UnpackRequest >(Arena* arena) {
  return Arena::CreateInternal< ::xla::UnpackRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::UnpackResponse* Arena::CreateMaybeMessage< ::xla::UnpackResponse >(Arena* arena) {
  return Arena::CreateInternal< ::xla::UnpackResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
