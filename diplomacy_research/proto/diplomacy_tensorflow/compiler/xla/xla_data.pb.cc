// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_tensorflow/compiler/xla/xla_data.proto

#include "diplomacy_tensorflow/compiler/xla/xla_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAssignmentProto_ComputationDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PaddingConfig_PaddingConfigDimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TileProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WindowDimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LayoutProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LiteralProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OpSharding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace xla {
class PaddingConfig_PaddingConfigDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaddingConfig_PaddingConfigDimension>
      _instance;
} _PaddingConfig_PaddingConfigDimension_default_instance_;
class PaddingConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaddingConfig>
      _instance;
} _PaddingConfig_default_instance_;
class TileProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TileProto>
      _instance;
} _TileProto_default_instance_;
class LayoutProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayoutProto>
      _instance;
} _LayoutProto_default_instance_;
class ShapeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShapeProto>
      _instance;
} _ShapeProto_default_instance_;
class ProgramShapeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramShapeProto>
      _instance;
} _ProgramShapeProto_default_instance_;
class ComputationStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputationStats>
      _instance;
} _ComputationStats_default_instance_;
class OpMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpMetadata>
      _instance;
} _OpMetadata_default_instance_;
class ExecutionProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionProfile>
      _instance;
} _ExecutionProfile_default_instance_;
class ExecutionHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionHandle>
      _instance;
} _ExecutionHandle_default_instance_;
class GlobalDataHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalDataHandle>
      _instance;
} _GlobalDataHandle_default_instance_;
class DeviceHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceHandle>
      _instance;
} _DeviceHandle_default_instance_;
class ChannelHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelHandle>
      _instance;
} _ChannelHandle_default_instance_;
class DeviceAssignmentProto_ComputationDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAssignmentProto_ComputationDevice>
      _instance;
} _DeviceAssignmentProto_ComputationDevice_default_instance_;
class DeviceAssignmentProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAssignmentProto>
      _instance;
} _DeviceAssignmentProto_default_instance_;
class LiteralProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiteralProto>
      _instance;
} _LiteralProto_default_instance_;
class WindowDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WindowDimension>
      _instance;
} _WindowDimension_default_instance_;
class WindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Window>
      _instance;
} _Window_default_instance_;
class GatherDimensionNumbersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GatherDimensionNumbers>
      _instance;
} _GatherDimensionNumbers_default_instance_;
class ScatterDimensionNumbersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScatterDimensionNumbers>
      _instance;
} _ScatterDimensionNumbers_default_instance_;
class ConvolutionDimensionNumbersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvolutionDimensionNumbers>
      _instance;
} _ConvolutionDimensionNumbers_default_instance_;
class DotDimensionNumbersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DotDimensionNumbers>
      _instance;
} _DotDimensionNumbers_default_instance_;
class OpShardingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpSharding>
      _instance;
} _OpSharding_default_instance_;
class ReplicaGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplicaGroup>
      _instance;
} _ReplicaGroup_default_instance_;
class SourceTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceTarget>
      _instance;
} _SourceTarget_default_instance_;
class PrecisionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrecisionConfig>
      _instance;
} _PrecisionConfig_default_instance_;
}  // namespace xla
namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
static void InitDefaultsPaddingConfig_PaddingConfigDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_PaddingConfig_PaddingConfigDimension_default_instance_;
    new (ptr) ::xla::PaddingConfig_PaddingConfigDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::PaddingConfig_PaddingConfigDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PaddingConfig_PaddingConfigDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPaddingConfig_PaddingConfigDimension}, {}};

static void InitDefaultsPaddingConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_PaddingConfig_default_instance_;
    new (ptr) ::xla::PaddingConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::PaddingConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PaddingConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPaddingConfig}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig_PaddingConfigDimension.base,}};

static void InitDefaultsTileProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_TileProto_default_instance_;
    new (ptr) ::xla::TileProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::TileProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TileProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTileProto}, {}};

static void InitDefaultsLayoutProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LayoutProto_default_instance_;
    new (ptr) ::xla::LayoutProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LayoutProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LayoutProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLayoutProto}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_TileProto.base,}};

static void InitDefaultsShapeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ShapeProto_default_instance_;
    new (ptr) ::xla::ShapeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ShapeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShapeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShapeProto}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LayoutProto.base,}};

static void InitDefaultsProgramShapeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ProgramShapeProto_default_instance_;
    new (ptr) ::xla::ProgramShapeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ProgramShapeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProgramShapeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProgramShapeProto}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsComputationStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ComputationStats_default_instance_;
    new (ptr) ::xla::ComputationStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ComputationStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ComputationStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsComputationStats}, {}};

static void InitDefaultsOpMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_OpMetadata_default_instance_;
    new (ptr) ::xla::OpMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::OpMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpMetadata}, {}};

static void InitDefaultsExecutionProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecutionProfile_default_instance_;
    new (ptr) ::xla::ExecutionProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecutionProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecutionProfile}, {}};

static void InitDefaultsExecutionHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ExecutionHandle_default_instance_;
    new (ptr) ::xla::ExecutionHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ExecutionHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecutionHandle}, {}};

static void InitDefaultsGlobalDataHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GlobalDataHandle_default_instance_;
    new (ptr) ::xla::GlobalDataHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GlobalDataHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GlobalDataHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGlobalDataHandle}, {}};

static void InitDefaultsDeviceHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeviceHandle_default_instance_;
    new (ptr) ::xla::DeviceHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeviceHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceHandle}, {}};

static void InitDefaultsChannelHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ChannelHandle_default_instance_;
    new (ptr) ::xla::ChannelHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ChannelHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelHandle}, {}};

static void InitDefaultsDeviceAssignmentProto_ComputationDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeviceAssignmentProto_ComputationDevice_default_instance_;
    new (ptr) ::xla::DeviceAssignmentProto_ComputationDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeviceAssignmentProto_ComputationDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAssignmentProto_ComputationDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceAssignmentProto_ComputationDevice}, {}};

static void InitDefaultsDeviceAssignmentProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DeviceAssignmentProto_default_instance_;
    new (ptr) ::xla::DeviceAssignmentProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DeviceAssignmentProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAssignmentProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceAssignmentProto}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto_ComputationDevice.base,}};

static void InitDefaultsLiteralProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_LiteralProto_default_instance_;
    new (ptr) ::xla::LiteralProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::LiteralProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LiteralProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLiteralProto}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsWindowDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_WindowDimension_default_instance_;
    new (ptr) ::xla::WindowDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::WindowDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WindowDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWindowDimension}, {}};

static void InitDefaultsWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_Window_default_instance_;
    new (ptr) ::xla::Window();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::Window::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Window =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWindow}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_WindowDimension.base,}};

static void InitDefaultsGatherDimensionNumbers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_GatherDimensionNumbers_default_instance_;
    new (ptr) ::xla::GatherDimensionNumbers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::GatherDimensionNumbers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GatherDimensionNumbers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGatherDimensionNumbers}, {}};

static void InitDefaultsScatterDimensionNumbers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ScatterDimensionNumbers_default_instance_;
    new (ptr) ::xla::ScatterDimensionNumbers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ScatterDimensionNumbers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScatterDimensionNumbers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScatterDimensionNumbers}, {}};

static void InitDefaultsConvolutionDimensionNumbers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ConvolutionDimensionNumbers_default_instance_;
    new (ptr) ::xla::ConvolutionDimensionNumbers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ConvolutionDimensionNumbers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConvolutionDimensionNumbers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConvolutionDimensionNumbers}, {}};

static void InitDefaultsDotDimensionNumbers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_DotDimensionNumbers_default_instance_;
    new (ptr) ::xla::DotDimensionNumbers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::DotDimensionNumbers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DotDimensionNumbers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDotDimensionNumbers}, {}};

static void InitDefaultsOpSharding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_OpSharding_default_instance_;
    new (ptr) ::xla::OpSharding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::OpSharding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OpSharding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOpSharding}, {
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base,}};

static void InitDefaultsReplicaGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_ReplicaGroup_default_instance_;
    new (ptr) ::xla::ReplicaGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::ReplicaGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReplicaGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReplicaGroup}, {}};

static void InitDefaultsSourceTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_SourceTarget_default_instance_;
    new (ptr) ::xla::SourceTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::SourceTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SourceTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSourceTarget}, {}};

static void InitDefaultsPrecisionConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xla::_PrecisionConfig_default_instance_;
    new (ptr) ::xla::PrecisionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xla::PrecisionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrecisionConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrecisionConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PaddingConfig_PaddingConfigDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PaddingConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TileProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LayoutProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShapeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramShapeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComputationStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalDataHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAssignmentProto_ComputationDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAssignmentProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LiteralProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WindowDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Window.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GatherDimensionNumbers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScatterDimensionNumbers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvolutionDimensionNumbers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DotDimensionNumbers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpSharding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplicaGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrecisionConfig.base);
}

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig_PaddingConfigDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig_PaddingConfigDimension, edge_padding_low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig_PaddingConfigDimension, edge_padding_high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig_PaddingConfigDimension, interior_padding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PaddingConfig, dimensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TileProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::TileProto, dimensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, minor_to_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, max_sparse_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LayoutProto, element_size_in_bits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShapeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShapeProto, element_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShapeProto, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShapeProto, tuple_shapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ShapeProto, layout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ProgramShapeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ProgramShapeProto, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ProgramShapeProto, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ProgramShapeProto, parameter_names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationStats, flop_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ComputationStats, transcendental_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpMetadata, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpMetadata, op_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpMetadata, source_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpMetadata, source_line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, compilation_cache_hit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, compile_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, compute_cycle_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, compute_time_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, compute_and_transfer_time_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionProfile, executable_size_in_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ExecutionHandle, handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GlobalDataHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GlobalDataHandle, handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceHandle, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceHandle, device_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ChannelHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ChannelHandle, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ChannelHandle, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto_ComputationDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto_ComputationDevice, replica_device_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto, replica_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto, computation_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DeviceAssignmentProto, computation_devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, preds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, s8s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, u8s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, s32s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, s64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, u32s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, u64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, f32s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, f64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, c64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, tuple_literals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, f16s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, bf16s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, u16s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, s16s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::LiteralProto, sparse_indices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, padding_low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, padding_high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, window_dilation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, base_dilation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::WindowDimension, window_reversal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::Window, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::Window, dimensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GatherDimensionNumbers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GatherDimensionNumbers, offset_dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GatherDimensionNumbers, collapsed_slice_dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GatherDimensionNumbers, start_index_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::GatherDimensionNumbers, index_vector_dim_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ScatterDimensionNumbers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ScatterDimensionNumbers, update_window_dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ScatterDimensionNumbers, inserted_window_dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ScatterDimensionNumbers, scatter_dims_to_operand_dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ScatterDimensionNumbers, index_vector_dim_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, input_batch_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, input_feature_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, input_spatial_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, kernel_input_feature_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, kernel_output_feature_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, kernel_spatial_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, output_batch_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, output_feature_dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ConvolutionDimensionNumbers, output_spatial_dimensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DotDimensionNumbers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DotDimensionNumbers, lhs_contracting_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DotDimensionNumbers, rhs_contracting_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DotDimensionNumbers, lhs_batch_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::DotDimensionNumbers, rhs_batch_dimensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, tile_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, tile_assignment_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, tile_assignment_devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::OpSharding, tuple_shardings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ReplicaGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::ReplicaGroup, replica_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::SourceTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::SourceTarget, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::SourceTarget, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PrecisionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xla::PrecisionConfig, operand_precision_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xla::PaddingConfig_PaddingConfigDimension)},
  { 8, -1, sizeof(::xla::PaddingConfig)},
  { 14, -1, sizeof(::xla::TileProto)},
  { 20, -1, sizeof(::xla::LayoutProto)},
  { 30, -1, sizeof(::xla::ShapeProto)},
  { 39, -1, sizeof(::xla::ProgramShapeProto)},
  { 47, -1, sizeof(::xla::ComputationStats)},
  { 54, -1, sizeof(::xla::OpMetadata)},
  { 63, -1, sizeof(::xla::ExecutionProfile)},
  { 74, -1, sizeof(::xla::ExecutionHandle)},
  { 80, -1, sizeof(::xla::GlobalDataHandle)},
  { 86, -1, sizeof(::xla::DeviceHandle)},
  { 93, -1, sizeof(::xla::ChannelHandle)},
  { 100, -1, sizeof(::xla::DeviceAssignmentProto_ComputationDevice)},
  { 106, -1, sizeof(::xla::DeviceAssignmentProto)},
  { 114, -1, sizeof(::xla::LiteralProto)},
  { 136, -1, sizeof(::xla::WindowDimension)},
  { 148, -1, sizeof(::xla::Window)},
  { 154, -1, sizeof(::xla::GatherDimensionNumbers)},
  { 163, -1, sizeof(::xla::ScatterDimensionNumbers)},
  { 172, -1, sizeof(::xla::ConvolutionDimensionNumbers)},
  { 186, -1, sizeof(::xla::DotDimensionNumbers)},
  { 195, -1, sizeof(::xla::OpSharding)},
  { 205, -1, sizeof(::xla::ReplicaGroup)},
  { 211, -1, sizeof(::xla::SourceTarget)},
  { 218, -1, sizeof(::xla::PrecisionConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_PaddingConfig_PaddingConfigDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_PaddingConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_TileProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LayoutProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ShapeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ProgramShapeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ComputationStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_OpMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecutionProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ExecutionHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GlobalDataHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeviceHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ChannelHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeviceAssignmentProto_ComputationDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DeviceAssignmentProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_LiteralProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_WindowDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_Window_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_GatherDimensionNumbers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ScatterDimensionNumbers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ConvolutionDimensionNumbers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_DotDimensionNumbers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_OpSharding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_ReplicaGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_SourceTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xla::_PrecisionConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "diplomacy_tensorflow/compiler/xla/xla_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0diplomacy_tensorflow/compiler/xla/xla_"
      "data.proto\022\003xla\"\267\001\n\rPaddingConfig\022=\n\ndim"
      "ensions\030\001 \003(\0132).xla.PaddingConfig.Paddin"
      "gConfigDimension\032g\n\026PaddingConfigDimensi"
      "on\022\030\n\020edge_padding_low\030\001 \001(\003\022\031\n\021edge_pad"
      "ding_high\030\002 \001(\003\022\030\n\020interior_padding\030\003 \001("
      "\003\"\037\n\tTileProto\022\022\n\ndimensions\030\001 \003(\003\"\312\001\n\013L"
      "ayoutProto\022\033\n\006format\030\004 \001(\0162\013.xla.Format\022"
      "\026\n\016minor_to_major\030\001 \003(\003\022\033\n\023max_sparse_el"
      "ements\030\005 \001(\003\022\035\n\005tiles\030\006 \003(\0132\016.xla.TilePr"
      "oto\022\034\n\024element_size_in_bits\030\007 \001(\003J\004\010\002\020\003J"
      "\004\010\003\020\004R\021padded_dimensionsR\rpadding_value\""
      "\237\001\n\nShapeProto\022(\n\014element_type\030\002 \001(\0162\022.x"
      "la.PrimitiveType\022\022\n\ndimensions\030\003 \003(\003\022%\n\014"
      "tuple_shapes\030\004 \003(\0132\017.xla.ShapeProto\022 \n\006l"
      "ayout\030\005 \001(\0132\020.xla.LayoutProtoJ\004\010\001\020\002R\004ran"
      "k\"r\n\021ProgramShapeProto\022#\n\nparameters\030\001 \003"
      "(\0132\017.xla.ShapeProto\022\037\n\006result\030\002 \001(\0132\017.xl"
      "a.ShapeProto\022\027\n\017parameter_names\030\003 \003(\t\"D\n"
      "\020ComputationStats\022\022\n\nflop_count\030\001 \001(\001\022\034\n"
      "\024transcendental_count\030\002 \001(\001\"X\n\nOpMetadat"
      "a\022\017\n\007op_type\030\001 \001(\t\022\017\n\007op_name\030\002 \001(\t\022\023\n\013s"
      "ource_file\030\003 \001(\t\022\023\n\013source_line\030\004 \001(\005\"\310\001"
      "\n\020ExecutionProfile\022\035\n\025compilation_cache_"
      "hit\030\001 \001(\010\022\027\n\017compile_time_ms\030\002 \001(\003\022\033\n\023co"
      "mpute_cycle_count\030\003 \001(\003\022\027\n\017compute_time_"
      "ns\030\004 \001(\003\022$\n\034compute_and_transfer_time_ns"
      "\030\005 \001(\003\022 \n\030executable_size_in_bytes\030\006 \001(\003"
      "\"!\n\017ExecutionHandle\022\016\n\006handle\030\001 \001(\003\"\"\n\020G"
      "lobalDataHandle\022\016\n\006handle\030\001 \001(\003\"4\n\014Devic"
      "eHandle\022\016\n\006handle\030\001 \001(\003\022\024\n\014device_count\030"
      "\002 \001(\003\"\264\001\n\rChannelHandle\022\016\n\006handle\030\001 \001(\003\022"
      ",\n\004type\030\002 \001(\0162\036.xla.ChannelHandle.Channe"
      "lType\"e\n\013ChannelType\022\030\n\024CHANNEL_TYPE_INV"
      "ALID\020\000\022\024\n\020DEVICE_TO_DEVICE\020\001\022\022\n\016DEVICE_T"
      "O_HOST\020\002\022\022\n\016HOST_TO_DEVICE\020\003\"\305\001\n\025DeviceA"
      "ssignmentProto\022\025\n\rreplica_count\030\001 \001(\005\022\031\n"
      "\021computation_count\030\002 \001(\005\022I\n\023computation_"
      "devices\030\003 \003(\0132,.xla.DeviceAssignmentProt"
      "o.ComputationDevice\032/\n\021ComputationDevice"
      "\022\032\n\022replica_device_ids\030\001 \003(\005\"\265\002\n\014Literal"
      "Proto\022\036\n\005shape\030\001 \001(\0132\017.xla.ShapeProto\022\r\n"
      "\005preds\030\002 \003(\010\022\013\n\003s8s\030\017 \001(\014\022\013\n\003u8s\030\003 \001(\014\022\014"
      "\n\004s32s\030\004 \003(\005\022\014\n\004s64s\030\005 \003(\003\022\014\n\004u32s\030\006 \003(\r"
      "\022\014\n\004u64s\030\007 \003(\004\022\014\n\004f32s\030\010 \003(\002\022\014\n\004f64s\030\t \003"
      "(\001\022\014\n\004c64s\030\014 \003(\002\022)\n\016tuple_literals\030\n \003(\013"
      "2\021.xla.LiteralProto\022\014\n\004f16s\030\013 \001(\014\022\r\n\005bf1"
      "6s\030\r \001(\014\022\014\n\004u16s\030\020 \001(\014\022\014\n\004s16s\030\021 \001(\014\022\026\n\016"
      "sparse_indices\030\016 \003(\003\"\243\001\n\017WindowDimension"
      "\022\014\n\004size\030\001 \001(\003\022\016\n\006stride\030\002 \001(\003\022\023\n\013paddin"
      "g_low\030\003 \001(\003\022\024\n\014padding_high\030\004 \001(\003\022\027\n\017win"
      "dow_dilation\030\005 \001(\003\022\025\n\rbase_dilation\030\006 \001("
      "\003\022\027\n\017window_reversal\030\007 \001(\010\"2\n\006Window\022(\n\n"
      "dimensions\030\001 \003(\0132\024.xla.WindowDimension\"~"
      "\n\026GatherDimensionNumbers\022\023\n\013offset_dims\030"
      "\001 \003(\003\022\034\n\024collapsed_slice_dims\030\002 \003(\003\022\027\n\017s"
      "tart_index_map\030\003 \003(\003\022\030\n\020index_vector_dim"
      "\030\004 \001(\003\"\223\001\n\027ScatterDimensionNumbers\022\032\n\022up"
      "date_window_dims\030\001 \003(\003\022\034\n\024inserted_windo"
      "w_dims\030\002 \003(\003\022$\n\034scatter_dims_to_operand_"
      "dims\030\003 \003(\003\022\030\n\020index_vector_dim\030\004 \001(\003\"\330\002\n"
      "\033ConvolutionDimensionNumbers\022\035\n\025input_ba"
      "tch_dimension\030\007 \001(\003\022\037\n\027input_feature_dim"
      "ension\030\010 \001(\003\022 \n\030input_spatial_dimensions"
      "\030\013 \003(\003\022&\n\036kernel_input_feature_dimension"
      "\030\003 \001(\003\022\'\n\037kernel_output_feature_dimensio"
      "n\030\004 \001(\003\022!\n\031kernel_spatial_dimensions\030\006 \003"
      "(\003\022\036\n\026output_batch_dimension\030\t \001(\003\022 \n\030ou"
      "tput_feature_dimension\030\n \001(\003\022!\n\031output_s"
      "patial_dimensions\030\014 \003(\003\"\231\001\n\023DotDimension"
      "Numbers\022\"\n\032lhs_contracting_dimensions\030\001 "
      "\003(\003\022\"\n\032rhs_contracting_dimensions\030\002 \003(\003\022"
      "\034\n\024lhs_batch_dimensions\030\003 \003(\003\022\034\n\024rhs_bat"
      "ch_dimensions\030\004 \003(\003\"\377\001\n\nOpSharding\022\"\n\004ty"
      "pe\030\001 \001(\0162\024.xla.OpSharding.Type\022#\n\ntile_s"
      "hape\030\002 \001(\0132\017.xla.ShapeProto\022\"\n\032tile_assi"
      "gnment_dimensions\030\003 \003(\003\022\037\n\027tile_assignme"
      "nt_devices\030\004 \003(\003\022(\n\017tuple_shardings\030\005 \003("
      "\0132\017.xla.OpSharding\"9\n\004Type\022\016\n\nREPLICATED"
      "\020\000\022\013\n\007MAXIMAL\020\001\022\t\n\005TUPLE\020\002\022\t\n\005OTHER\020\003\"#\n"
      "\014ReplicaGroup\022\023\n\013replica_ids\030\001 \003(\003\".\n\014So"
      "urceTarget\022\016\n\006source\030\001 \001(\003\022\016\n\006target\030\002 \001"
      "(\003\"}\n\017PrecisionConfig\0229\n\021operand_precisi"
      "on\030\001 \003(\0162\036.xla.PrecisionConfig.Precision"
      "\"/\n\tPrecision\022\013\n\007DEFAULT\020\000\022\010\n\004HIGH\020\001\022\013\n\007"
      "HIGHEST\020\002*\313\001\n\rPrimitiveType\022\032\n\026PRIMITIVE"
      "_TYPE_INVALID\020\000\022\010\n\004PRED\020\001\022\006\n\002S8\020\002\022\007\n\003S16"
      "\020\003\022\007\n\003S32\020\004\022\007\n\003S64\020\005\022\006\n\002U8\020\006\022\007\n\003U16\020\007\022\007\n"
      "\003U32\020\010\022\007\n\003U64\020\t\022\007\n\003F16\020\n\022\007\n\003F32\020\013\022\010\n\004BF1"
      "6\020\020\022\007\n\003F64\020\014\022\007\n\003C64\020\017\022\t\n\005TUPLE\020\r\022\n\n\006OPAQ"
      "UE\020\016\022\t\n\005TOKEN\020\021*3\n\006Format\022\022\n\016INVALID_FOR"
      "MAT\020\000\022\t\n\005DENSE\020\001\022\n\n\006SPARSE\020\002*1\n\007FftType\022"
      "\007\n\003FFT\020\000\022\010\n\004IFFT\020\001\022\010\n\004RFFT\020\002\022\t\n\005IRFFT\020\003*"
      "F\n\022RandomDistribution\022\017\n\013RNG_INVALID\020\000\022\017"
      "\n\013RNG_UNIFORM\020\001\022\016\n\nRNG_NORMAL\020\002B\003\370\001\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "diplomacy_tensorflow/compiler/xla/xla_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace xla {
const ::google::protobuf::EnumDescriptor* ChannelHandle_ChannelType_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool ChannelHandle_ChannelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChannelHandle_ChannelType ChannelHandle::CHANNEL_TYPE_INVALID;
const ChannelHandle_ChannelType ChannelHandle::DEVICE_TO_DEVICE;
const ChannelHandle_ChannelType ChannelHandle::DEVICE_TO_HOST;
const ChannelHandle_ChannelType ChannelHandle::HOST_TO_DEVICE;
const ChannelHandle_ChannelType ChannelHandle::ChannelType_MIN;
const ChannelHandle_ChannelType ChannelHandle::ChannelType_MAX;
const int ChannelHandle::ChannelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OpSharding_Type_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[1];
}
bool OpSharding_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OpSharding_Type OpSharding::REPLICATED;
const OpSharding_Type OpSharding::MAXIMAL;
const OpSharding_Type OpSharding::TUPLE;
const OpSharding_Type OpSharding::OTHER;
const OpSharding_Type OpSharding::Type_MIN;
const OpSharding_Type OpSharding::Type_MAX;
const int OpSharding::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PrecisionConfig_Precision_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[2];
}
bool PrecisionConfig_Precision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PrecisionConfig_Precision PrecisionConfig::DEFAULT;
const PrecisionConfig_Precision PrecisionConfig::HIGH;
const PrecisionConfig_Precision PrecisionConfig::HIGHEST;
const PrecisionConfig_Precision PrecisionConfig::Precision_MIN;
const PrecisionConfig_Precision PrecisionConfig::Precision_MAX;
const int PrecisionConfig::Precision_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PrimitiveType_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[3];
}
bool PrimitiveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Format_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[4];
}
bool Format_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FftType_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[5];
}
bool FftType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RandomDistribution_descriptor() {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_enum_descriptors[6];
}
bool RandomDistribution_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PaddingConfig_PaddingConfigDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaddingConfig_PaddingConfigDimension::kEdgePaddingLowFieldNumber;
const int PaddingConfig_PaddingConfigDimension::kEdgePaddingHighFieldNumber;
const int PaddingConfig_PaddingConfigDimension::kInteriorPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaddingConfig_PaddingConfigDimension::PaddingConfig_PaddingConfigDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig_PaddingConfigDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.PaddingConfig.PaddingConfigDimension)
}
PaddingConfig_PaddingConfigDimension::PaddingConfig_PaddingConfigDimension(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig_PaddingConfigDimension.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.PaddingConfig.PaddingConfigDimension)
}
PaddingConfig_PaddingConfigDimension::PaddingConfig_PaddingConfigDimension(const PaddingConfig_PaddingConfigDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&edge_padding_low_, &from.edge_padding_low_,
    static_cast<size_t>(reinterpret_cast<char*>(&interior_padding_) -
    reinterpret_cast<char*>(&edge_padding_low_)) + sizeof(interior_padding_));
  // @@protoc_insertion_point(copy_constructor:xla.PaddingConfig.PaddingConfigDimension)
}

void PaddingConfig_PaddingConfigDimension::SharedCtor() {
  ::memset(&edge_padding_low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interior_padding_) -
      reinterpret_cast<char*>(&edge_padding_low_)) + sizeof(interior_padding_));
}

PaddingConfig_PaddingConfigDimension::~PaddingConfig_PaddingConfigDimension() {
  // @@protoc_insertion_point(destructor:xla.PaddingConfig.PaddingConfigDimension)
  SharedDtor();
}

void PaddingConfig_PaddingConfigDimension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PaddingConfig_PaddingConfigDimension::ArenaDtor(void* object) {
  PaddingConfig_PaddingConfigDimension* _this = reinterpret_cast< PaddingConfig_PaddingConfigDimension* >(object);
  (void)_this;
}
void PaddingConfig_PaddingConfigDimension::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PaddingConfig_PaddingConfigDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PaddingConfig_PaddingConfigDimension::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaddingConfig_PaddingConfigDimension& PaddingConfig_PaddingConfigDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig_PaddingConfigDimension.base);
  return *internal_default_instance();
}


void PaddingConfig_PaddingConfigDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.PaddingConfig.PaddingConfigDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&edge_padding_low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interior_padding_) -
      reinterpret_cast<char*>(&edge_padding_low_)) + sizeof(interior_padding_));
  _internal_metadata_.Clear();
}

bool PaddingConfig_PaddingConfigDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.PaddingConfig.PaddingConfigDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 edge_padding_low = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &edge_padding_low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 edge_padding_high = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &edge_padding_high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 interior_padding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &interior_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.PaddingConfig.PaddingConfigDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.PaddingConfig.PaddingConfigDimension)
  return false;
#undef DO_
}

void PaddingConfig_PaddingConfigDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.PaddingConfig.PaddingConfigDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 edge_padding_low = 1;
  if (this->edge_padding_low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->edge_padding_low(), output);
  }

  // int64 edge_padding_high = 2;
  if (this->edge_padding_high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->edge_padding_high(), output);
  }

  // int64 interior_padding = 3;
  if (this->interior_padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->interior_padding(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.PaddingConfig.PaddingConfigDimension)
}

::google::protobuf::uint8* PaddingConfig_PaddingConfigDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.PaddingConfig.PaddingConfigDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 edge_padding_low = 1;
  if (this->edge_padding_low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->edge_padding_low(), target);
  }

  // int64 edge_padding_high = 2;
  if (this->edge_padding_high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->edge_padding_high(), target);
  }

  // int64 interior_padding = 3;
  if (this->interior_padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->interior_padding(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.PaddingConfig.PaddingConfigDimension)
  return target;
}

size_t PaddingConfig_PaddingConfigDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.PaddingConfig.PaddingConfigDimension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 edge_padding_low = 1;
  if (this->edge_padding_low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->edge_padding_low());
  }

  // int64 edge_padding_high = 2;
  if (this->edge_padding_high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->edge_padding_high());
  }

  // int64 interior_padding = 3;
  if (this->interior_padding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->interior_padding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaddingConfig_PaddingConfigDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.PaddingConfig.PaddingConfigDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const PaddingConfig_PaddingConfigDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaddingConfig_PaddingConfigDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.PaddingConfig.PaddingConfigDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.PaddingConfig.PaddingConfigDimension)
    MergeFrom(*source);
  }
}

void PaddingConfig_PaddingConfigDimension::MergeFrom(const PaddingConfig_PaddingConfigDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.PaddingConfig.PaddingConfigDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edge_padding_low() != 0) {
    set_edge_padding_low(from.edge_padding_low());
  }
  if (from.edge_padding_high() != 0) {
    set_edge_padding_high(from.edge_padding_high());
  }
  if (from.interior_padding() != 0) {
    set_interior_padding(from.interior_padding());
  }
}

void PaddingConfig_PaddingConfigDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.PaddingConfig.PaddingConfigDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaddingConfig_PaddingConfigDimension::CopyFrom(const PaddingConfig_PaddingConfigDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.PaddingConfig.PaddingConfigDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaddingConfig_PaddingConfigDimension::IsInitialized() const {
  return true;
}

void PaddingConfig_PaddingConfigDimension::Swap(PaddingConfig_PaddingConfigDimension* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PaddingConfig_PaddingConfigDimension* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PaddingConfig_PaddingConfigDimension::UnsafeArenaSwap(PaddingConfig_PaddingConfigDimension* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PaddingConfig_PaddingConfigDimension::InternalSwap(PaddingConfig_PaddingConfigDimension* other) {
  using std::swap;
  swap(edge_padding_low_, other->edge_padding_low_);
  swap(edge_padding_high_, other->edge_padding_high_);
  swap(interior_padding_, other->interior_padding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PaddingConfig_PaddingConfigDimension::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PaddingConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaddingConfig::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaddingConfig::PaddingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.PaddingConfig)
}
PaddingConfig::PaddingConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dimensions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.PaddingConfig)
}
PaddingConfig::PaddingConfig(const PaddingConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.PaddingConfig)
}

void PaddingConfig::SharedCtor() {
}

PaddingConfig::~PaddingConfig() {
  // @@protoc_insertion_point(destructor:xla.PaddingConfig)
  SharedDtor();
}

void PaddingConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PaddingConfig::ArenaDtor(void* object) {
  PaddingConfig* _this = reinterpret_cast< PaddingConfig* >(object);
  (void)_this;
}
void PaddingConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PaddingConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PaddingConfig::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaddingConfig& PaddingConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PaddingConfig.base);
  return *internal_default_instance();
}


void PaddingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.PaddingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear();
}

bool PaddingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.PaddingConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.PaddingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.PaddingConfig)
  return false;
#undef DO_
}

void PaddingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.PaddingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.PaddingConfig)
}

::google::protobuf::uint8* PaddingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.PaddingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dimensions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.PaddingConfig)
  return target;
}

size_t PaddingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.PaddingConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaddingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.PaddingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PaddingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaddingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.PaddingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.PaddingConfig)
    MergeFrom(*source);
  }
}

void PaddingConfig::MergeFrom(const PaddingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.PaddingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
}

void PaddingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.PaddingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaddingConfig::CopyFrom(const PaddingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.PaddingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaddingConfig::IsInitialized() const {
  return true;
}

void PaddingConfig::Swap(PaddingConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PaddingConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PaddingConfig::UnsafeArenaSwap(PaddingConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PaddingConfig::InternalSwap(PaddingConfig* other) {
  using std::swap;
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PaddingConfig::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TileProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TileProto::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TileProto::TileProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_TileProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.TileProto)
}
TileProto::TileProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dimensions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_TileProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.TileProto)
}
TileProto::TileProto(const TileProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.TileProto)
}

void TileProto::SharedCtor() {
}

TileProto::~TileProto() {
  // @@protoc_insertion_point(destructor:xla.TileProto)
  SharedDtor();
}

void TileProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TileProto::ArenaDtor(void* object) {
  TileProto* _this = reinterpret_cast< TileProto* >(object);
  (void)_this;
}
void TileProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TileProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TileProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TileProto& TileProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_TileProto.base);
  return *internal_default_instance();
}


void TileProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.TileProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear();
}

bool TileProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.TileProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.TileProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.TileProto)
  return false;
#undef DO_
}

void TileProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.TileProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 dimensions = 1;
  if (this->dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dimensions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.TileProto)
}

::google::protobuf::uint8* TileProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.TileProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 dimensions = 1;
  if (this->dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dimensions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.TileProto)
  return target;
}

size_t TileProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.TileProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 dimensions = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TileProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.TileProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TileProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TileProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.TileProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.TileProto)
    MergeFrom(*source);
  }
}

void TileProto::MergeFrom(const TileProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.TileProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
}

void TileProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.TileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TileProto::CopyFrom(const TileProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.TileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TileProto::IsInitialized() const {
  return true;
}

void TileProto::Swap(TileProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TileProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TileProto::UnsafeArenaSwap(TileProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TileProto::InternalSwap(TileProto* other) {
  using std::swap;
  dimensions_.InternalSwap(&other->dimensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TileProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayoutProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayoutProto::kFormatFieldNumber;
const int LayoutProto::kMinorToMajorFieldNumber;
const int LayoutProto::kMaxSparseElementsFieldNumber;
const int LayoutProto::kTilesFieldNumber;
const int LayoutProto::kElementSizeInBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayoutProto::LayoutProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LayoutProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LayoutProto)
}
LayoutProto::LayoutProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  minor_to_major_(arena),
  tiles_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LayoutProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LayoutProto)
}
LayoutProto::LayoutProto(const LayoutProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      minor_to_major_(from.minor_to_major_),
      tiles_(from.tiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_sparse_elements_, &from.max_sparse_elements_,
    static_cast<size_t>(reinterpret_cast<char*>(&element_size_in_bits_) -
    reinterpret_cast<char*>(&max_sparse_elements_)) + sizeof(element_size_in_bits_));
  // @@protoc_insertion_point(copy_constructor:xla.LayoutProto)
}

void LayoutProto::SharedCtor() {
  ::memset(&max_sparse_elements_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_size_in_bits_) -
      reinterpret_cast<char*>(&max_sparse_elements_)) + sizeof(element_size_in_bits_));
}

LayoutProto::~LayoutProto() {
  // @@protoc_insertion_point(destructor:xla.LayoutProto)
  SharedDtor();
}

void LayoutProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void LayoutProto::ArenaDtor(void* object) {
  LayoutProto* _this = reinterpret_cast< LayoutProto* >(object);
  (void)_this;
}
void LayoutProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LayoutProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayoutProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayoutProto& LayoutProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LayoutProto.base);
  return *internal_default_instance();
}


void LayoutProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minor_to_major_.Clear();
  tiles_.Clear();
  ::memset(&max_sparse_elements_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_size_in_bits_) -
      reinterpret_cast<char*>(&max_sparse_elements_)) + sizeof(element_size_in_bits_));
  _internal_metadata_.Clear();
}

bool LayoutProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LayoutProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 minor_to_major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_minor_to_major())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_minor_to_major())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.Format format = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::xla::Format >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_sparse_elements = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_sparse_elements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.TileProto tiles = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 element_size_in_bits = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &element_size_in_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LayoutProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LayoutProto)
  return false;
#undef DO_
}

void LayoutProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 minor_to_major = 1;
  if (this->minor_to_major_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _minor_to_major_cached_byte_size_));
  }
  for (int i = 0, n = this->minor_to_major_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->minor_to_major(i), output);
  }

  // .xla.Format format = 4;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->format(), output);
  }

  // int64 max_sparse_elements = 5;
  if (this->max_sparse_elements() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->max_sparse_elements(), output);
  }

  // repeated .xla.TileProto tiles = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->tiles(static_cast<int>(i)),
      output);
  }

  // int64 element_size_in_bits = 7;
  if (this->element_size_in_bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->element_size_in_bits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LayoutProto)
}

::google::protobuf::uint8* LayoutProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LayoutProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 minor_to_major = 1;
  if (this->minor_to_major_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _minor_to_major_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->minor_to_major_, target);
  }

  // .xla.Format format = 4;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->format(), target);
  }

  // int64 max_sparse_elements = 5;
  if (this->max_sparse_elements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->max_sparse_elements(), target);
  }

  // repeated .xla.TileProto tiles = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->tiles(static_cast<int>(i)), deterministic, target);
  }

  // int64 element_size_in_bits = 7;
  if (this->element_size_in_bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->element_size_in_bits(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LayoutProto)
  return target;
}

size_t LayoutProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LayoutProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 minor_to_major = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->minor_to_major_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _minor_to_major_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.TileProto tiles = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->tiles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tiles(static_cast<int>(i)));
    }
  }

  // int64 max_sparse_elements = 5;
  if (this->max_sparse_elements() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_sparse_elements());
  }

  // .xla.Format format = 4;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  // int64 element_size_in_bits = 7;
  if (this->element_size_in_bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->element_size_in_bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayoutProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LayoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LayoutProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayoutProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LayoutProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LayoutProto)
    MergeFrom(*source);
  }
}

void LayoutProto::MergeFrom(const LayoutProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LayoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  minor_to_major_.MergeFrom(from.minor_to_major_);
  tiles_.MergeFrom(from.tiles_);
  if (from.max_sparse_elements() != 0) {
    set_max_sparse_elements(from.max_sparse_elements());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  if (from.element_size_in_bits() != 0) {
    set_element_size_in_bits(from.element_size_in_bits());
  }
}

void LayoutProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LayoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayoutProto::CopyFrom(const LayoutProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LayoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayoutProto::IsInitialized() const {
  return true;
}

void LayoutProto::Swap(LayoutProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LayoutProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LayoutProto::UnsafeArenaSwap(LayoutProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LayoutProto::InternalSwap(LayoutProto* other) {
  using std::swap;
  minor_to_major_.InternalSwap(&other->minor_to_major_);
  CastToBase(&tiles_)->InternalSwap(CastToBase(&other->tiles_));
  swap(max_sparse_elements_, other->max_sparse_elements_);
  swap(format_, other->format_);
  swap(element_size_in_bits_, other->element_size_in_bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayoutProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShapeProto::InitAsDefaultInstance() {
  ::xla::_ShapeProto_default_instance_._instance.get_mutable()->layout_ = const_cast< ::xla::LayoutProto*>(
      ::xla::LayoutProto::internal_default_instance());
}
void ShapeProto::unsafe_arena_set_allocated_layout(
    ::xla::LayoutProto* layout) {
  if (GetArenaNoVirtual() == NULL) {
    delete layout_;
  }
  layout_ = layout;
  if (layout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.ShapeProto.layout)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShapeProto::kElementTypeFieldNumber;
const int ShapeProto::kDimensionsFieldNumber;
const int ShapeProto::kTupleShapesFieldNumber;
const int ShapeProto::kLayoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShapeProto::ShapeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ShapeProto)
}
ShapeProto::ShapeProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dimensions_(arena),
  tuple_shapes_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ShapeProto)
}
ShapeProto::ShapeProto(const ShapeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_),
      tuple_shapes_(from.tuple_shapes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_layout()) {
    layout_ = new ::xla::LayoutProto(*from.layout_);
  } else {
    layout_ = NULL;
  }
  element_type_ = from.element_type_;
  // @@protoc_insertion_point(copy_constructor:xla.ShapeProto)
}

void ShapeProto::SharedCtor() {
  ::memset(&layout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_type_) -
      reinterpret_cast<char*>(&layout_)) + sizeof(element_type_));
}

ShapeProto::~ShapeProto() {
  // @@protoc_insertion_point(destructor:xla.ShapeProto)
  SharedDtor();
}

void ShapeProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete layout_;
}

void ShapeProto::ArenaDtor(void* object) {
  ShapeProto* _this = reinterpret_cast< ShapeProto* >(object);
  (void)_this;
}
void ShapeProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShapeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShapeProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShapeProto& ShapeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ShapeProto.base);
  return *internal_default_instance();
}


void ShapeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  tuple_shapes_.Clear();
  if (GetArenaNoVirtual() == NULL && layout_ != NULL) {
    delete layout_;
  }
  layout_ = NULL;
  element_type_ = 0;
  _internal_metadata_.Clear();
}

bool ShapeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ShapeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.PrimitiveType element_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_element_type(static_cast< ::xla::PrimitiveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dimensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.ShapeProto tuple_shapes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuple_shapes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.LayoutProto layout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_layout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ShapeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ShapeProto)
  return false;
#undef DO_
}

void ShapeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.PrimitiveType element_type = 2;
  if (this->element_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->element_type(), output);
  }

  // repeated int64 dimensions = 3;
  if (this->dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->dimensions(i), output);
  }

  // repeated .xla.ShapeProto tuple_shapes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_shapes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->tuple_shapes(static_cast<int>(i)),
      output);
  }

  // .xla.LayoutProto layout = 5;
  if (this->has_layout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_layout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ShapeProto)
}

::google::protobuf::uint8* ShapeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.PrimitiveType element_type = 2;
  if (this->element_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->element_type(), target);
  }

  // repeated int64 dimensions = 3;
  if (this->dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->dimensions_, target);
  }

  // repeated .xla.ShapeProto tuple_shapes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_shapes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->tuple_shapes(static_cast<int>(i)), deterministic, target);
  }

  // .xla.LayoutProto layout = 5;
  if (this->has_layout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_layout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ShapeProto)
  return target;
}

size_t ShapeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ShapeProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 dimensions = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.ShapeProto tuple_shapes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tuple_shapes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuple_shapes(static_cast<int>(i)));
    }
  }

  // .xla.LayoutProto layout = 5;
  if (this->has_layout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *layout_);
  }

  // .xla.PrimitiveType element_type = 2;
  if (this->element_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->element_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShapeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ShapeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShapeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ShapeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ShapeProto)
    MergeFrom(*source);
  }
}

void ShapeProto::MergeFrom(const ShapeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  tuple_shapes_.MergeFrom(from.tuple_shapes_);
  if (from.has_layout()) {
    mutable_layout()->::xla::LayoutProto::MergeFrom(from.layout());
  }
  if (from.element_type() != 0) {
    set_element_type(from.element_type());
  }
}

void ShapeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeProto::CopyFrom(const ShapeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeProto::IsInitialized() const {
  return true;
}

void ShapeProto::Swap(ShapeProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShapeProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShapeProto::UnsafeArenaSwap(ShapeProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShapeProto::InternalSwap(ShapeProto* other) {
  using std::swap;
  dimensions_.InternalSwap(&other->dimensions_);
  CastToBase(&tuple_shapes_)->InternalSwap(CastToBase(&other->tuple_shapes_));
  swap(layout_, other->layout_);
  swap(element_type_, other->element_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShapeProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramShapeProto::InitAsDefaultInstance() {
  ::xla::_ProgramShapeProto_default_instance_._instance.get_mutable()->result_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void ProgramShapeProto::unsafe_arena_set_allocated_result(
    ::xla::ShapeProto* result) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.ProgramShapeProto.result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramShapeProto::kParametersFieldNumber;
const int ProgramShapeProto::kResultFieldNumber;
const int ProgramShapeProto::kParameterNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramShapeProto::ProgramShapeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ProgramShapeProto)
}
ProgramShapeProto::ProgramShapeProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  parameters_(arena),
  parameter_names_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ProgramShapeProto)
}
ProgramShapeProto::ProgramShapeProto(const ProgramShapeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameters_(from.parameters_),
      parameter_names_(from.parameter_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::xla::ShapeProto(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.ProgramShapeProto)
}

void ProgramShapeProto::SharedCtor() {
  result_ = NULL;
}

ProgramShapeProto::~ProgramShapeProto() {
  // @@protoc_insertion_point(destructor:xla.ProgramShapeProto)
  SharedDtor();
}

void ProgramShapeProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete result_;
}

void ProgramShapeProto::ArenaDtor(void* object) {
  ProgramShapeProto* _this = reinterpret_cast< ProgramShapeProto* >(object);
  (void)_this;
}
void ProgramShapeProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProgramShapeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramShapeProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramShapeProto& ProgramShapeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ProgramShapeProto.base);
  return *internal_default_instance();
}


void ProgramShapeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ProgramShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  parameter_names_.Clear();
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool ProgramShapeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ProgramShapeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.ShapeProto parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string parameter_names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_parameter_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_names(this->parameter_names_size() - 1).data(),
            static_cast<int>(this->parameter_names(this->parameter_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.ProgramShapeProto.parameter_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ProgramShapeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ProgramShapeProto)
  return false;
#undef DO_
}

void ProgramShapeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ProgramShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ShapeProto parameters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->parameters(static_cast<int>(i)),
      output);
  }

  // .xla.ShapeProto result = 2;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_result(), output);
  }

  // repeated string parameter_names = 3;
  for (int i = 0, n = this->parameter_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_names(i).data(), static_cast<int>(this->parameter_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.ProgramShapeProto.parameter_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->parameter_names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ProgramShapeProto)
}

::google::protobuf::uint8* ProgramShapeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ProgramShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.ShapeProto parameters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // .xla.ShapeProto result = 2;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_result(), deterministic, target);
  }

  // repeated string parameter_names = 3;
  for (int i = 0, n = this->parameter_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_names(i).data(), static_cast<int>(this->parameter_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.ProgramShapeProto.parameter_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->parameter_names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ProgramShapeProto)
  return target;
}

size_t ProgramShapeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ProgramShapeProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.ShapeProto parameters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // repeated string parameter_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameter_names_size());
  for (int i = 0, n = this->parameter_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->parameter_names(i));
  }

  // .xla.ShapeProto result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramShapeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ProgramShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramShapeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramShapeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ProgramShapeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ProgramShapeProto)
    MergeFrom(*source);
  }
}

void ProgramShapeProto::MergeFrom(const ProgramShapeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ProgramShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  parameter_names_.MergeFrom(from.parameter_names_);
  if (from.has_result()) {
    mutable_result()->::xla::ShapeProto::MergeFrom(from.result());
  }
}

void ProgramShapeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ProgramShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramShapeProto::CopyFrom(const ProgramShapeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ProgramShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramShapeProto::IsInitialized() const {
  return true;
}

void ProgramShapeProto::Swap(ProgramShapeProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProgramShapeProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProgramShapeProto::UnsafeArenaSwap(ProgramShapeProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProgramShapeProto::InternalSwap(ProgramShapeProto* other) {
  using std::swap;
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
  parameter_names_.InternalSwap(CastToBase(&other->parameter_names_));
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramShapeProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComputationStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputationStats::kFlopCountFieldNumber;
const int ComputationStats::kTranscendentalCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputationStats::ComputationStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ComputationStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ComputationStats)
}
ComputationStats::ComputationStats(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ComputationStats.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ComputationStats)
}
ComputationStats::ComputationStats(const ComputationStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flop_count_, &from.flop_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&transcendental_count_) -
    reinterpret_cast<char*>(&flop_count_)) + sizeof(transcendental_count_));
  // @@protoc_insertion_point(copy_constructor:xla.ComputationStats)
}

void ComputationStats::SharedCtor() {
  ::memset(&flop_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transcendental_count_) -
      reinterpret_cast<char*>(&flop_count_)) + sizeof(transcendental_count_));
}

ComputationStats::~ComputationStats() {
  // @@protoc_insertion_point(destructor:xla.ComputationStats)
  SharedDtor();
}

void ComputationStats::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ComputationStats::ArenaDtor(void* object) {
  ComputationStats* _this = reinterpret_cast< ComputationStats* >(object);
  (void)_this;
}
void ComputationStats::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ComputationStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComputationStats::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputationStats& ComputationStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ComputationStats.base);
  return *internal_default_instance();
}


void ComputationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ComputationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flop_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transcendental_count_) -
      reinterpret_cast<char*>(&flop_count_)) + sizeof(transcendental_count_));
  _internal_metadata_.Clear();
}

bool ComputationStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ComputationStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double flop_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &flop_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double transcendental_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transcendental_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ComputationStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ComputationStats)
  return false;
#undef DO_
}

void ComputationStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ComputationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double flop_count = 1;
  if (this->flop_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->flop_count(), output);
  }

  // double transcendental_count = 2;
  if (this->transcendental_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->transcendental_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ComputationStats)
}

::google::protobuf::uint8* ComputationStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ComputationStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double flop_count = 1;
  if (this->flop_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->flop_count(), target);
  }

  // double transcendental_count = 2;
  if (this->transcendental_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->transcendental_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ComputationStats)
  return target;
}

size_t ComputationStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ComputationStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double flop_count = 1;
  if (this->flop_count() != 0) {
    total_size += 1 + 8;
  }

  // double transcendental_count = 2;
  if (this->transcendental_count() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComputationStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ComputationStats)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputationStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputationStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ComputationStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ComputationStats)
    MergeFrom(*source);
  }
}

void ComputationStats::MergeFrom(const ComputationStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ComputationStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flop_count() != 0) {
    set_flop_count(from.flop_count());
  }
  if (from.transcendental_count() != 0) {
    set_transcendental_count(from.transcendental_count());
  }
}

void ComputationStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ComputationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputationStats::CopyFrom(const ComputationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ComputationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputationStats::IsInitialized() const {
  return true;
}

void ComputationStats::Swap(ComputationStats* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ComputationStats* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ComputationStats::UnsafeArenaSwap(ComputationStats* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ComputationStats::InternalSwap(ComputationStats* other) {
  using std::swap;
  swap(flop_count_, other->flop_count_);
  swap(transcendental_count_, other->transcendental_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComputationStats::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpMetadata::kOpTypeFieldNumber;
const int OpMetadata::kOpNameFieldNumber;
const int OpMetadata::kSourceFileFieldNumber;
const int OpMetadata::kSourceLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpMetadata::OpMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.OpMetadata)
}
OpMetadata::OpMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.OpMetadata)
}
OpMetadata::OpMetadata(const OpMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_type().size() > 0) {
    op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type(),
      GetArenaNoVirtual());
  }
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op_name().size() > 0) {
    op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_name(),
      GetArenaNoVirtual());
  }
  source_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_file().size() > 0) {
    source_file_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_file(),
      GetArenaNoVirtual());
  }
  source_line_ = from.source_line_;
  // @@protoc_insertion_point(copy_constructor:xla.OpMetadata)
}

void OpMetadata::SharedCtor() {
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_line_ = 0;
}

OpMetadata::~OpMetadata() {
  // @@protoc_insertion_point(destructor:xla.OpMetadata)
  SharedDtor();
}

void OpMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpMetadata::ArenaDtor(void* object) {
  OpMetadata* _this = reinterpret_cast< OpMetadata* >(object);
  (void)_this;
}
void OpMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OpMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpMetadata::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpMetadata& OpMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpMetadata.base);
  return *internal_default_instance();
}


void OpMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.OpMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  op_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  source_file_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  source_line_ = 0;
  _internal_metadata_.Clear();
}

bool OpMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.OpMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_type().data(), static_cast<int>(this->op_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.OpMetadata.op_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string op_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op_name().data(), static_cast<int>(this->op_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.OpMetadata.op_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_file().data(), static_cast<int>(this->source_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xla.OpMetadata.source_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source_line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.OpMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.OpMetadata)
  return false;
#undef DO_
}

void OpMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.OpMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_type(), output);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.op_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->op_name(), output);
  }

  // string source_file = 3;
  if (this->source_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_file().data(), static_cast<int>(this->source_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.source_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_file(), output);
  }

  // int32 source_line = 4;
  if (this->source_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->source_line(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.OpMetadata)
}

::google::protobuf::uint8* OpMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.OpMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string op_type = 1;
  if (this->op_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_type(), target);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op_name().data(), static_cast<int>(this->op_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.op_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->op_name(), target);
  }

  // string source_file = 3;
  if (this->source_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_file().data(), static_cast<int>(this->source_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xla.OpMetadata.source_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source_file(), target);
  }

  // int32 source_line = 4;
  if (this->source_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->source_line(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.OpMetadata)
  return target;
}

size_t OpMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.OpMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string op_type = 1;
  if (this->op_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_type());
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_name());
  }

  // string source_file = 3;
  if (this->source_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_file());
  }

  // int32 source_line = 4;
  if (this->source_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source_line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.OpMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OpMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.OpMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.OpMetadata)
    MergeFrom(*source);
  }
}

void OpMetadata::MergeFrom(const OpMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.OpMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type().size() > 0) {
    set_op_type(from.op_type());
  }
  if (from.op_name().size() > 0) {
    set_op_name(from.op_name());
  }
  if (from.source_file().size() > 0) {
    set_source_file(from.source_file());
  }
  if (from.source_line() != 0) {
    set_source_line(from.source_line());
  }
}

void OpMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.OpMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpMetadata::CopyFrom(const OpMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.OpMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpMetadata::IsInitialized() const {
  return true;
}

void OpMetadata::Swap(OpMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OpMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OpMetadata::UnsafeArenaSwap(OpMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OpMetadata::InternalSwap(OpMetadata* other) {
  using std::swap;
  op_type_.Swap(&other->op_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_name_.Swap(&other->op_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_file_.Swap(&other->source_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_line_, other->source_line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpMetadata::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionProfile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionProfile::kCompilationCacheHitFieldNumber;
const int ExecutionProfile::kCompileTimeMsFieldNumber;
const int ExecutionProfile::kComputeCycleCountFieldNumber;
const int ExecutionProfile::kComputeTimeNsFieldNumber;
const int ExecutionProfile::kComputeAndTransferTimeNsFieldNumber;
const int ExecutionProfile::kExecutableSizeInBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionProfile::ExecutionProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecutionProfile)
}
ExecutionProfile::ExecutionProfile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionProfile.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ExecutionProfile)
}
ExecutionProfile::ExecutionProfile(const ExecutionProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compile_time_ms_, &from.compile_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&compilation_cache_hit_) -
    reinterpret_cast<char*>(&compile_time_ms_)) + sizeof(compilation_cache_hit_));
  // @@protoc_insertion_point(copy_constructor:xla.ExecutionProfile)
}

void ExecutionProfile::SharedCtor() {
  ::memset(&compile_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compilation_cache_hit_) -
      reinterpret_cast<char*>(&compile_time_ms_)) + sizeof(compilation_cache_hit_));
}

ExecutionProfile::~ExecutionProfile() {
  // @@protoc_insertion_point(destructor:xla.ExecutionProfile)
  SharedDtor();
}

void ExecutionProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ExecutionProfile::ArenaDtor(void* object) {
  ExecutionProfile* _this = reinterpret_cast< ExecutionProfile* >(object);
  (void)_this;
}
void ExecutionProfile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExecutionProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecutionProfile::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionProfile& ExecutionProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionProfile.base);
  return *internal_default_instance();
}


void ExecutionProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecutionProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&compile_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compilation_cache_hit_) -
      reinterpret_cast<char*>(&compile_time_ms_)) + sizeof(compilation_cache_hit_));
  _internal_metadata_.Clear();
}

bool ExecutionProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecutionProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool compilation_cache_hit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &compilation_cache_hit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compile_time_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compile_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compute_cycle_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compute_cycle_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compute_time_ns = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compute_time_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compute_and_transfer_time_ns = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compute_and_transfer_time_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 executable_size_in_bytes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &executable_size_in_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecutionProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecutionProfile)
  return false;
#undef DO_
}

void ExecutionProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecutionProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool compilation_cache_hit = 1;
  if (this->compilation_cache_hit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->compilation_cache_hit(), output);
  }

  // int64 compile_time_ms = 2;
  if (this->compile_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->compile_time_ms(), output);
  }

  // int64 compute_cycle_count = 3;
  if (this->compute_cycle_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->compute_cycle_count(), output);
  }

  // int64 compute_time_ns = 4;
  if (this->compute_time_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->compute_time_ns(), output);
  }

  // int64 compute_and_transfer_time_ns = 5;
  if (this->compute_and_transfer_time_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->compute_and_transfer_time_ns(), output);
  }

  // int64 executable_size_in_bytes = 6;
  if (this->executable_size_in_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->executable_size_in_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecutionProfile)
}

::google::protobuf::uint8* ExecutionProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecutionProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool compilation_cache_hit = 1;
  if (this->compilation_cache_hit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->compilation_cache_hit(), target);
  }

  // int64 compile_time_ms = 2;
  if (this->compile_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->compile_time_ms(), target);
  }

  // int64 compute_cycle_count = 3;
  if (this->compute_cycle_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->compute_cycle_count(), target);
  }

  // int64 compute_time_ns = 4;
  if (this->compute_time_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->compute_time_ns(), target);
  }

  // int64 compute_and_transfer_time_ns = 5;
  if (this->compute_and_transfer_time_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->compute_and_transfer_time_ns(), target);
  }

  // int64 executable_size_in_bytes = 6;
  if (this->executable_size_in_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->executable_size_in_bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecutionProfile)
  return target;
}

size_t ExecutionProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecutionProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 compile_time_ms = 2;
  if (this->compile_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compile_time_ms());
  }

  // int64 compute_cycle_count = 3;
  if (this->compute_cycle_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compute_cycle_count());
  }

  // int64 compute_time_ns = 4;
  if (this->compute_time_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compute_time_ns());
  }

  // int64 compute_and_transfer_time_ns = 5;
  if (this->compute_and_transfer_time_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compute_and_transfer_time_ns());
  }

  // int64 executable_size_in_bytes = 6;
  if (this->executable_size_in_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->executable_size_in_bytes());
  }

  // bool compilation_cache_hit = 1;
  if (this->compilation_cache_hit() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecutionProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecutionProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecutionProfile)
    MergeFrom(*source);
  }
}

void ExecutionProfile::MergeFrom(const ExecutionProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecutionProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compile_time_ms() != 0) {
    set_compile_time_ms(from.compile_time_ms());
  }
  if (from.compute_cycle_count() != 0) {
    set_compute_cycle_count(from.compute_cycle_count());
  }
  if (from.compute_time_ns() != 0) {
    set_compute_time_ns(from.compute_time_ns());
  }
  if (from.compute_and_transfer_time_ns() != 0) {
    set_compute_and_transfer_time_ns(from.compute_and_transfer_time_ns());
  }
  if (from.executable_size_in_bytes() != 0) {
    set_executable_size_in_bytes(from.executable_size_in_bytes());
  }
  if (from.compilation_cache_hit() != 0) {
    set_compilation_cache_hit(from.compilation_cache_hit());
  }
}

void ExecutionProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecutionProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionProfile::CopyFrom(const ExecutionProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecutionProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionProfile::IsInitialized() const {
  return true;
}

void ExecutionProfile::Swap(ExecutionProfile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExecutionProfile* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExecutionProfile::UnsafeArenaSwap(ExecutionProfile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExecutionProfile::InternalSwap(ExecutionProfile* other) {
  using std::swap;
  swap(compile_time_ms_, other->compile_time_ms_);
  swap(compute_cycle_count_, other->compute_cycle_count_);
  swap(compute_time_ns_, other->compute_time_ns_);
  swap(compute_and_transfer_time_ns_, other->compute_and_transfer_time_ns_);
  swap(executable_size_in_bytes_, other->executable_size_in_bytes_);
  swap(compilation_cache_hit_, other->compilation_cache_hit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecutionProfile::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionHandle::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionHandle::ExecutionHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ExecutionHandle)
}
ExecutionHandle::ExecutionHandle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ExecutionHandle)
}
ExecutionHandle::ExecutionHandle(const ExecutionHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:xla.ExecutionHandle)
}

void ExecutionHandle::SharedCtor() {
  handle_ = GOOGLE_LONGLONG(0);
}

ExecutionHandle::~ExecutionHandle() {
  // @@protoc_insertion_point(destructor:xla.ExecutionHandle)
  SharedDtor();
}

void ExecutionHandle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ExecutionHandle::ArenaDtor(void* object) {
  ExecutionHandle* _this = reinterpret_cast< ExecutionHandle* >(object);
  (void)_this;
}
void ExecutionHandle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExecutionHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecutionHandle::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionHandle& ExecutionHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ExecutionHandle.base);
  return *internal_default_instance();
}


void ExecutionHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ExecutionHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExecutionHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ExecutionHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ExecutionHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ExecutionHandle)
  return false;
#undef DO_
}

void ExecutionHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ExecutionHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ExecutionHandle)
}

::google::protobuf::uint8* ExecutionHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ExecutionHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ExecutionHandle)
  return target;
}

size_t ExecutionHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ExecutionHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ExecutionHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ExecutionHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ExecutionHandle)
    MergeFrom(*source);
  }
}

void ExecutionHandle::MergeFrom(const ExecutionHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ExecutionHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
}

void ExecutionHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ExecutionHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionHandle::CopyFrom(const ExecutionHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ExecutionHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionHandle::IsInitialized() const {
  return true;
}

void ExecutionHandle::Swap(ExecutionHandle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExecutionHandle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExecutionHandle::UnsafeArenaSwap(ExecutionHandle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExecutionHandle::InternalSwap(ExecutionHandle* other) {
  using std::swap;
  swap(handle_, other->handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecutionHandle::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalDataHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalDataHandle::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalDataHandle::GlobalDataHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GlobalDataHandle)
}
GlobalDataHandle::GlobalDataHandle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.GlobalDataHandle)
}
GlobalDataHandle::GlobalDataHandle(const GlobalDataHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:xla.GlobalDataHandle)
}

void GlobalDataHandle::SharedCtor() {
  handle_ = GOOGLE_LONGLONG(0);
}

GlobalDataHandle::~GlobalDataHandle() {
  // @@protoc_insertion_point(destructor:xla.GlobalDataHandle)
  SharedDtor();
}

void GlobalDataHandle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GlobalDataHandle::ArenaDtor(void* object) {
  GlobalDataHandle* _this = reinterpret_cast< GlobalDataHandle* >(object);
  (void)_this;
}
void GlobalDataHandle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GlobalDataHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GlobalDataHandle::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalDataHandle& GlobalDataHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GlobalDataHandle.base);
  return *internal_default_instance();
}


void GlobalDataHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GlobalDataHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GlobalDataHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GlobalDataHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GlobalDataHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GlobalDataHandle)
  return false;
#undef DO_
}

void GlobalDataHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GlobalDataHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GlobalDataHandle)
}

::google::protobuf::uint8* GlobalDataHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GlobalDataHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GlobalDataHandle)
  return target;
}

size_t GlobalDataHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GlobalDataHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalDataHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GlobalDataHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalDataHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalDataHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GlobalDataHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GlobalDataHandle)
    MergeFrom(*source);
  }
}

void GlobalDataHandle::MergeFrom(const GlobalDataHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GlobalDataHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
}

void GlobalDataHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GlobalDataHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalDataHandle::CopyFrom(const GlobalDataHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GlobalDataHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalDataHandle::IsInitialized() const {
  return true;
}

void GlobalDataHandle::Swap(GlobalDataHandle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GlobalDataHandle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GlobalDataHandle::UnsafeArenaSwap(GlobalDataHandle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GlobalDataHandle::InternalSwap(GlobalDataHandle* other) {
  using std::swap;
  swap(handle_, other->handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GlobalDataHandle::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceHandle::kHandleFieldNumber;
const int DeviceHandle::kDeviceCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceHandle::DeviceHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeviceHandle)
}
DeviceHandle::DeviceHandle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DeviceHandle)
}
DeviceHandle::DeviceHandle(const DeviceHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_count_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(device_count_));
  // @@protoc_insertion_point(copy_constructor:xla.DeviceHandle)
}

void DeviceHandle::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_count_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(device_count_));
}

DeviceHandle::~DeviceHandle() {
  // @@protoc_insertion_point(destructor:xla.DeviceHandle)
  SharedDtor();
}

void DeviceHandle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeviceHandle::ArenaDtor(void* object) {
  DeviceHandle* _this = reinterpret_cast< DeviceHandle* >(object);
  (void)_this;
}
void DeviceHandle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeviceHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceHandle::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceHandle& DeviceHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceHandle.base);
  return *internal_default_instance();
}


void DeviceHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeviceHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_count_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(device_count_));
  _internal_metadata_.Clear();
}

bool DeviceHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeviceHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeviceHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeviceHandle)
  return false;
#undef DO_
}

void DeviceHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeviceHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  // int64 device_count = 2;
  if (this->device_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->device_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeviceHandle)
}

::google::protobuf::uint8* DeviceHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeviceHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  // int64 device_count = 2;
  if (this->device_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->device_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeviceHandle)
  return target;
}

size_t DeviceHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeviceHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  // int64 device_count = 2;
  if (this->device_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeviceHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeviceHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeviceHandle)
    MergeFrom(*source);
  }
}

void DeviceHandle::MergeFrom(const DeviceHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeviceHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.device_count() != 0) {
    set_device_count(from.device_count());
  }
}

void DeviceHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeviceHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceHandle::CopyFrom(const DeviceHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeviceHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceHandle::IsInitialized() const {
  return true;
}

void DeviceHandle::Swap(DeviceHandle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceHandle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceHandle::UnsafeArenaSwap(DeviceHandle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceHandle::InternalSwap(DeviceHandle* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(device_count_, other->device_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceHandle::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelHandle::kHandleFieldNumber;
const int ChannelHandle::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelHandle::ChannelHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ChannelHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ChannelHandle)
}
ChannelHandle::ChannelHandle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ChannelHandle.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ChannelHandle)
}
ChannelHandle::ChannelHandle(const ChannelHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:xla.ChannelHandle)
}

void ChannelHandle::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(type_));
}

ChannelHandle::~ChannelHandle() {
  // @@protoc_insertion_point(destructor:xla.ChannelHandle)
  SharedDtor();
}

void ChannelHandle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ChannelHandle::ArenaDtor(void* object) {
  ChannelHandle* _this = reinterpret_cast< ChannelHandle* >(object);
  (void)_this;
}
void ChannelHandle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ChannelHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelHandle::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelHandle& ChannelHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ChannelHandle.base);
  return *internal_default_instance();
}


void ChannelHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ChannelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ChannelHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ChannelHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ChannelHandle.ChannelType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::xla::ChannelHandle_ChannelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ChannelHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ChannelHandle)
  return false;
#undef DO_
}

void ChannelHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ChannelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  // .xla.ChannelHandle.ChannelType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ChannelHandle)
}

::google::protobuf::uint8* ChannelHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ChannelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  // .xla.ChannelHandle.ChannelType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ChannelHandle)
  return target;
}

size_t ChannelHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ChannelHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  // .xla.ChannelHandle.ChannelType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ChannelHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ChannelHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ChannelHandle)
    MergeFrom(*source);
  }
}

void ChannelHandle::MergeFrom(const ChannelHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ChannelHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ChannelHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ChannelHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelHandle::CopyFrom(const ChannelHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ChannelHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelHandle::IsInitialized() const {
  return true;
}

void ChannelHandle::Swap(ChannelHandle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ChannelHandle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ChannelHandle::UnsafeArenaSwap(ChannelHandle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ChannelHandle::InternalSwap(ChannelHandle* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelHandle::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAssignmentProto_ComputationDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAssignmentProto_ComputationDevice::kReplicaDeviceIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAssignmentProto_ComputationDevice::DeviceAssignmentProto_ComputationDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto_ComputationDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeviceAssignmentProto.ComputationDevice)
}
DeviceAssignmentProto_ComputationDevice::DeviceAssignmentProto_ComputationDevice(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  replica_device_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto_ComputationDevice.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DeviceAssignmentProto.ComputationDevice)
}
DeviceAssignmentProto_ComputationDevice::DeviceAssignmentProto_ComputationDevice(const DeviceAssignmentProto_ComputationDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_device_ids_(from.replica_device_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.DeviceAssignmentProto.ComputationDevice)
}

void DeviceAssignmentProto_ComputationDevice::SharedCtor() {
}

DeviceAssignmentProto_ComputationDevice::~DeviceAssignmentProto_ComputationDevice() {
  // @@protoc_insertion_point(destructor:xla.DeviceAssignmentProto.ComputationDevice)
  SharedDtor();
}

void DeviceAssignmentProto_ComputationDevice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeviceAssignmentProto_ComputationDevice::ArenaDtor(void* object) {
  DeviceAssignmentProto_ComputationDevice* _this = reinterpret_cast< DeviceAssignmentProto_ComputationDevice* >(object);
  (void)_this;
}
void DeviceAssignmentProto_ComputationDevice::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeviceAssignmentProto_ComputationDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAssignmentProto_ComputationDevice::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAssignmentProto_ComputationDevice& DeviceAssignmentProto_ComputationDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto_ComputationDevice.base);
  return *internal_default_instance();
}


void DeviceAssignmentProto_ComputationDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeviceAssignmentProto.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_device_ids_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceAssignmentProto_ComputationDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeviceAssignmentProto.ComputationDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 replica_device_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_replica_device_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_replica_device_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeviceAssignmentProto.ComputationDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeviceAssignmentProto.ComputationDevice)
  return false;
#undef DO_
}

void DeviceAssignmentProto_ComputationDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeviceAssignmentProto.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 replica_device_ids = 1;
  if (this->replica_device_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _replica_device_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->replica_device_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->replica_device_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeviceAssignmentProto.ComputationDevice)
}

::google::protobuf::uint8* DeviceAssignmentProto_ComputationDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeviceAssignmentProto.ComputationDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 replica_device_ids = 1;
  if (this->replica_device_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _replica_device_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->replica_device_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeviceAssignmentProto.ComputationDevice)
  return target;
}

size_t DeviceAssignmentProto_ComputationDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeviceAssignmentProto.ComputationDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 replica_device_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->replica_device_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _replica_device_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAssignmentProto_ComputationDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeviceAssignmentProto.ComputationDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAssignmentProto_ComputationDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAssignmentProto_ComputationDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeviceAssignmentProto.ComputationDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeviceAssignmentProto.ComputationDevice)
    MergeFrom(*source);
  }
}

void DeviceAssignmentProto_ComputationDevice::MergeFrom(const DeviceAssignmentProto_ComputationDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeviceAssignmentProto.ComputationDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_device_ids_.MergeFrom(from.replica_device_ids_);
}

void DeviceAssignmentProto_ComputationDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeviceAssignmentProto.ComputationDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAssignmentProto_ComputationDevice::CopyFrom(const DeviceAssignmentProto_ComputationDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeviceAssignmentProto.ComputationDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAssignmentProto_ComputationDevice::IsInitialized() const {
  return true;
}

void DeviceAssignmentProto_ComputationDevice::Swap(DeviceAssignmentProto_ComputationDevice* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceAssignmentProto_ComputationDevice* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceAssignmentProto_ComputationDevice::UnsafeArenaSwap(DeviceAssignmentProto_ComputationDevice* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceAssignmentProto_ComputationDevice::InternalSwap(DeviceAssignmentProto_ComputationDevice* other) {
  using std::swap;
  replica_device_ids_.InternalSwap(&other->replica_device_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAssignmentProto_ComputationDevice::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAssignmentProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAssignmentProto::kReplicaCountFieldNumber;
const int DeviceAssignmentProto::kComputationCountFieldNumber;
const int DeviceAssignmentProto::kComputationDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAssignmentProto::DeviceAssignmentProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DeviceAssignmentProto)
}
DeviceAssignmentProto::DeviceAssignmentProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  computation_devices_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DeviceAssignmentProto)
}
DeviceAssignmentProto::DeviceAssignmentProto(const DeviceAssignmentProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      computation_devices_(from.computation_devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&replica_count_, &from.replica_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&computation_count_) -
    reinterpret_cast<char*>(&replica_count_)) + sizeof(computation_count_));
  // @@protoc_insertion_point(copy_constructor:xla.DeviceAssignmentProto)
}

void DeviceAssignmentProto::SharedCtor() {
  ::memset(&replica_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&computation_count_) -
      reinterpret_cast<char*>(&replica_count_)) + sizeof(computation_count_));
}

DeviceAssignmentProto::~DeviceAssignmentProto() {
  // @@protoc_insertion_point(destructor:xla.DeviceAssignmentProto)
  SharedDtor();
}

void DeviceAssignmentProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeviceAssignmentProto::ArenaDtor(void* object) {
  DeviceAssignmentProto* _this = reinterpret_cast< DeviceAssignmentProto* >(object);
  (void)_this;
}
void DeviceAssignmentProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeviceAssignmentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAssignmentProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAssignmentProto& DeviceAssignmentProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DeviceAssignmentProto.base);
  return *internal_default_instance();
}


void DeviceAssignmentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DeviceAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  computation_devices_.Clear();
  ::memset(&replica_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&computation_count_) -
      reinterpret_cast<char*>(&replica_count_)) + sizeof(computation_count_));
  _internal_metadata_.Clear();
}

bool DeviceAssignmentProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DeviceAssignmentProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 replica_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 computation_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &computation_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_computation_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DeviceAssignmentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DeviceAssignmentProto)
  return false;
#undef DO_
}

void DeviceAssignmentProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DeviceAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 replica_count = 1;
  if (this->replica_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->replica_count(), output);
  }

  // int32 computation_count = 2;
  if (this->computation_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->computation_count(), output);
  }

  // repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->computation_devices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DeviceAssignmentProto)
}

::google::protobuf::uint8* DeviceAssignmentProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DeviceAssignmentProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 replica_count = 1;
  if (this->replica_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->replica_count(), target);
  }

  // int32 computation_count = 2;
  if (this->computation_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->computation_count(), target);
  }

  // repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->computation_devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->computation_devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DeviceAssignmentProto)
  return target;
}

size_t DeviceAssignmentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DeviceAssignmentProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->computation_devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->computation_devices(static_cast<int>(i)));
    }
  }

  // int32 replica_count = 1;
  if (this->replica_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replica_count());
  }

  // int32 computation_count = 2;
  if (this->computation_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->computation_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAssignmentProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DeviceAssignmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAssignmentProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAssignmentProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DeviceAssignmentProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DeviceAssignmentProto)
    MergeFrom(*source);
  }
}

void DeviceAssignmentProto::MergeFrom(const DeviceAssignmentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DeviceAssignmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  computation_devices_.MergeFrom(from.computation_devices_);
  if (from.replica_count() != 0) {
    set_replica_count(from.replica_count());
  }
  if (from.computation_count() != 0) {
    set_computation_count(from.computation_count());
  }
}

void DeviceAssignmentProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DeviceAssignmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAssignmentProto::CopyFrom(const DeviceAssignmentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DeviceAssignmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAssignmentProto::IsInitialized() const {
  return true;
}

void DeviceAssignmentProto::Swap(DeviceAssignmentProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceAssignmentProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceAssignmentProto::UnsafeArenaSwap(DeviceAssignmentProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceAssignmentProto::InternalSwap(DeviceAssignmentProto* other) {
  using std::swap;
  CastToBase(&computation_devices_)->InternalSwap(CastToBase(&other->computation_devices_));
  swap(replica_count_, other->replica_count_);
  swap(computation_count_, other->computation_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAssignmentProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LiteralProto::InitAsDefaultInstance() {
  ::xla::_LiteralProto_default_instance_._instance.get_mutable()->shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void LiteralProto::unsafe_arena_set_allocated_shape(
    ::xla::ShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.LiteralProto.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiteralProto::kShapeFieldNumber;
const int LiteralProto::kPredsFieldNumber;
const int LiteralProto::kS8SFieldNumber;
const int LiteralProto::kU8SFieldNumber;
const int LiteralProto::kS32SFieldNumber;
const int LiteralProto::kS64SFieldNumber;
const int LiteralProto::kU32SFieldNumber;
const int LiteralProto::kU64SFieldNumber;
const int LiteralProto::kF32SFieldNumber;
const int LiteralProto::kF64SFieldNumber;
const int LiteralProto::kC64SFieldNumber;
const int LiteralProto::kTupleLiteralsFieldNumber;
const int LiteralProto::kF16SFieldNumber;
const int LiteralProto::kBf16SFieldNumber;
const int LiteralProto::kU16SFieldNumber;
const int LiteralProto::kS16SFieldNumber;
const int LiteralProto::kSparseIndicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiteralProto::LiteralProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.LiteralProto)
}
LiteralProto::LiteralProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  preds_(arena),
  s32s_(arena),
  s64s_(arena),
  u32s_(arena),
  u64s_(arena),
  f32s_(arena),
  f64s_(arena),
  tuple_literals_(arena),
  c64s_(arena),
  sparse_indices_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LiteralProto)
}
LiteralProto::LiteralProto(const LiteralProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      preds_(from.preds_),
      s32s_(from.s32s_),
      s64s_(from.s64s_),
      u32s_(from.u32s_),
      u64s_(from.u64s_),
      f32s_(from.f32s_),
      f64s_(from.f64s_),
      tuple_literals_(from.tuple_literals_),
      c64s_(from.c64s_),
      sparse_indices_(from.sparse_indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  u8s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.u8s().size() > 0) {
    u8s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u8s(),
      GetArenaNoVirtual());
  }
  f16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.f16s().size() > 0) {
    f16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f16s(),
      GetArenaNoVirtual());
  }
  bf16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bf16s().size() > 0) {
    bf16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bf16s(),
      GetArenaNoVirtual());
  }
  s8s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.s8s().size() > 0) {
    s8s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s8s(),
      GetArenaNoVirtual());
  }
  u16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.u16s().size() > 0) {
    u16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u16s(),
      GetArenaNoVirtual());
  }
  s16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.s16s().size() > 0) {
    s16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s16s(),
      GetArenaNoVirtual());
  }
  if (from.has_shape()) {
    shape_ = new ::xla::ShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xla.LiteralProto)
}

void LiteralProto::SharedCtor() {
  u8s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bf16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s8s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s16s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shape_ = NULL;
}

LiteralProto::~LiteralProto() {
  // @@protoc_insertion_point(destructor:xla.LiteralProto)
  SharedDtor();
}

void LiteralProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  u8s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f16s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bf16s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s8s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u16s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s16s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void LiteralProto::ArenaDtor(void* object) {
  LiteralProto* _this = reinterpret_cast< LiteralProto* >(object);
  (void)_this;
}
void LiteralProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LiteralProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LiteralProto::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiteralProto& LiteralProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_LiteralProto.base);
  return *internal_default_instance();
}


void LiteralProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LiteralProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preds_.Clear();
  s32s_.Clear();
  s64s_.Clear();
  u32s_.Clear();
  u64s_.Clear();
  f32s_.Clear();
  f64s_.Clear();
  tuple_literals_.Clear();
  c64s_.Clear();
  sparse_indices_.Clear();
  u8s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  f16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  bf16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  s8s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  u16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  s16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  _internal_metadata_.Clear();
}

bool LiteralProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.LiteralProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.ShapeProto shape = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool preds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_preds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_preds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes u8s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_u8s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 s32s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_s32s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_s32s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 s64s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_s64s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_s64s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u32s = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u32s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_u32s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 u64s = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_u64s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_u64s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float f32s = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_f32s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_f32s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double f64s = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_f64s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 74u, input, this->mutable_f64s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.LiteralProto tuple_literals = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuple_literals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes f16s = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_f16s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float c64s = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_c64s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 98u, input, this->mutable_c64s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bf16s = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bf16s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 sparse_indices = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_sparse_indices())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 114u, input, this->mutable_sparse_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes s8s = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s8s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes u16s = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_u16s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes s16s = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s16s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.LiteralProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.LiteralProto)
  return false;
#undef DO_
}

void LiteralProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.LiteralProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shape(), output);
  }

  // repeated bool preds = 2;
  if (this->preds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _preds_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->preds().data(), this->preds_size(), output);
  }

  // bytes u8s = 3;
  if (this->u8s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->u8s(), output);
  }

  // repeated int32 s32s = 4;
  if (this->s32s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _s32s_cached_byte_size_));
  }
  for (int i = 0, n = this->s32s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->s32s(i), output);
  }

  // repeated int64 s64s = 5;
  if (this->s64s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _s64s_cached_byte_size_));
  }
  for (int i = 0, n = this->s64s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->s64s(i), output);
  }

  // repeated uint32 u32s = 6;
  if (this->u32s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _u32s_cached_byte_size_));
  }
  for (int i = 0, n = this->u32s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->u32s(i), output);
  }

  // repeated uint64 u64s = 7;
  if (this->u64s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _u64s_cached_byte_size_));
  }
  for (int i = 0, n = this->u64s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->u64s(i), output);
  }

  // repeated float f32s = 8;
  if (this->f32s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _f32s_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->f32s().data(), this->f32s_size(), output);
  }

  // repeated double f64s = 9;
  if (this->f64s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _f64s_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->f64s().data(), this->f64s_size(), output);
  }

  // repeated .xla.LiteralProto tuple_literals = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_literals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->tuple_literals(static_cast<int>(i)),
      output);
  }

  // bytes f16s = 11;
  if (this->f16s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->f16s(), output);
  }

  // repeated float c64s = 12;
  if (this->c64s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _c64s_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->c64s().data(), this->c64s_size(), output);
  }

  // bytes bf16s = 13;
  if (this->bf16s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->bf16s(), output);
  }

  // repeated int64 sparse_indices = 14;
  if (this->sparse_indices_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sparse_indices_cached_byte_size_));
  }
  for (int i = 0, n = this->sparse_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->sparse_indices(i), output);
  }

  // bytes s8s = 15;
  if (this->s8s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->s8s(), output);
  }

  // bytes u16s = 16;
  if (this->u16s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->u16s(), output);
  }

  // bytes s16s = 17;
  if (this->s16s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->s16s(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.LiteralProto)
}

::google::protobuf::uint8* LiteralProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.LiteralProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shape(), deterministic, target);
  }

  // repeated bool preds = 2;
  if (this->preds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _preds_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->preds_, target);
  }

  // bytes u8s = 3;
  if (this->u8s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->u8s(), target);
  }

  // repeated int32 s32s = 4;
  if (this->s32s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _s32s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->s32s_, target);
  }

  // repeated int64 s64s = 5;
  if (this->s64s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _s64s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->s64s_, target);
  }

  // repeated uint32 u32s = 6;
  if (this->u32s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _u32s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->u32s_, target);
  }

  // repeated uint64 u64s = 7;
  if (this->u64s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _u64s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->u64s_, target);
  }

  // repeated float f32s = 8;
  if (this->f32s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _f32s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->f32s_, target);
  }

  // repeated double f64s = 9;
  if (this->f64s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _f64s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->f64s_, target);
  }

  // repeated .xla.LiteralProto tuple_literals = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_literals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tuple_literals(static_cast<int>(i)), deterministic, target);
  }

  // bytes f16s = 11;
  if (this->f16s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->f16s(), target);
  }

  // repeated float c64s = 12;
  if (this->c64s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _c64s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->c64s_, target);
  }

  // bytes bf16s = 13;
  if (this->bf16s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->bf16s(), target);
  }

  // repeated int64 sparse_indices = 14;
  if (this->sparse_indices_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sparse_indices_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->sparse_indices_, target);
  }

  // bytes s8s = 15;
  if (this->s8s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->s8s(), target);
  }

  // bytes u16s = 16;
  if (this->u16s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->u16s(), target);
  }

  // bytes s16s = 17;
  if (this->s16s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->s16s(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.LiteralProto)
  return target;
}

size_t LiteralProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.LiteralProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool preds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->preds_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _preds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 s32s = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->s32s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _s32s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 s64s = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->s64s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _s64s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 u32s = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->u32s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _u32s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 u64s = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->u64s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _u64s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float f32s = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->f32s_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _f32s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double f64s = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->f64s_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _f64s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.LiteralProto tuple_literals = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tuple_literals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuple_literals(static_cast<int>(i)));
    }
  }

  // repeated float c64s = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->c64s_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _c64s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 sparse_indices = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->sparse_indices_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sparse_indices_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes u8s = 3;
  if (this->u8s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->u8s());
  }

  // bytes f16s = 11;
  if (this->f16s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->f16s());
  }

  // bytes bf16s = 13;
  if (this->bf16s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bf16s());
  }

  // bytes s8s = 15;
  if (this->s8s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->s8s());
  }

  // bytes u16s = 16;
  if (this->u16s().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->u16s());
  }

  // bytes s16s = 17;
  if (this->s16s().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->s16s());
  }

  // .xla.ShapeProto shape = 1;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LiteralProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.LiteralProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LiteralProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiteralProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.LiteralProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.LiteralProto)
    MergeFrom(*source);
  }
}

void LiteralProto::MergeFrom(const LiteralProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.LiteralProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  preds_.MergeFrom(from.preds_);
  s32s_.MergeFrom(from.s32s_);
  s64s_.MergeFrom(from.s64s_);
  u32s_.MergeFrom(from.u32s_);
  u64s_.MergeFrom(from.u64s_);
  f32s_.MergeFrom(from.f32s_);
  f64s_.MergeFrom(from.f64s_);
  tuple_literals_.MergeFrom(from.tuple_literals_);
  c64s_.MergeFrom(from.c64s_);
  sparse_indices_.MergeFrom(from.sparse_indices_);
  if (from.u8s().size() > 0) {
    set_u8s(from.u8s());
  }
  if (from.f16s().size() > 0) {
    set_f16s(from.f16s());
  }
  if (from.bf16s().size() > 0) {
    set_bf16s(from.bf16s());
  }
  if (from.s8s().size() > 0) {
    set_s8s(from.s8s());
  }
  if (from.u16s().size() > 0) {
    set_u16s(from.u16s());
  }
  if (from.s16s().size() > 0) {
    set_s16s(from.s16s());
  }
  if (from.has_shape()) {
    mutable_shape()->::xla::ShapeProto::MergeFrom(from.shape());
  }
}

void LiteralProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.LiteralProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiteralProto::CopyFrom(const LiteralProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LiteralProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiteralProto::IsInitialized() const {
  return true;
}

void LiteralProto::Swap(LiteralProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LiteralProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LiteralProto::UnsafeArenaSwap(LiteralProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LiteralProto::InternalSwap(LiteralProto* other) {
  using std::swap;
  preds_.InternalSwap(&other->preds_);
  s32s_.InternalSwap(&other->s32s_);
  s64s_.InternalSwap(&other->s64s_);
  u32s_.InternalSwap(&other->u32s_);
  u64s_.InternalSwap(&other->u64s_);
  f32s_.InternalSwap(&other->f32s_);
  f64s_.InternalSwap(&other->f64s_);
  CastToBase(&tuple_literals_)->InternalSwap(CastToBase(&other->tuple_literals_));
  c64s_.InternalSwap(&other->c64s_);
  sparse_indices_.InternalSwap(&other->sparse_indices_);
  u8s_.Swap(&other->u8s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  f16s_.Swap(&other->f16s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bf16s_.Swap(&other->bf16s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s8s_.Swap(&other->s8s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  u16s_.Swap(&other->u16s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s16s_.Swap(&other->s16s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LiteralProto::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WindowDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WindowDimension::kSizeFieldNumber;
const int WindowDimension::kStrideFieldNumber;
const int WindowDimension::kPaddingLowFieldNumber;
const int WindowDimension::kPaddingHighFieldNumber;
const int WindowDimension::kWindowDilationFieldNumber;
const int WindowDimension::kBaseDilationFieldNumber;
const int WindowDimension::kWindowReversalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WindowDimension::WindowDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_WindowDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.WindowDimension)
}
WindowDimension::WindowDimension(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_WindowDimension.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.WindowDimension)
}
WindowDimension::WindowDimension(const WindowDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&window_reversal_) -
    reinterpret_cast<char*>(&size_)) + sizeof(window_reversal_));
  // @@protoc_insertion_point(copy_constructor:xla.WindowDimension)
}

void WindowDimension::SharedCtor() {
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&window_reversal_) -
      reinterpret_cast<char*>(&size_)) + sizeof(window_reversal_));
}

WindowDimension::~WindowDimension() {
  // @@protoc_insertion_point(destructor:xla.WindowDimension)
  SharedDtor();
}

void WindowDimension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void WindowDimension::ArenaDtor(void* object) {
  WindowDimension* _this = reinterpret_cast< WindowDimension* >(object);
  (void)_this;
}
void WindowDimension::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WindowDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WindowDimension::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WindowDimension& WindowDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_WindowDimension.base);
  return *internal_default_instance();
}


void WindowDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.WindowDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&window_reversal_) -
      reinterpret_cast<char*>(&size_)) + sizeof(window_reversal_));
  _internal_metadata_.Clear();
}

bool WindowDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.WindowDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stride = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 padding_low = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &padding_low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 padding_high = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &padding_high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 window_dilation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &window_dilation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 base_dilation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &base_dilation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool window_reversal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &window_reversal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.WindowDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.WindowDimension)
  return false;
#undef DO_
}

void WindowDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.WindowDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->size(), output);
  }

  // int64 stride = 2;
  if (this->stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->stride(), output);
  }

  // int64 padding_low = 3;
  if (this->padding_low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->padding_low(), output);
  }

  // int64 padding_high = 4;
  if (this->padding_high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->padding_high(), output);
  }

  // int64 window_dilation = 5;
  if (this->window_dilation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->window_dilation(), output);
  }

  // int64 base_dilation = 6;
  if (this->base_dilation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->base_dilation(), output);
  }

  // bool window_reversal = 7;
  if (this->window_reversal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->window_reversal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.WindowDimension)
}

::google::protobuf::uint8* WindowDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.WindowDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->size(), target);
  }

  // int64 stride = 2;
  if (this->stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->stride(), target);
  }

  // int64 padding_low = 3;
  if (this->padding_low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->padding_low(), target);
  }

  // int64 padding_high = 4;
  if (this->padding_high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->padding_high(), target);
  }

  // int64 window_dilation = 5;
  if (this->window_dilation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->window_dilation(), target);
  }

  // int64 base_dilation = 6;
  if (this->base_dilation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->base_dilation(), target);
  }

  // bool window_reversal = 7;
  if (this->window_reversal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->window_reversal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.WindowDimension)
  return target;
}

size_t WindowDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.WindowDimension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // int64 stride = 2;
  if (this->stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stride());
  }

  // int64 padding_low = 3;
  if (this->padding_low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->padding_low());
  }

  // int64 padding_high = 4;
  if (this->padding_high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->padding_high());
  }

  // int64 window_dilation = 5;
  if (this->window_dilation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->window_dilation());
  }

  // int64 base_dilation = 6;
  if (this->base_dilation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->base_dilation());
  }

  // bool window_reversal = 7;
  if (this->window_reversal() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.WindowDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WindowDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.WindowDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.WindowDimension)
    MergeFrom(*source);
  }
}

void WindowDimension::MergeFrom(const WindowDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.WindowDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.stride() != 0) {
    set_stride(from.stride());
  }
  if (from.padding_low() != 0) {
    set_padding_low(from.padding_low());
  }
  if (from.padding_high() != 0) {
    set_padding_high(from.padding_high());
  }
  if (from.window_dilation() != 0) {
    set_window_dilation(from.window_dilation());
  }
  if (from.base_dilation() != 0) {
    set_base_dilation(from.base_dilation());
  }
  if (from.window_reversal() != 0) {
    set_window_reversal(from.window_reversal());
  }
}

void WindowDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.WindowDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowDimension::CopyFrom(const WindowDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.WindowDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowDimension::IsInitialized() const {
  return true;
}

void WindowDimension::Swap(WindowDimension* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WindowDimension* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WindowDimension::UnsafeArenaSwap(WindowDimension* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WindowDimension::InternalSwap(WindowDimension* other) {
  using std::swap;
  swap(size_, other->size_);
  swap(stride_, other->stride_);
  swap(padding_low_, other->padding_low_);
  swap(padding_high_, other->padding_high_);
  swap(window_dilation_, other->window_dilation_);
  swap(base_dilation_, other->base_dilation_);
  swap(window_reversal_, other->window_reversal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WindowDimension::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Window::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Window::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Window::Window()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_Window.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.Window)
}
Window::Window(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dimensions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_Window.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.Window)
}
Window::Window(const Window& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.Window)
}

void Window::SharedCtor() {
}

Window::~Window() {
  // @@protoc_insertion_point(destructor:xla.Window)
  SharedDtor();
}

void Window::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Window::ArenaDtor(void* object) {
  Window* _this = reinterpret_cast< Window* >(object);
  (void)_this;
}
void Window::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Window::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Window::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Window& Window::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_Window.base);
  return *internal_default_instance();
}


void Window::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear();
}

bool Window::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.Window)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.WindowDimension dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.Window)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.Window)
  return false;
#undef DO_
}

void Window::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.WindowDimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.Window)
}

::google::protobuf::uint8* Window::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.WindowDimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dimensions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.Window)
  return target;
}

size_t Window::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.Window)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.WindowDimension dimensions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Window::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.Window)
  GOOGLE_DCHECK_NE(&from, this);
  const Window* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Window>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.Window)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.Window)
    MergeFrom(*source);
  }
}

void Window::MergeFrom(const Window& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.Window)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
}

void Window::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Window::CopyFrom(const Window& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Window::IsInitialized() const {
  return true;
}

void Window::Swap(Window* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Window* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Window::UnsafeArenaSwap(Window* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Window::InternalSwap(Window* other) {
  using std::swap;
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Window::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GatherDimensionNumbers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatherDimensionNumbers::kOffsetDimsFieldNumber;
const int GatherDimensionNumbers::kCollapsedSliceDimsFieldNumber;
const int GatherDimensionNumbers::kStartIndexMapFieldNumber;
const int GatherDimensionNumbers::kIndexVectorDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatherDimensionNumbers::GatherDimensionNumbers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GatherDimensionNumbers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.GatherDimensionNumbers)
}
GatherDimensionNumbers::GatherDimensionNumbers(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  offset_dims_(arena),
  collapsed_slice_dims_(arena),
  start_index_map_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GatherDimensionNumbers.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.GatherDimensionNumbers)
}
GatherDimensionNumbers::GatherDimensionNumbers(const GatherDimensionNumbers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      offset_dims_(from.offset_dims_),
      collapsed_slice_dims_(from.collapsed_slice_dims_),
      start_index_map_(from.start_index_map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_vector_dim_ = from.index_vector_dim_;
  // @@protoc_insertion_point(copy_constructor:xla.GatherDimensionNumbers)
}

void GatherDimensionNumbers::SharedCtor() {
  index_vector_dim_ = GOOGLE_LONGLONG(0);
}

GatherDimensionNumbers::~GatherDimensionNumbers() {
  // @@protoc_insertion_point(destructor:xla.GatherDimensionNumbers)
  SharedDtor();
}

void GatherDimensionNumbers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GatherDimensionNumbers::ArenaDtor(void* object) {
  GatherDimensionNumbers* _this = reinterpret_cast< GatherDimensionNumbers* >(object);
  (void)_this;
}
void GatherDimensionNumbers::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GatherDimensionNumbers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GatherDimensionNumbers::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatherDimensionNumbers& GatherDimensionNumbers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_GatherDimensionNumbers.base);
  return *internal_default_instance();
}


void GatherDimensionNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.GatherDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offset_dims_.Clear();
  collapsed_slice_dims_.Clear();
  start_index_map_.Clear();
  index_vector_dim_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GatherDimensionNumbers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.GatherDimensionNumbers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 offset_dims = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_offset_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_offset_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 collapsed_slice_dims = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_collapsed_slice_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_collapsed_slice_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 start_index_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_start_index_map())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_start_index_map())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index_vector_dim = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_vector_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.GatherDimensionNumbers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.GatherDimensionNumbers)
  return false;
#undef DO_
}

void GatherDimensionNumbers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.GatherDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 offset_dims = 1;
  if (this->offset_dims_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _offset_dims_cached_byte_size_));
  }
  for (int i = 0, n = this->offset_dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->offset_dims(i), output);
  }

  // repeated int64 collapsed_slice_dims = 2;
  if (this->collapsed_slice_dims_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _collapsed_slice_dims_cached_byte_size_));
  }
  for (int i = 0, n = this->collapsed_slice_dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->collapsed_slice_dims(i), output);
  }

  // repeated int64 start_index_map = 3;
  if (this->start_index_map_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _start_index_map_cached_byte_size_));
  }
  for (int i = 0, n = this->start_index_map_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->start_index_map(i), output);
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->index_vector_dim(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.GatherDimensionNumbers)
}

::google::protobuf::uint8* GatherDimensionNumbers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.GatherDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 offset_dims = 1;
  if (this->offset_dims_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _offset_dims_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->offset_dims_, target);
  }

  // repeated int64 collapsed_slice_dims = 2;
  if (this->collapsed_slice_dims_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _collapsed_slice_dims_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->collapsed_slice_dims_, target);
  }

  // repeated int64 start_index_map = 3;
  if (this->start_index_map_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _start_index_map_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->start_index_map_, target);
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->index_vector_dim(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.GatherDimensionNumbers)
  return target;
}

size_t GatherDimensionNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.GatherDimensionNumbers)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 offset_dims = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->offset_dims_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _offset_dims_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 collapsed_slice_dims = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->collapsed_slice_dims_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _collapsed_slice_dims_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 start_index_map = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->start_index_map_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _start_index_map_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index_vector_dim());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GatherDimensionNumbers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.GatherDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  const GatherDimensionNumbers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatherDimensionNumbers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.GatherDimensionNumbers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.GatherDimensionNumbers)
    MergeFrom(*source);
  }
}

void GatherDimensionNumbers::MergeFrom(const GatherDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.GatherDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offset_dims_.MergeFrom(from.offset_dims_);
  collapsed_slice_dims_.MergeFrom(from.collapsed_slice_dims_);
  start_index_map_.MergeFrom(from.start_index_map_);
  if (from.index_vector_dim() != 0) {
    set_index_vector_dim(from.index_vector_dim());
  }
}

void GatherDimensionNumbers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.GatherDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatherDimensionNumbers::CopyFrom(const GatherDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.GatherDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatherDimensionNumbers::IsInitialized() const {
  return true;
}

void GatherDimensionNumbers::Swap(GatherDimensionNumbers* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GatherDimensionNumbers* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GatherDimensionNumbers::UnsafeArenaSwap(GatherDimensionNumbers* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GatherDimensionNumbers::InternalSwap(GatherDimensionNumbers* other) {
  using std::swap;
  offset_dims_.InternalSwap(&other->offset_dims_);
  collapsed_slice_dims_.InternalSwap(&other->collapsed_slice_dims_);
  start_index_map_.InternalSwap(&other->start_index_map_);
  swap(index_vector_dim_, other->index_vector_dim_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GatherDimensionNumbers::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScatterDimensionNumbers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScatterDimensionNumbers::kUpdateWindowDimsFieldNumber;
const int ScatterDimensionNumbers::kInsertedWindowDimsFieldNumber;
const int ScatterDimensionNumbers::kScatterDimsToOperandDimsFieldNumber;
const int ScatterDimensionNumbers::kIndexVectorDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScatterDimensionNumbers::ScatterDimensionNumbers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ScatterDimensionNumbers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ScatterDimensionNumbers)
}
ScatterDimensionNumbers::ScatterDimensionNumbers(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  update_window_dims_(arena),
  inserted_window_dims_(arena),
  scatter_dims_to_operand_dims_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ScatterDimensionNumbers.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ScatterDimensionNumbers)
}
ScatterDimensionNumbers::ScatterDimensionNumbers(const ScatterDimensionNumbers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_window_dims_(from.update_window_dims_),
      inserted_window_dims_(from.inserted_window_dims_),
      scatter_dims_to_operand_dims_(from.scatter_dims_to_operand_dims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_vector_dim_ = from.index_vector_dim_;
  // @@protoc_insertion_point(copy_constructor:xla.ScatterDimensionNumbers)
}

void ScatterDimensionNumbers::SharedCtor() {
  index_vector_dim_ = GOOGLE_LONGLONG(0);
}

ScatterDimensionNumbers::~ScatterDimensionNumbers() {
  // @@protoc_insertion_point(destructor:xla.ScatterDimensionNumbers)
  SharedDtor();
}

void ScatterDimensionNumbers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ScatterDimensionNumbers::ArenaDtor(void* object) {
  ScatterDimensionNumbers* _this = reinterpret_cast< ScatterDimensionNumbers* >(object);
  (void)_this;
}
void ScatterDimensionNumbers::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ScatterDimensionNumbers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScatterDimensionNumbers::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScatterDimensionNumbers& ScatterDimensionNumbers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ScatterDimensionNumbers.base);
  return *internal_default_instance();
}


void ScatterDimensionNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ScatterDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_window_dims_.Clear();
  inserted_window_dims_.Clear();
  scatter_dims_to_operand_dims_.Clear();
  index_vector_dim_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ScatterDimensionNumbers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ScatterDimensionNumbers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 update_window_dims = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_update_window_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_update_window_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 inserted_window_dims = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_inserted_window_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_inserted_window_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 scatter_dims_to_operand_dims = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_scatter_dims_to_operand_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_scatter_dims_to_operand_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index_vector_dim = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_vector_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ScatterDimensionNumbers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ScatterDimensionNumbers)
  return false;
#undef DO_
}

void ScatterDimensionNumbers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ScatterDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 update_window_dims = 1;
  if (this->update_window_dims_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _update_window_dims_cached_byte_size_));
  }
  for (int i = 0, n = this->update_window_dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->update_window_dims(i), output);
  }

  // repeated int64 inserted_window_dims = 2;
  if (this->inserted_window_dims_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _inserted_window_dims_cached_byte_size_));
  }
  for (int i = 0, n = this->inserted_window_dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->inserted_window_dims(i), output);
  }

  // repeated int64 scatter_dims_to_operand_dims = 3;
  if (this->scatter_dims_to_operand_dims_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _scatter_dims_to_operand_dims_cached_byte_size_));
  }
  for (int i = 0, n = this->scatter_dims_to_operand_dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->scatter_dims_to_operand_dims(i), output);
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->index_vector_dim(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ScatterDimensionNumbers)
}

::google::protobuf::uint8* ScatterDimensionNumbers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ScatterDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 update_window_dims = 1;
  if (this->update_window_dims_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _update_window_dims_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->update_window_dims_, target);
  }

  // repeated int64 inserted_window_dims = 2;
  if (this->inserted_window_dims_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _inserted_window_dims_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->inserted_window_dims_, target);
  }

  // repeated int64 scatter_dims_to_operand_dims = 3;
  if (this->scatter_dims_to_operand_dims_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _scatter_dims_to_operand_dims_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->scatter_dims_to_operand_dims_, target);
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->index_vector_dim(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ScatterDimensionNumbers)
  return target;
}

size_t ScatterDimensionNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ScatterDimensionNumbers)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 update_window_dims = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->update_window_dims_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _update_window_dims_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 inserted_window_dims = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->inserted_window_dims_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inserted_window_dims_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 scatter_dims_to_operand_dims = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->scatter_dims_to_operand_dims_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scatter_dims_to_operand_dims_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 index_vector_dim = 4;
  if (this->index_vector_dim() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index_vector_dim());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScatterDimensionNumbers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ScatterDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  const ScatterDimensionNumbers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScatterDimensionNumbers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ScatterDimensionNumbers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ScatterDimensionNumbers)
    MergeFrom(*source);
  }
}

void ScatterDimensionNumbers::MergeFrom(const ScatterDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ScatterDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_window_dims_.MergeFrom(from.update_window_dims_);
  inserted_window_dims_.MergeFrom(from.inserted_window_dims_);
  scatter_dims_to_operand_dims_.MergeFrom(from.scatter_dims_to_operand_dims_);
  if (from.index_vector_dim() != 0) {
    set_index_vector_dim(from.index_vector_dim());
  }
}

void ScatterDimensionNumbers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ScatterDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScatterDimensionNumbers::CopyFrom(const ScatterDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ScatterDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScatterDimensionNumbers::IsInitialized() const {
  return true;
}

void ScatterDimensionNumbers::Swap(ScatterDimensionNumbers* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ScatterDimensionNumbers* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ScatterDimensionNumbers::UnsafeArenaSwap(ScatterDimensionNumbers* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ScatterDimensionNumbers::InternalSwap(ScatterDimensionNumbers* other) {
  using std::swap;
  update_window_dims_.InternalSwap(&other->update_window_dims_);
  inserted_window_dims_.InternalSwap(&other->inserted_window_dims_);
  scatter_dims_to_operand_dims_.InternalSwap(&other->scatter_dims_to_operand_dims_);
  swap(index_vector_dim_, other->index_vector_dim_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScatterDimensionNumbers::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvolutionDimensionNumbers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvolutionDimensionNumbers::kInputBatchDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kInputFeatureDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kInputSpatialDimensionsFieldNumber;
const int ConvolutionDimensionNumbers::kKernelInputFeatureDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kKernelOutputFeatureDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kKernelSpatialDimensionsFieldNumber;
const int ConvolutionDimensionNumbers::kOutputBatchDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kOutputFeatureDimensionFieldNumber;
const int ConvolutionDimensionNumbers::kOutputSpatialDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvolutionDimensionNumbers::ConvolutionDimensionNumbers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ConvolutionDimensionNumbers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ConvolutionDimensionNumbers)
}
ConvolutionDimensionNumbers::ConvolutionDimensionNumbers(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  kernel_spatial_dimensions_(arena),
  input_spatial_dimensions_(arena),
  output_spatial_dimensions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ConvolutionDimensionNumbers.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ConvolutionDimensionNumbers)
}
ConvolutionDimensionNumbers::ConvolutionDimensionNumbers(const ConvolutionDimensionNumbers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kernel_spatial_dimensions_(from.kernel_spatial_dimensions_),
      input_spatial_dimensions_(from.input_spatial_dimensions_),
      output_spatial_dimensions_(from.output_spatial_dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kernel_input_feature_dimension_, &from.kernel_input_feature_dimension_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_feature_dimension_) -
    reinterpret_cast<char*>(&kernel_input_feature_dimension_)) + sizeof(output_feature_dimension_));
  // @@protoc_insertion_point(copy_constructor:xla.ConvolutionDimensionNumbers)
}

void ConvolutionDimensionNumbers::SharedCtor() {
  ::memset(&kernel_input_feature_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_feature_dimension_) -
      reinterpret_cast<char*>(&kernel_input_feature_dimension_)) + sizeof(output_feature_dimension_));
}

ConvolutionDimensionNumbers::~ConvolutionDimensionNumbers() {
  // @@protoc_insertion_point(destructor:xla.ConvolutionDimensionNumbers)
  SharedDtor();
}

void ConvolutionDimensionNumbers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConvolutionDimensionNumbers::ArenaDtor(void* object) {
  ConvolutionDimensionNumbers* _this = reinterpret_cast< ConvolutionDimensionNumbers* >(object);
  (void)_this;
}
void ConvolutionDimensionNumbers::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConvolutionDimensionNumbers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConvolutionDimensionNumbers::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvolutionDimensionNumbers& ConvolutionDimensionNumbers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ConvolutionDimensionNumbers.base);
  return *internal_default_instance();
}


void ConvolutionDimensionNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ConvolutionDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kernel_spatial_dimensions_.Clear();
  input_spatial_dimensions_.Clear();
  output_spatial_dimensions_.Clear();
  ::memset(&kernel_input_feature_dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_feature_dimension_) -
      reinterpret_cast<char*>(&kernel_input_feature_dimension_)) + sizeof(output_feature_dimension_));
  _internal_metadata_.Clear();
}

bool ConvolutionDimensionNumbers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ConvolutionDimensionNumbers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 kernel_input_feature_dimension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kernel_input_feature_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 kernel_output_feature_dimension = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kernel_output_feature_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 kernel_spatial_dimensions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_kernel_spatial_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 50u, input, this->mutable_kernel_spatial_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 input_batch_dimension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &input_batch_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 input_feature_dimension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &input_feature_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 output_batch_dimension = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &output_batch_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 output_feature_dimension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &output_feature_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 input_spatial_dimensions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_input_spatial_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 90u, input, this->mutable_input_spatial_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 output_spatial_dimensions = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_output_spatial_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 98u, input, this->mutable_output_spatial_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ConvolutionDimensionNumbers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ConvolutionDimensionNumbers)
  return false;
#undef DO_
}

void ConvolutionDimensionNumbers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ConvolutionDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 kernel_input_feature_dimension = 3;
  if (this->kernel_input_feature_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->kernel_input_feature_dimension(), output);
  }

  // int64 kernel_output_feature_dimension = 4;
  if (this->kernel_output_feature_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->kernel_output_feature_dimension(), output);
  }

  // repeated int64 kernel_spatial_dimensions = 6;
  if (this->kernel_spatial_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _kernel_spatial_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->kernel_spatial_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->kernel_spatial_dimensions(i), output);
  }

  // int64 input_batch_dimension = 7;
  if (this->input_batch_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->input_batch_dimension(), output);
  }

  // int64 input_feature_dimension = 8;
  if (this->input_feature_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->input_feature_dimension(), output);
  }

  // int64 output_batch_dimension = 9;
  if (this->output_batch_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->output_batch_dimension(), output);
  }

  // int64 output_feature_dimension = 10;
  if (this->output_feature_dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->output_feature_dimension(), output);
  }

  // repeated int64 input_spatial_dimensions = 11;
  if (this->input_spatial_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _input_spatial_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->input_spatial_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->input_spatial_dimensions(i), output);
  }

  // repeated int64 output_spatial_dimensions = 12;
  if (this->output_spatial_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_spatial_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->output_spatial_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->output_spatial_dimensions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ConvolutionDimensionNumbers)
}

::google::protobuf::uint8* ConvolutionDimensionNumbers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ConvolutionDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 kernel_input_feature_dimension = 3;
  if (this->kernel_input_feature_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->kernel_input_feature_dimension(), target);
  }

  // int64 kernel_output_feature_dimension = 4;
  if (this->kernel_output_feature_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->kernel_output_feature_dimension(), target);
  }

  // repeated int64 kernel_spatial_dimensions = 6;
  if (this->kernel_spatial_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _kernel_spatial_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->kernel_spatial_dimensions_, target);
  }

  // int64 input_batch_dimension = 7;
  if (this->input_batch_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->input_batch_dimension(), target);
  }

  // int64 input_feature_dimension = 8;
  if (this->input_feature_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->input_feature_dimension(), target);
  }

  // int64 output_batch_dimension = 9;
  if (this->output_batch_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->output_batch_dimension(), target);
  }

  // int64 output_feature_dimension = 10;
  if (this->output_feature_dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->output_feature_dimension(), target);
  }

  // repeated int64 input_spatial_dimensions = 11;
  if (this->input_spatial_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _input_spatial_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->input_spatial_dimensions_, target);
  }

  // repeated int64 output_spatial_dimensions = 12;
  if (this->output_spatial_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_spatial_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->output_spatial_dimensions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ConvolutionDimensionNumbers)
  return target;
}

size_t ConvolutionDimensionNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ConvolutionDimensionNumbers)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 kernel_spatial_dimensions = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->kernel_spatial_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _kernel_spatial_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 input_spatial_dimensions = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->input_spatial_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _input_spatial_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 output_spatial_dimensions = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->output_spatial_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_spatial_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 kernel_input_feature_dimension = 3;
  if (this->kernel_input_feature_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->kernel_input_feature_dimension());
  }

  // int64 kernel_output_feature_dimension = 4;
  if (this->kernel_output_feature_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->kernel_output_feature_dimension());
  }

  // int64 input_batch_dimension = 7;
  if (this->input_batch_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->input_batch_dimension());
  }

  // int64 input_feature_dimension = 8;
  if (this->input_feature_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->input_feature_dimension());
  }

  // int64 output_batch_dimension = 9;
  if (this->output_batch_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->output_batch_dimension());
  }

  // int64 output_feature_dimension = 10;
  if (this->output_feature_dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->output_feature_dimension());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvolutionDimensionNumbers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ConvolutionDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvolutionDimensionNumbers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvolutionDimensionNumbers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ConvolutionDimensionNumbers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ConvolutionDimensionNumbers)
    MergeFrom(*source);
  }
}

void ConvolutionDimensionNumbers::MergeFrom(const ConvolutionDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ConvolutionDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kernel_spatial_dimensions_.MergeFrom(from.kernel_spatial_dimensions_);
  input_spatial_dimensions_.MergeFrom(from.input_spatial_dimensions_);
  output_spatial_dimensions_.MergeFrom(from.output_spatial_dimensions_);
  if (from.kernel_input_feature_dimension() != 0) {
    set_kernel_input_feature_dimension(from.kernel_input_feature_dimension());
  }
  if (from.kernel_output_feature_dimension() != 0) {
    set_kernel_output_feature_dimension(from.kernel_output_feature_dimension());
  }
  if (from.input_batch_dimension() != 0) {
    set_input_batch_dimension(from.input_batch_dimension());
  }
  if (from.input_feature_dimension() != 0) {
    set_input_feature_dimension(from.input_feature_dimension());
  }
  if (from.output_batch_dimension() != 0) {
    set_output_batch_dimension(from.output_batch_dimension());
  }
  if (from.output_feature_dimension() != 0) {
    set_output_feature_dimension(from.output_feature_dimension());
  }
}

void ConvolutionDimensionNumbers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ConvolutionDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvolutionDimensionNumbers::CopyFrom(const ConvolutionDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ConvolutionDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvolutionDimensionNumbers::IsInitialized() const {
  return true;
}

void ConvolutionDimensionNumbers::Swap(ConvolutionDimensionNumbers* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConvolutionDimensionNumbers* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConvolutionDimensionNumbers::UnsafeArenaSwap(ConvolutionDimensionNumbers* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConvolutionDimensionNumbers::InternalSwap(ConvolutionDimensionNumbers* other) {
  using std::swap;
  kernel_spatial_dimensions_.InternalSwap(&other->kernel_spatial_dimensions_);
  input_spatial_dimensions_.InternalSwap(&other->input_spatial_dimensions_);
  output_spatial_dimensions_.InternalSwap(&other->output_spatial_dimensions_);
  swap(kernel_input_feature_dimension_, other->kernel_input_feature_dimension_);
  swap(kernel_output_feature_dimension_, other->kernel_output_feature_dimension_);
  swap(input_batch_dimension_, other->input_batch_dimension_);
  swap(input_feature_dimension_, other->input_feature_dimension_);
  swap(output_batch_dimension_, other->output_batch_dimension_);
  swap(output_feature_dimension_, other->output_feature_dimension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConvolutionDimensionNumbers::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DotDimensionNumbers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DotDimensionNumbers::kLhsContractingDimensionsFieldNumber;
const int DotDimensionNumbers::kRhsContractingDimensionsFieldNumber;
const int DotDimensionNumbers::kLhsBatchDimensionsFieldNumber;
const int DotDimensionNumbers::kRhsBatchDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DotDimensionNumbers::DotDimensionNumbers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DotDimensionNumbers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.DotDimensionNumbers)
}
DotDimensionNumbers::DotDimensionNumbers(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  lhs_contracting_dimensions_(arena),
  rhs_contracting_dimensions_(arena),
  lhs_batch_dimensions_(arena),
  rhs_batch_dimensions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DotDimensionNumbers.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.DotDimensionNumbers)
}
DotDimensionNumbers::DotDimensionNumbers(const DotDimensionNumbers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lhs_contracting_dimensions_(from.lhs_contracting_dimensions_),
      rhs_contracting_dimensions_(from.rhs_contracting_dimensions_),
      lhs_batch_dimensions_(from.lhs_batch_dimensions_),
      rhs_batch_dimensions_(from.rhs_batch_dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.DotDimensionNumbers)
}

void DotDimensionNumbers::SharedCtor() {
}

DotDimensionNumbers::~DotDimensionNumbers() {
  // @@protoc_insertion_point(destructor:xla.DotDimensionNumbers)
  SharedDtor();
}

void DotDimensionNumbers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DotDimensionNumbers::ArenaDtor(void* object) {
  DotDimensionNumbers* _this = reinterpret_cast< DotDimensionNumbers* >(object);
  (void)_this;
}
void DotDimensionNumbers::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DotDimensionNumbers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DotDimensionNumbers::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DotDimensionNumbers& DotDimensionNumbers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_DotDimensionNumbers.base);
  return *internal_default_instance();
}


void DotDimensionNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.DotDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lhs_contracting_dimensions_.Clear();
  rhs_contracting_dimensions_.Clear();
  lhs_batch_dimensions_.Clear();
  rhs_batch_dimensions_.Clear();
  _internal_metadata_.Clear();
}

bool DotDimensionNumbers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.DotDimensionNumbers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 lhs_contracting_dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_lhs_contracting_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_lhs_contracting_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 rhs_contracting_dimensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rhs_contracting_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_rhs_contracting_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 lhs_batch_dimensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_lhs_batch_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_lhs_batch_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 rhs_batch_dimensions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rhs_batch_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_rhs_batch_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.DotDimensionNumbers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.DotDimensionNumbers)
  return false;
#undef DO_
}

void DotDimensionNumbers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.DotDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 lhs_contracting_dimensions = 1;
  if (this->lhs_contracting_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lhs_contracting_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->lhs_contracting_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->lhs_contracting_dimensions(i), output);
  }

  // repeated int64 rhs_contracting_dimensions = 2;
  if (this->rhs_contracting_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rhs_contracting_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->rhs_contracting_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->rhs_contracting_dimensions(i), output);
  }

  // repeated int64 lhs_batch_dimensions = 3;
  if (this->lhs_batch_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lhs_batch_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->lhs_batch_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->lhs_batch_dimensions(i), output);
  }

  // repeated int64 rhs_batch_dimensions = 4;
  if (this->rhs_batch_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rhs_batch_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->rhs_batch_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->rhs_batch_dimensions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.DotDimensionNumbers)
}

::google::protobuf::uint8* DotDimensionNumbers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.DotDimensionNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 lhs_contracting_dimensions = 1;
  if (this->lhs_contracting_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lhs_contracting_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->lhs_contracting_dimensions_, target);
  }

  // repeated int64 rhs_contracting_dimensions = 2;
  if (this->rhs_contracting_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rhs_contracting_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->rhs_contracting_dimensions_, target);
  }

  // repeated int64 lhs_batch_dimensions = 3;
  if (this->lhs_batch_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _lhs_batch_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->lhs_batch_dimensions_, target);
  }

  // repeated int64 rhs_batch_dimensions = 4;
  if (this->rhs_batch_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rhs_batch_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->rhs_batch_dimensions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.DotDimensionNumbers)
  return target;
}

size_t DotDimensionNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.DotDimensionNumbers)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 lhs_contracting_dimensions = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->lhs_contracting_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lhs_contracting_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 rhs_contracting_dimensions = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->rhs_contracting_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rhs_contracting_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 lhs_batch_dimensions = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->lhs_batch_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lhs_batch_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 rhs_batch_dimensions = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->rhs_batch_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rhs_batch_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DotDimensionNumbers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.DotDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  const DotDimensionNumbers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DotDimensionNumbers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.DotDimensionNumbers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.DotDimensionNumbers)
    MergeFrom(*source);
  }
}

void DotDimensionNumbers::MergeFrom(const DotDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.DotDimensionNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lhs_contracting_dimensions_.MergeFrom(from.lhs_contracting_dimensions_);
  rhs_contracting_dimensions_.MergeFrom(from.rhs_contracting_dimensions_);
  lhs_batch_dimensions_.MergeFrom(from.lhs_batch_dimensions_);
  rhs_batch_dimensions_.MergeFrom(from.rhs_batch_dimensions_);
}

void DotDimensionNumbers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.DotDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotDimensionNumbers::CopyFrom(const DotDimensionNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.DotDimensionNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotDimensionNumbers::IsInitialized() const {
  return true;
}

void DotDimensionNumbers::Swap(DotDimensionNumbers* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DotDimensionNumbers* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DotDimensionNumbers::UnsafeArenaSwap(DotDimensionNumbers* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DotDimensionNumbers::InternalSwap(DotDimensionNumbers* other) {
  using std::swap;
  lhs_contracting_dimensions_.InternalSwap(&other->lhs_contracting_dimensions_);
  rhs_contracting_dimensions_.InternalSwap(&other->rhs_contracting_dimensions_);
  lhs_batch_dimensions_.InternalSwap(&other->lhs_batch_dimensions_);
  rhs_batch_dimensions_.InternalSwap(&other->rhs_batch_dimensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DotDimensionNumbers::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpSharding::InitAsDefaultInstance() {
  ::xla::_OpSharding_default_instance_._instance.get_mutable()->tile_shape_ = const_cast< ::xla::ShapeProto*>(
      ::xla::ShapeProto::internal_default_instance());
}
void OpSharding::unsafe_arena_set_allocated_tile_shape(
    ::xla::ShapeProto* tile_shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete tile_shape_;
  }
  tile_shape_ = tile_shape;
  if (tile_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.OpSharding.tile_shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpSharding::kTypeFieldNumber;
const int OpSharding::kTileShapeFieldNumber;
const int OpSharding::kTileAssignmentDimensionsFieldNumber;
const int OpSharding::kTileAssignmentDevicesFieldNumber;
const int OpSharding::kTupleShardingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpSharding::OpSharding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpSharding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.OpSharding)
}
OpSharding::OpSharding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  tile_assignment_dimensions_(arena),
  tile_assignment_devices_(arena),
  tuple_shardings_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpSharding.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.OpSharding)
}
OpSharding::OpSharding(const OpSharding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tile_assignment_dimensions_(from.tile_assignment_dimensions_),
      tile_assignment_devices_(from.tile_assignment_devices_),
      tuple_shardings_(from.tuple_shardings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tile_shape()) {
    tile_shape_ = new ::xla::ShapeProto(*from.tile_shape_);
  } else {
    tile_shape_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:xla.OpSharding)
}

void OpSharding::SharedCtor() {
  ::memset(&tile_shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&tile_shape_)) + sizeof(type_));
}

OpSharding::~OpSharding() {
  // @@protoc_insertion_point(destructor:xla.OpSharding)
  SharedDtor();
}

void OpSharding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete tile_shape_;
}

void OpSharding::ArenaDtor(void* object) {
  OpSharding* _this = reinterpret_cast< OpSharding* >(object);
  (void)_this;
}
void OpSharding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OpSharding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpSharding::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpSharding& OpSharding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_OpSharding.base);
  return *internal_default_instance();
}


void OpSharding::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.OpSharding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tile_assignment_dimensions_.Clear();
  tile_assignment_devices_.Clear();
  tuple_shardings_.Clear();
  if (GetArenaNoVirtual() == NULL && tile_shape_ != NULL) {
    delete tile_shape_;
  }
  tile_shape_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool OpSharding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.OpSharding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xla.OpSharding.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::xla::OpSharding_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xla.ShapeProto tile_shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tile_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 tile_assignment_dimensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_tile_assignment_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_tile_assignment_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 tile_assignment_devices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_tile_assignment_devices())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_tile_assignment_devices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xla.OpSharding tuple_shardings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuple_shardings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.OpSharding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.OpSharding)
  return false;
#undef DO_
}

void OpSharding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.OpSharding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.OpSharding.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .xla.ShapeProto tile_shape = 2;
  if (this->has_tile_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tile_shape(), output);
  }

  // repeated int64 tile_assignment_dimensions = 3;
  if (this->tile_assignment_dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tile_assignment_dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->tile_assignment_dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->tile_assignment_dimensions(i), output);
  }

  // repeated int64 tile_assignment_devices = 4;
  if (this->tile_assignment_devices_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tile_assignment_devices_cached_byte_size_));
  }
  for (int i = 0, n = this->tile_assignment_devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->tile_assignment_devices(i), output);
  }

  // repeated .xla.OpSharding tuple_shardings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_shardings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->tuple_shardings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.OpSharding)
}

::google::protobuf::uint8* OpSharding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.OpSharding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.OpSharding.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .xla.ShapeProto tile_shape = 2;
  if (this->has_tile_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tile_shape(), deterministic, target);
  }

  // repeated int64 tile_assignment_dimensions = 3;
  if (this->tile_assignment_dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _tile_assignment_dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->tile_assignment_dimensions_, target);
  }

  // repeated int64 tile_assignment_devices = 4;
  if (this->tile_assignment_devices_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _tile_assignment_devices_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->tile_assignment_devices_, target);
  }

  // repeated .xla.OpSharding tuple_shardings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_shardings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->tuple_shardings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.OpSharding)
  return target;
}

size_t OpSharding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.OpSharding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 tile_assignment_dimensions = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->tile_assignment_dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tile_assignment_dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 tile_assignment_devices = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->tile_assignment_devices_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tile_assignment_devices_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .xla.OpSharding tuple_shardings = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->tuple_shardings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuple_shardings(static_cast<int>(i)));
    }
  }

  // .xla.ShapeProto tile_shape = 2;
  if (this->has_tile_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tile_shape_);
  }

  // .xla.OpSharding.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpSharding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.OpSharding)
  GOOGLE_DCHECK_NE(&from, this);
  const OpSharding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpSharding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.OpSharding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.OpSharding)
    MergeFrom(*source);
  }
}

void OpSharding::MergeFrom(const OpSharding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.OpSharding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tile_assignment_dimensions_.MergeFrom(from.tile_assignment_dimensions_);
  tile_assignment_devices_.MergeFrom(from.tile_assignment_devices_);
  tuple_shardings_.MergeFrom(from.tuple_shardings_);
  if (from.has_tile_shape()) {
    mutable_tile_shape()->::xla::ShapeProto::MergeFrom(from.tile_shape());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void OpSharding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.OpSharding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpSharding::CopyFrom(const OpSharding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.OpSharding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpSharding::IsInitialized() const {
  return true;
}

void OpSharding::Swap(OpSharding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OpSharding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OpSharding::UnsafeArenaSwap(OpSharding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OpSharding::InternalSwap(OpSharding* other) {
  using std::swap;
  tile_assignment_dimensions_.InternalSwap(&other->tile_assignment_dimensions_);
  tile_assignment_devices_.InternalSwap(&other->tile_assignment_devices_);
  CastToBase(&tuple_shardings_)->InternalSwap(CastToBase(&other->tuple_shardings_));
  swap(tile_shape_, other->tile_shape_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpSharding::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplicaGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplicaGroup::kReplicaIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplicaGroup::ReplicaGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ReplicaGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.ReplicaGroup)
}
ReplicaGroup::ReplicaGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  replica_ids_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ReplicaGroup.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.ReplicaGroup)
}
ReplicaGroup::ReplicaGroup(const ReplicaGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_ids_(from.replica_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.ReplicaGroup)
}

void ReplicaGroup::SharedCtor() {
}

ReplicaGroup::~ReplicaGroup() {
  // @@protoc_insertion_point(destructor:xla.ReplicaGroup)
  SharedDtor();
}

void ReplicaGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReplicaGroup::ArenaDtor(void* object) {
  ReplicaGroup* _this = reinterpret_cast< ReplicaGroup* >(object);
  (void)_this;
}
void ReplicaGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReplicaGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplicaGroup::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplicaGroup& ReplicaGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_ReplicaGroup.base);
  return *internal_default_instance();
}


void ReplicaGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_ids_.Clear();
  _internal_metadata_.Clear();
}

bool ReplicaGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.ReplicaGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 replica_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replica_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_replica_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.ReplicaGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.ReplicaGroup)
  return false;
#undef DO_
}

void ReplicaGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 replica_ids = 1;
  if (this->replica_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _replica_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->replica_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->replica_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.ReplicaGroup)
}

::google::protobuf::uint8* ReplicaGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.ReplicaGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 replica_ids = 1;
  if (this->replica_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _replica_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->replica_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.ReplicaGroup)
  return target;
}

size_t ReplicaGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.ReplicaGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 replica_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->replica_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _replica_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplicaGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.ReplicaGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplicaGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplicaGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.ReplicaGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.ReplicaGroup)
    MergeFrom(*source);
  }
}

void ReplicaGroup::MergeFrom(const ReplicaGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.ReplicaGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_ids_.MergeFrom(from.replica_ids_);
}

void ReplicaGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.ReplicaGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplicaGroup::CopyFrom(const ReplicaGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.ReplicaGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicaGroup::IsInitialized() const {
  return true;
}

void ReplicaGroup::Swap(ReplicaGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReplicaGroup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReplicaGroup::UnsafeArenaSwap(ReplicaGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReplicaGroup::InternalSwap(ReplicaGroup* other) {
  using std::swap;
  replica_ids_.InternalSwap(&other->replica_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplicaGroup::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourceTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceTarget::kSourceFieldNumber;
const int SourceTarget::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceTarget::SourceTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_SourceTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.SourceTarget)
}
SourceTarget::SourceTarget(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_SourceTarget.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.SourceTarget)
}
SourceTarget::SourceTarget(const SourceTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_) -
    reinterpret_cast<char*>(&source_)) + sizeof(target_));
  // @@protoc_insertion_point(copy_constructor:xla.SourceTarget)
}

void SourceTarget::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&source_)) + sizeof(target_));
}

SourceTarget::~SourceTarget() {
  // @@protoc_insertion_point(destructor:xla.SourceTarget)
  SharedDtor();
}

void SourceTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SourceTarget::ArenaDtor(void* object) {
  SourceTarget* _this = reinterpret_cast< SourceTarget* >(object);
  (void)_this;
}
void SourceTarget::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SourceTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourceTarget::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceTarget& SourceTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_SourceTarget.base);
  return *internal_default_instance();
}


void SourceTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.SourceTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&source_)) + sizeof(target_));
  _internal_metadata_.Clear();
}

bool SourceTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.SourceTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.SourceTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.SourceTarget)
  return false;
#undef DO_
}

void SourceTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.SourceTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source(), output);
  }

  // int64 target = 2;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.SourceTarget)
}

::google::protobuf::uint8* SourceTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.SourceTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source(), target);
  }

  // int64 target = 2;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.SourceTarget)
  return target;
}

size_t SourceTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.SourceTarget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source());
  }

  // int64 target = 2;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.SourceTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.SourceTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.SourceTarget)
    MergeFrom(*source);
  }
}

void SourceTarget::MergeFrom(const SourceTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.SourceTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
}

void SourceTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.SourceTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceTarget::CopyFrom(const SourceTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.SourceTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceTarget::IsInitialized() const {
  return true;
}

void SourceTarget::Swap(SourceTarget* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SourceTarget* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SourceTarget::UnsafeArenaSwap(SourceTarget* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SourceTarget::InternalSwap(SourceTarget* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourceTarget::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrecisionConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrecisionConfig::kOperandPrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrecisionConfig::PrecisionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PrecisionConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xla.PrecisionConfig)
}
PrecisionConfig::PrecisionConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  operand_precision_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PrecisionConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.PrecisionConfig)
}
PrecisionConfig::PrecisionConfig(const PrecisionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operand_precision_(from.operand_precision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xla.PrecisionConfig)
}

void PrecisionConfig::SharedCtor() {
}

PrecisionConfig::~PrecisionConfig() {
  // @@protoc_insertion_point(destructor:xla.PrecisionConfig)
  SharedDtor();
}

void PrecisionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PrecisionConfig::ArenaDtor(void* object) {
  PrecisionConfig* _this = reinterpret_cast< PrecisionConfig* >(object);
  (void)_this;
}
void PrecisionConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PrecisionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrecisionConfig::descriptor() {
  ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrecisionConfig& PrecisionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::scc_info_PrecisionConfig.base);
  return *internal_default_instance();
}


void PrecisionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.PrecisionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operand_precision_.Clear();
  _internal_metadata_.Clear();
}

bool PrecisionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xla.PrecisionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .xla.PrecisionConfig.Precision operand_precision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_operand_precision(static_cast< ::xla::PrecisionConfig_Precision >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_operand_precision(static_cast< ::xla::PrecisionConfig_Precision >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xla.PrecisionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xla.PrecisionConfig)
  return false;
#undef DO_
}

void PrecisionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xla.PrecisionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.PrecisionConfig.Precision operand_precision = 1;
  if (this->operand_precision_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_operand_precision_cached_byte_size_));
  }
  for (int i = 0, n = this->operand_precision_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->operand_precision(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xla.PrecisionConfig)
}

::google::protobuf::uint8* PrecisionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xla.PrecisionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .xla.PrecisionConfig.Precision operand_precision = 1;
  if (this->operand_precision_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _operand_precision_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->operand_precision_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.PrecisionConfig)
  return target;
}

size_t PrecisionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.PrecisionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .xla.PrecisionConfig.Precision operand_precision = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->operand_precision_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->operand_precision(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _operand_precision_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrecisionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xla.PrecisionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrecisionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrecisionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xla.PrecisionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xla.PrecisionConfig)
    MergeFrom(*source);
  }
}

void PrecisionConfig::MergeFrom(const PrecisionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xla.PrecisionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operand_precision_.MergeFrom(from.operand_precision_);
}

void PrecisionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xla.PrecisionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrecisionConfig::CopyFrom(const PrecisionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.PrecisionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrecisionConfig::IsInitialized() const {
  return true;
}

void PrecisionConfig::Swap(PrecisionConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PrecisionConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PrecisionConfig::UnsafeArenaSwap(PrecisionConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PrecisionConfig::InternalSwap(PrecisionConfig* other) {
  using std::swap;
  operand_precision_.InternalSwap(&other->operand_precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrecisionConfig::GetMetadata() const {
  protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_diplomacy_5ftensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::PaddingConfig_PaddingConfigDimension* Arena::CreateMaybeMessage< ::xla::PaddingConfig_PaddingConfigDimension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::PaddingConfig_PaddingConfigDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::PaddingConfig* Arena::CreateMaybeMessage< ::xla::PaddingConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::PaddingConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::TileProto* Arena::CreateMaybeMessage< ::xla::TileProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::TileProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LayoutProto* Arena::CreateMaybeMessage< ::xla::LayoutProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::LayoutProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ShapeProto* Arena::CreateMaybeMessage< ::xla::ShapeProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ShapeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ProgramShapeProto* Arena::CreateMaybeMessage< ::xla::ProgramShapeProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ProgramShapeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ComputationStats* Arena::CreateMaybeMessage< ::xla::ComputationStats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ComputationStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::OpMetadata* Arena::CreateMaybeMessage< ::xla::OpMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::OpMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecutionProfile* Arena::CreateMaybeMessage< ::xla::ExecutionProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ExecutionProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ExecutionHandle* Arena::CreateMaybeMessage< ::xla::ExecutionHandle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ExecutionHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GlobalDataHandle* Arena::CreateMaybeMessage< ::xla::GlobalDataHandle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::GlobalDataHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeviceHandle* Arena::CreateMaybeMessage< ::xla::DeviceHandle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DeviceHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ChannelHandle* Arena::CreateMaybeMessage< ::xla::ChannelHandle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ChannelHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeviceAssignmentProto_ComputationDevice* Arena::CreateMaybeMessage< ::xla::DeviceAssignmentProto_ComputationDevice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DeviceAssignmentProto_ComputationDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DeviceAssignmentProto* Arena::CreateMaybeMessage< ::xla::DeviceAssignmentProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DeviceAssignmentProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::LiteralProto* Arena::CreateMaybeMessage< ::xla::LiteralProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::LiteralProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::WindowDimension* Arena::CreateMaybeMessage< ::xla::WindowDimension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::WindowDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::Window* Arena::CreateMaybeMessage< ::xla::Window >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::Window >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::GatherDimensionNumbers* Arena::CreateMaybeMessage< ::xla::GatherDimensionNumbers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::GatherDimensionNumbers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ScatterDimensionNumbers* Arena::CreateMaybeMessage< ::xla::ScatterDimensionNumbers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ScatterDimensionNumbers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ConvolutionDimensionNumbers* Arena::CreateMaybeMessage< ::xla::ConvolutionDimensionNumbers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ConvolutionDimensionNumbers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::DotDimensionNumbers* Arena::CreateMaybeMessage< ::xla::DotDimensionNumbers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::DotDimensionNumbers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::OpSharding* Arena::CreateMaybeMessage< ::xla::OpSharding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::OpSharding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::ReplicaGroup* Arena::CreateMaybeMessage< ::xla::ReplicaGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::ReplicaGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::SourceTarget* Arena::CreateMaybeMessage< ::xla::SourceTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::SourceTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xla::PrecisionConfig* Arena::CreateMaybeMessage< ::xla::PrecisionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::PrecisionConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
