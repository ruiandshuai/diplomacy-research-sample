// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/config/monitoring_config.proto

#include "tensorflow_serving/config/monitoring_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrometheusConfig;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto
namespace tensorflow {
namespace serving {
class PrometheusConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrometheusConfig>
      _instance;
} _PrometheusConfig_default_instance_;
class MonitoringConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoringConfig>
      _instance;
} _MonitoringConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto {
static void InitDefaultsPrometheusConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_PrometheusConfig_default_instance_;
    new (ptr) ::tensorflow::serving::PrometheusConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::PrometheusConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrometheusConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrometheusConfig}, {}};

static void InitDefaultsMonitoringConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_MonitoringConfig_default_instance_;
    new (ptr) ::tensorflow::serving::MonitoringConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::MonitoringConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonitoringConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonitoringConfig}, {
      &protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_PrometheusConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PrometheusConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoringConfig.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::PrometheusConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::PrometheusConfig, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::PrometheusConfig, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::MonitoringConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::MonitoringConfig, prometheus_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::PrometheusConfig)},
  { 7, -1, sizeof(::tensorflow::serving::MonitoringConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_PrometheusConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_MonitoringConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow_serving/config/monitoring_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n1tensorflow_serving/config/monitoring_c"
      "onfig.proto\022\022tensorflow.serving\"0\n\020Prome"
      "theusConfig\022\016\n\006enable\030\001 \001(\010\022\014\n\004path\030\002 \001("
      "\t\"S\n\020MonitoringConfig\022\?\n\021prometheus_conf"
      "ig\030\001 \001(\0132$.tensorflow.serving.Prometheus"
      "ConfigB\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/config/monitoring_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto
namespace tensorflow {
namespace serving {

// ===================================================================

void PrometheusConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrometheusConfig::kEnableFieldNumber;
const int PrometheusConfig::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrometheusConfig::PrometheusConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_PrometheusConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.PrometheusConfig)
}
PrometheusConfig::PrometheusConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_PrometheusConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PrometheusConfig)
}
PrometheusConfig::PrometheusConfig(const PrometheusConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  enable_ = from.enable_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PrometheusConfig)
}

void PrometheusConfig::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enable_ = false;
}

PrometheusConfig::~PrometheusConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PrometheusConfig)
  SharedDtor();
}

void PrometheusConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrometheusConfig::ArenaDtor(void* object) {
  PrometheusConfig* _this = reinterpret_cast< PrometheusConfig* >(object);
  (void)_this;
}
void PrometheusConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PrometheusConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrometheusConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrometheusConfig& PrometheusConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_PrometheusConfig.base);
  return *internal_default_instance();
}


void PrometheusConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PrometheusConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  enable_ = false;
  _internal_metadata_.Clear();
}

bool PrometheusConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.PrometheusConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.PrometheusConfig.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.PrometheusConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.PrometheusConfig)
  return false;
#undef DO_
}

void PrometheusConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.PrometheusConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.PrometheusConfig.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.PrometheusConfig)
}

::google::protobuf::uint8* PrometheusConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PrometheusConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.PrometheusConfig.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PrometheusConfig)
  return target;
}

size_t PrometheusConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PrometheusConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // bool enable = 1;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrometheusConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.PrometheusConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrometheusConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrometheusConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.PrometheusConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.PrometheusConfig)
    MergeFrom(*source);
  }
}

void PrometheusConfig::MergeFrom(const PrometheusConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PrometheusConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    set_path(from.path());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void PrometheusConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.PrometheusConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrometheusConfig::CopyFrom(const PrometheusConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PrometheusConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrometheusConfig::IsInitialized() const {
  return true;
}

void PrometheusConfig::Swap(PrometheusConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PrometheusConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PrometheusConfig::UnsafeArenaSwap(PrometheusConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PrometheusConfig::InternalSwap(PrometheusConfig* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrometheusConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitoringConfig::InitAsDefaultInstance() {
  ::tensorflow::serving::_MonitoringConfig_default_instance_._instance.get_mutable()->prometheus_config_ = const_cast< ::tensorflow::serving::PrometheusConfig*>(
      ::tensorflow::serving::PrometheusConfig::internal_default_instance());
}
void MonitoringConfig::unsafe_arena_set_allocated_prometheus_config(
    ::tensorflow::serving::PrometheusConfig* prometheus_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete prometheus_config_;
  }
  prometheus_config_ = prometheus_config;
  if (prometheus_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.MonitoringConfig.prometheus_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoringConfig::kPrometheusConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoringConfig::MonitoringConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_MonitoringConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.MonitoringConfig)
}
MonitoringConfig::MonitoringConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_MonitoringConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.MonitoringConfig)
}
MonitoringConfig::MonitoringConfig(const MonitoringConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prometheus_config()) {
    prometheus_config_ = new ::tensorflow::serving::PrometheusConfig(*from.prometheus_config_);
  } else {
    prometheus_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.MonitoringConfig)
}

void MonitoringConfig::SharedCtor() {
  prometheus_config_ = NULL;
}

MonitoringConfig::~MonitoringConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.MonitoringConfig)
  SharedDtor();
}

void MonitoringConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete prometheus_config_;
}

void MonitoringConfig::ArenaDtor(void* object) {
  MonitoringConfig* _this = reinterpret_cast< MonitoringConfig* >(object);
  (void)_this;
}
void MonitoringConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoringConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonitoringConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitoringConfig& MonitoringConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::scc_info_MonitoringConfig.base);
  return *internal_default_instance();
}


void MonitoringConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.MonitoringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && prometheus_config_ != NULL) {
    delete prometheus_config_;
  }
  prometheus_config_ = NULL;
  _internal_metadata_.Clear();
}

bool MonitoringConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.MonitoringConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.PrometheusConfig prometheus_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prometheus_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.MonitoringConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.MonitoringConfig)
  return false;
#undef DO_
}

void MonitoringConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.MonitoringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.PrometheusConfig prometheus_config = 1;
  if (this->has_prometheus_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prometheus_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.MonitoringConfig)
}

::google::protobuf::uint8* MonitoringConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.MonitoringConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.PrometheusConfig prometheus_config = 1;
  if (this->has_prometheus_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prometheus_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.MonitoringConfig)
  return target;
}

size_t MonitoringConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.MonitoringConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.serving.PrometheusConfig prometheus_config = 1;
  if (this->has_prometheus_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prometheus_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoringConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.MonitoringConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitoringConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitoringConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.MonitoringConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.MonitoringConfig)
    MergeFrom(*source);
  }
}

void MonitoringConfig::MergeFrom(const MonitoringConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.MonitoringConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prometheus_config()) {
    mutable_prometheus_config()->::tensorflow::serving::PrometheusConfig::MergeFrom(from.prometheus_config());
  }
}

void MonitoringConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.MonitoringConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoringConfig::CopyFrom(const MonitoringConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.MonitoringConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoringConfig::IsInitialized() const {
  return true;
}

void MonitoringConfig::Swap(MonitoringConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoringConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MonitoringConfig::UnsafeArenaSwap(MonitoringConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoringConfig::InternalSwap(MonitoringConfig* other) {
  using std::swap;
  swap(prometheus_config_, other->prometheus_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonitoringConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::PrometheusConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::PrometheusConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PrometheusConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::MonitoringConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::MonitoringConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::MonitoringConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
