// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/config/model_server_config.proto

#include "tensorflow_serving/config/model_server_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LoggingConfig;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto
namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelConfig_VersionLabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModelConfigList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ModelConfig;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto
namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy;
}  // namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto
namespace tensorflow {
namespace serving {
class ModelConfig_VersionLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelConfig_VersionLabelsEntry_DoNotUse>
      _instance;
} _ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_;
class ModelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelConfig>
      _instance;
} _ModelConfig_default_instance_;
class ModelConfigListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelConfigList>
      _instance;
} _ModelConfigList_default_instance_;
class ModelServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelServerConfig>
      _instance;
  const ::tensorflow::serving::ModelConfigList* model_config_list_;
  const ::google::protobuf::Any* custom_model_config_;
} _ModelServerConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto {
static void InitDefaultsModelConfig_VersionLabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse();
  }
  ::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelConfig_VersionLabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelConfig_VersionLabelsEntry_DoNotUse}, {}};

static void InitDefaultsModelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ModelConfig_default_instance_;
    new (ptr) ::tensorflow::serving::ModelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ModelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ModelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsModelConfig}, {
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy.base,
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfig_VersionLabelsEntry_DoNotUse.base,
      &protobuf_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto::scc_info_LoggingConfig.base,}};

static void InitDefaultsModelConfigList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ModelConfigList_default_instance_;
    new (ptr) ::tensorflow::serving::ModelConfigList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ModelConfigList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModelConfigList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModelConfigList}, {
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfig.base,}};

static void InitDefaultsModelServerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ModelServerConfig_default_instance_;
    new (ptr) ::tensorflow::serving::ModelServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ModelServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ModelServerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsModelServerConfig}, {
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfigList.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ModelConfig_VersionLabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelConfigList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelServerConfig.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, base_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, model_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, model_platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, model_version_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, version_labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfig, logging_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelConfigList, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tensorflow::serving::ModelServerConfigDefaultTypeInternal, model_config_list_),
  offsetof(::tensorflow::serving::ModelServerConfigDefaultTypeInternal, custom_model_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::tensorflow::serving::ModelConfig)},
  { 21, -1, sizeof(::tensorflow::serving::ModelConfigList)},
  { 27, -1, sizeof(::tensorflow::serving::ModelServerConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ModelConfigList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ModelServerConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow_serving/config/model_server_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3tensorflow_serving/config/model_server"
      "_config.proto\022\022tensorflow.serving\032\031googl"
      "e/protobuf/any.proto\032.tensorflow_serving"
      "/config/logging_config.proto\032Mtensorflow"
      "_serving/sources/storage_path/file_syste"
      "m_storage_path_source.proto\"\253\003\n\013ModelCon"
      "fig\022\014\n\004name\030\001 \001(\t\022\021\n\tbase_path\030\002 \001(\t\0225\n\n"
      "model_type\030\003 \001(\0162\035.tensorflow.serving.Mo"
      "delTypeB\002\030\001\022\026\n\016model_platform\030\004 \001(\t\022i\n\024m"
      "odel_version_policy\030\007 \001(\0132K.tensorflow.s"
      "erving.FileSystemStoragePathSourceConfig"
      ".ServableVersionPolicy\022J\n\016version_labels"
      "\030\010 \003(\01322.tensorflow.serving.ModelConfig."
      "VersionLabelsEntry\0229\n\016logging_config\030\006 \001"
      "(\0132!.tensorflow.serving.LoggingConfig\0324\n"
      "\022VersionLabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\003:\0028\001J\004\010\005\020\006\"B\n\017ModelConfigList\022/\n\006"
      "config\030\001 \003(\0132\037.tensorflow.serving.ModelC"
      "onfig\"\224\001\n\021ModelServerConfig\022@\n\021model_con"
      "fig_list\030\001 \001(\0132#.tensorflow.serving.Mode"
      "lConfigListH\000\0223\n\023custom_model_config\030\002 \001"
      "(\0132\024.google.protobuf.AnyH\000B\010\n\006config*N\n\t"
      "ModelType\022\036\n\026MODEL_TYPE_UNSPECIFIED\020\000\032\002\010"
      "\001\022\022\n\nTENSORFLOW\020\001\032\002\010\001\022\r\n\005OTHER\020\002\032\002\010\001B\003\370\001"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 969);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/config/model_server_config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto::AddDescriptors();
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto
namespace tensorflow {
namespace serving {
const ::google::protobuf::EnumDescriptor* ModelType_descriptor() {
  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse() {}
ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ModelConfig_VersionLabelsEntry_DoNotUse::MergeFrom(const ModelConfig_VersionLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ModelConfig_VersionLabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[0];
}
void ModelConfig_VersionLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ModelConfig::InitAsDefaultInstance() {
  ::tensorflow::serving::_ModelConfig_default_instance_._instance.get_mutable()->model_version_policy_ = const_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy*>(
      ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy::internal_default_instance());
  ::tensorflow::serving::_ModelConfig_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::tensorflow::serving::LoggingConfig*>(
      ::tensorflow::serving::LoggingConfig::internal_default_instance());
}
void ModelConfig::unsafe_arena_set_allocated_model_version_policy(
    ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy* model_version_policy) {
  if (GetArenaNoVirtual() == NULL) {
    delete model_version_policy_;
  }
  model_version_policy_ = model_version_policy;
  if (model_version_policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelConfig.model_version_policy)
}
void ModelConfig::clear_model_version_policy() {
  if (GetArenaNoVirtual() == NULL && model_version_policy_ != NULL) {
    delete model_version_policy_;
  }
  model_version_policy_ = NULL;
}
void ModelConfig::unsafe_arena_set_allocated_logging_config(
    ::tensorflow::serving::LoggingConfig* logging_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete logging_config_;
  }
  logging_config_ = logging_config;
  if (logging_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelConfig.logging_config)
}
void ModelConfig::clear_logging_config() {
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelConfig::kNameFieldNumber;
const int ModelConfig::kBasePathFieldNumber;
const int ModelConfig::kModelTypeFieldNumber;
const int ModelConfig::kModelPlatformFieldNumber;
const int ModelConfig::kModelVersionPolicyFieldNumber;
const int ModelConfig::kVersionLabelsFieldNumber;
const int ModelConfig::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelConfig::ModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ModelConfig)
}
ModelConfig::ModelConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  version_labels_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelConfig)
}
ModelConfig::ModelConfig(const ModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_labels_.MergeFrom(from.version_labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_path().size() > 0) {
    base_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path(),
      GetArenaNoVirtual());
  }
  model_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model_platform().size() > 0) {
    model_platform_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_platform(),
      GetArenaNoVirtual());
  }
  if (from.has_logging_config()) {
    logging_config_ = new ::tensorflow::serving::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  if (from.has_model_version_policy()) {
    model_version_policy_ = new ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy(*from.model_version_policy_);
  } else {
    model_version_policy_ = NULL;
  }
  model_type_ = from.model_type_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelConfig)
}

void ModelConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logging_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_type_) -
      reinterpret_cast<char*>(&logging_config_)) + sizeof(model_type_));
}

ModelConfig::~ModelConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelConfig)
  SharedDtor();
}

void ModelConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete logging_config_;
  if (this != internal_default_instance()) delete model_version_policy_;
}

void ModelConfig::ArenaDtor(void* object) {
  ModelConfig* _this = reinterpret_cast< ModelConfig* >(object);
  (void)_this;
}
void ModelConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelConfig& ModelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfig.base);
  return *internal_default_instance();
}


void ModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_labels_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  base_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  model_platform_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && model_version_policy_ != NULL) {
    delete model_version_policy_;
  }
  model_version_policy_ = NULL;
  model_type_ = 0;
  _internal_metadata_.Clear();
}

bool ModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ModelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.ModelConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_path().data(), static_cast<int>(this->base_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.ModelConfig.base_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_model_type(static_cast< ::tensorflow::serving::ModelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model_platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model_platform().data(), static_cast<int>(this->model_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.ModelConfig.model_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.LoggingConfig logging_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model_version_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> version_labels = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ModelConfig_VersionLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ModelConfig_VersionLabelsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&version_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.ModelConfig.VersionLabelsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ModelConfig)
  return false;
#undef DO_
}

void ModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base_path(), output);
  }

  // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
  if (this->model_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->model_type(), output);
  }

  // string model_platform = 4;
  if (this->model_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_platform().data(), static_cast<int>(this->model_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.model_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->model_platform(), output);
  }

  // .tensorflow.serving.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_logging_config(), output);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
  if (this->has_model_version_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_model_version_policy(), output);
  }

  // map<string, int64> version_labels = 8;
  if (!this->version_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.ModelConfig.VersionLabelsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->version_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->version_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->version_labels().begin();
          it != this->version_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ModelConfig_VersionLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(version_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ModelConfig_VersionLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->version_labels().begin();
          it != this->version_labels().end(); ++it) {
        entry.reset(version_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ModelConfig)
}

::google::protobuf::uint8* ModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_path(), target);
  }

  // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
  if (this->model_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->model_type(), target);
  }

  // string model_platform = 4;
  if (this->model_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_platform().data(), static_cast<int>(this->model_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.ModelConfig.model_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->model_platform(), target);
  }

  // .tensorflow.serving.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_logging_config(), deterministic, target);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
  if (this->has_model_version_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_model_version_policy(), deterministic, target);
  }

  // map<string, int64> version_labels = 8;
  if (!this->version_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.ModelConfig.VersionLabelsEntry.key");
      }
    };

    if (deterministic &&
        this->version_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->version_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->version_labels().begin();
          it != this->version_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ModelConfig_VersionLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(version_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ModelConfig_VersionLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->version_labels().begin();
          it != this->version_labels().end(); ++it) {
        entry.reset(version_labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelConfig)
  return target;
}

size_t ModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int64> version_labels = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->version_labels_size());
  {
    ::std::unique_ptr<ModelConfig_VersionLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->version_labels().begin();
        it != this->version_labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(version_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_path());
  }

  // string model_platform = 4;
  if (this->model_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model_platform());
  }

  // .tensorflow.serving.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logging_config_);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
  if (this->has_model_version_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *model_version_policy_);
  }

  // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
  if (this->model_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->model_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ModelConfig)
    MergeFrom(*source);
  }
}

void ModelConfig::MergeFrom(const ModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  version_labels_.MergeFrom(from.version_labels_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.base_path().size() > 0) {
    set_base_path(from.base_path());
  }
  if (from.model_platform().size() > 0) {
    set_model_platform(from.model_platform());
  }
  if (from.has_logging_config()) {
    mutable_logging_config()->::tensorflow::serving::LoggingConfig::MergeFrom(from.logging_config());
  }
  if (from.has_model_version_policy()) {
    mutable_model_version_policy()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy::MergeFrom(from.model_version_policy());
  }
  if (from.model_type() != 0) {
    set_model_type(from.model_type());
  }
}

void ModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfig::CopyFrom(const ModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfig::IsInitialized() const {
  return true;
}

void ModelConfig::Swap(ModelConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelConfig::UnsafeArenaSwap(ModelConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelConfig::InternalSwap(ModelConfig* other) {
  using std::swap;
  version_labels_.Swap(&other->version_labels_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  base_path_.Swap(&other->base_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_platform_.Swap(&other->model_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logging_config_, other->logging_config_);
  swap(model_version_policy_, other->model_version_policy_);
  swap(model_type_, other->model_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelConfigList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelConfigList::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelConfigList::ModelConfigList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfigList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ModelConfigList)
}
ModelConfigList::ModelConfigList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  config_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfigList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelConfigList)
}
ModelConfigList::ModelConfigList(const ModelConfigList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      config_(from.config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelConfigList)
}

void ModelConfigList::SharedCtor() {
}

ModelConfigList::~ModelConfigList() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelConfigList)
  SharedDtor();
}

void ModelConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ModelConfigList::ArenaDtor(void* object) {
  ModelConfigList* _this = reinterpret_cast< ModelConfigList* >(object);
  (void)_this;
}
void ModelConfigList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelConfigList::descriptor() {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelConfigList& ModelConfigList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelConfigList.base);
  return *internal_default_instance();
}


void ModelConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelConfigList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  _internal_metadata_.Clear();
}

bool ModelConfigList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ModelConfigList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.serving.ModelConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ModelConfigList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ModelConfigList)
  return false;
#undef DO_
}

void ModelConfigList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ModelConfigList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.serving.ModelConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->config(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ModelConfigList)
}

::google::protobuf::uint8* ModelConfigList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelConfigList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.serving.ModelConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->config(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelConfigList)
  return target;
}

size_t ModelConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelConfigList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.serving.ModelConfig config = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelConfigList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ModelConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfigList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelConfigList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ModelConfigList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ModelConfigList)
    MergeFrom(*source);
  }
}

void ModelConfigList::MergeFrom(const ModelConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
}

void ModelConfigList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ModelConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfigList::CopyFrom(const ModelConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigList::IsInitialized() const {
  return true;
}

void ModelConfigList::Swap(ModelConfigList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelConfigList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelConfigList::UnsafeArenaSwap(ModelConfigList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelConfigList::InternalSwap(ModelConfigList* other) {
  using std::swap;
  CastToBase(&config_)->InternalSwap(CastToBase(&other->config_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelConfigList::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelServerConfig::InitAsDefaultInstance() {
  ::tensorflow::serving::_ModelServerConfig_default_instance_.model_config_list_ = const_cast< ::tensorflow::serving::ModelConfigList*>(
      ::tensorflow::serving::ModelConfigList::internal_default_instance());
  ::tensorflow::serving::_ModelServerConfig_default_instance_.custom_model_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ModelServerConfig::set_allocated_model_config_list(::tensorflow::serving::ModelConfigList* model_config_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_config();
  if (model_config_list) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(model_config_list);
    if (message_arena != submessage_arena) {
      model_config_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model_config_list, submessage_arena);
    }
    set_has_model_config_list();
    config_.model_config_list_ = model_config_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.model_config_list)
}
void ModelServerConfig::set_allocated_custom_model_config(::google::protobuf::Any* custom_model_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_config();
  if (custom_model_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      custom_model_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom_model_config, submessage_arena);
    }
    set_has_custom_model_config();
    config_.custom_model_config_ = custom_model_config;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.custom_model_config)
}
void ModelServerConfig::clear_custom_model_config() {
  if (has_custom_model_config()) {
    if (GetArenaNoVirtual() == NULL) {
      delete config_.custom_model_config_;
    }
    clear_has_config();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelServerConfig::kModelConfigListFieldNumber;
const int ModelServerConfig::kCustomModelConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelServerConfig::ModelServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelServerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ModelServerConfig)
}
ModelServerConfig::ModelServerConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelServerConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelServerConfig)
}
ModelServerConfig::ModelServerConfig(const ModelServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_config();
  switch (from.config_case()) {
    case kModelConfigList: {
      mutable_model_config_list()->::tensorflow::serving::ModelConfigList::MergeFrom(from.model_config_list());
      break;
    }
    case kCustomModelConfig: {
      mutable_custom_model_config()->::google::protobuf::Any::MergeFrom(from.custom_model_config());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelServerConfig)
}

void ModelServerConfig::SharedCtor() {
  clear_has_config();
}

ModelServerConfig::~ModelServerConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelServerConfig)
  SharedDtor();
}

void ModelServerConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_config()) {
    clear_config();
  }
}

void ModelServerConfig::ArenaDtor(void* object) {
  ModelServerConfig* _this = reinterpret_cast< ModelServerConfig* >(object);
  (void)_this;
}
void ModelServerConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelServerConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelServerConfig& ModelServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelServerConfig.base);
  return *internal_default_instance();
}


void ModelServerConfig::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.serving.ModelServerConfig)
  switch (config_case()) {
    case kModelConfigList: {
      if (GetArenaNoVirtual() == NULL) {
        delete config_.model_config_list_;
      }
      break;
    }
    case kCustomModelConfig: {
      if (GetArenaNoVirtual() == NULL) {
        delete config_.custom_model_config_;
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIG_NOT_SET;
}


void ModelServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_config();
  _internal_metadata_.Clear();
}

bool ModelServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ModelServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelConfigList model_config_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model_config_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any custom_model_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom_model_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ModelServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ModelServerConfig)
  return false;
#undef DO_
}

void ModelServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ModelServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelConfigList model_config_list = 1;
  if (has_model_config_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_model_config_list(), output);
  }

  // .google.protobuf.Any custom_model_config = 2;
  if (has_custom_model_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_custom_model_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ModelServerConfig)
}

::google::protobuf::uint8* ModelServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelConfigList model_config_list = 1;
  if (has_model_config_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_model_config_list(), deterministic, target);
  }

  // .google.protobuf.Any custom_model_config = 2;
  if (has_custom_model_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_custom_model_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelServerConfig)
  return target;
}

size_t ModelServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (config_case()) {
    // .tensorflow.serving.ModelConfigList model_config_list = 1;
    case kModelConfigList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *config_.model_config_list_);
      break;
    }
    // .google.protobuf.Any custom_model_config = 2;
    case kCustomModelConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *config_.custom_model_config_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ModelServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ModelServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ModelServerConfig)
    MergeFrom(*source);
  }
}

void ModelServerConfig::MergeFrom(const ModelServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.config_case()) {
    case kModelConfigList: {
      mutable_model_config_list()->::tensorflow::serving::ModelConfigList::MergeFrom(from.model_config_list());
      break;
    }
    case kCustomModelConfig: {
      mutable_custom_model_config()->::google::protobuf::Any::MergeFrom(from.custom_model_config());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
}

void ModelServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ModelServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelServerConfig::CopyFrom(const ModelServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelServerConfig::IsInitialized() const {
  return true;
}

void ModelServerConfig::Swap(ModelServerConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelServerConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelServerConfig::UnsafeArenaSwap(ModelServerConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelServerConfig::InternalSwap(ModelServerConfig* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelServerConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ModelConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::ModelConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ModelConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ModelConfigList* Arena::CreateMaybeMessage< ::tensorflow::serving::ModelConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ModelConfigList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ModelServerConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::ModelServerConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ModelServerConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
