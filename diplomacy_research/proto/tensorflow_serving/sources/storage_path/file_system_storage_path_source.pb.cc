// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/sources/storage_path/file_system_storage_path_source.proto

#include "tensorflow_serving/sources/storage_path/file_system_storage_path_source.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy;
}  // namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto
namespace tensorflow {
namespace serving {
class FileSystemStoragePathSourceConfig_ServableVersionPolicy_LatestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest>
      _instance;
} _FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest_default_instance_;
class FileSystemStoragePathSourceConfig_ServableVersionPolicy_AllDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig_ServableVersionPolicy_All>
      _instance;
} _FileSystemStoragePathSourceConfig_ServableVersionPolicy_All_default_instance_;
class FileSystemStoragePathSourceConfig_ServableVersionPolicy_SpecificDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific>
      _instance;
} _FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific_default_instance_;
class FileSystemStoragePathSourceConfig_ServableVersionPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig_ServableVersionPolicy>
      _instance;
  const ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* latest_;
  const ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* all_;
  const ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* specific_;
} _FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_;
class FileSystemStoragePathSourceConfig_ServableToMonitorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig_ServableToMonitor>
      _instance;
} _FileSystemStoragePathSourceConfig_ServableToMonitor_default_instance_;
class FileSystemStoragePathSourceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileSystemStoragePathSourceConfig>
      _instance;
} _FileSystemStoragePathSourceConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto {
static void InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest}, {}};

static void InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_All() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_All}, {}};

static void InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific}, {}};

static void InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsFileSystemStoragePathSourceConfig_ServableVersionPolicy}, {
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest.base,
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All.base,
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific.base,}};

static void InitDefaultsFileSystemStoragePathSourceConfig_ServableToMonitor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableToMonitor_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileSystemStoragePathSourceConfig_ServableToMonitor}, {
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy.base,}};

static void InitDefaultsFileSystemStoragePathSourceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_FileSystemStoragePathSourceConfig_default_instance_;
    new (ptr) ::tensorflow::serving::FileSystemStoragePathSourceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::FileSystemStoragePathSourceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileSystemStoragePathSourceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileSystemStoragePathSourceConfig}, {
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileSystemStoragePathSourceConfig.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest, num_versions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific, versions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicyDefaultTypeInternal, latest_),
  offsetof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicyDefaultTypeInternal, all_),
  offsetof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicyDefaultTypeInternal, specific_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy, policy_choice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor, servable_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor, base_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor, servable_version_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, servables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, servable_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, base_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, file_system_poll_wait_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::FileSystemStoragePathSourceConfig, fail_if_zero_versions_at_startup_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest)},
  { 6, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All)},
  { 11, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific)},
  { 17, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy)},
  { 26, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor)},
  { 34, -1, sizeof(::tensorflow::serving::FileSystemStoragePathSourceConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableToMonitor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_FileSystemStoragePathSourceConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow_serving/sources/storage_path/file_system_storage_path_source.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nMtensorflow_serving/sources/storage_pat"
      "h/file_system_storage_path_source.proto\022"
      "\022tensorflow.serving\"\326\006\n!FileSystemStorag"
      "ePathSourceConfig\022Z\n\tservables\030\005 \003(\0132G.t"
      "ensorflow.serving.FileSystemStoragePathS"
      "ourceConfig.ServableToMonitor\022\031\n\rservabl"
      "e_name\030\001 \001(\tB\002\030\001\022\025\n\tbase_path\030\002 \001(\tB\002\030\001\022"
      "%\n\035file_system_poll_wait_seconds\030\003 \001(\003\022("
      "\n fail_if_zero_versions_at_startup\030\004 \001(\010"
      "\032\235\003\n\025ServableVersionPolicy\022d\n\006latest\030d \001"
      "(\0132R.tensorflow.serving.FileSystemStorag"
      "ePathSourceConfig.ServableVersionPolicy."
      "LatestH\000\022^\n\003all\030e \001(\0132O.tensorflow.servi"
      "ng.FileSystemStoragePathSourceConfig.Ser"
      "vableVersionPolicy.AllH\000\022h\n\010specific\030f \001"
      "(\0132T.tensorflow.serving.FileSystemStorag"
      "ePathSourceConfig.ServableVersionPolicy."
      "SpecificH\000\032\036\n\006Latest\022\024\n\014num_versions\030\001 \001"
      "(\r\032\005\n\003All\032\034\n\010Specific\022\020\n\010versions\030\001 \003(\003B"
      "\017\n\rpolicy_choice\032\261\001\n\021ServableToMonitor\022\025"
      "\n\rservable_name\030\001 \001(\t\022\021\n\tbase_path\030\002 \001(\t"
      "\022l\n\027servable_version_policy\030\004 \001(\0132K.tens"
      "orflow.serving.FileSystemStoragePathSour"
      "ceConfig.ServableVersionPolicyJ\004\010\003\020\004b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 964);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/sources/storage_path/file_system_storage_path_source.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto
namespace tensorflow {
namespace serving {

// ===================================================================

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::kNumVersionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
}
FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_versions_ = from.num_versions_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::SharedCtor() {
  num_versions_ = 0u;
}

FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::~FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::SharedDtor() {
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest& FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_versions_ = 0u;
  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 num_versions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_versions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_versions = 1;
  if (this->num_versions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_versions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_versions = 1;
  if (this->num_versions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_versions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  return target;
}

size_t FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 num_versions = 1;
  if (this->num_versions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_versions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::MergeFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num_versions() != 0) {
    set_num_versions(from.num_versions());
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::CopyFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::Swap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::InternalSwap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* other) {
  using std::swap;
  swap(num_versions_, other->num_versions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
}
FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::SharedCtor() {
}

FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::~FileSystemStoragePathSourceConfig_ServableVersionPolicy_All() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::SharedDtor() {
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All& FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_All.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  return target;
}

size_t FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::MergeFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::CopyFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_All& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::Swap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::InternalSwap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::kVersionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
}
FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      versions_(from.versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::SharedCtor() {
}

FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::~FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::SharedDtor() {
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific& FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 versions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_versions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_versions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 versions = 1;
  if (this->versions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _versions_cached_byte_size_));
  }
  for (int i = 0, n = this->versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->versions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 versions = 1;
  if (this->versions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _versions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->versions_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  return target;
}

size_t FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 versions = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->versions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _versions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::MergeFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::CopyFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::Swap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::InternalSwap(FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* other) {
  using std::swap;
  versions_.InternalSwap(&other->versions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::InitAsDefaultInstance() {
  ::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_.latest_ = const_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest*>(
      ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::internal_default_instance());
  ::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_.all_ = const_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All*>(
      ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::internal_default_instance());
  ::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableVersionPolicy_default_instance_.specific_ = const_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific*>(
      ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::internal_default_instance());
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy::set_allocated_latest(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* latest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy_choice();
  if (latest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      latest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, latest, submessage_arena);
    }
    set_has_latest();
    policy_choice_.latest_ = latest;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.latest)
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy::set_allocated_all(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* all) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy_choice();
  if (all) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      all = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, all, submessage_arena);
    }
    set_has_all();
    policy_choice_.all_ = all;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.all)
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy::set_allocated_specific(::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* specific) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy_choice();
  if (specific) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      specific = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, specific, submessage_arena);
    }
    set_has_specific();
    policy_choice_.specific_ = specific;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.specific)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSystemStoragePathSourceConfig_ServableVersionPolicy::kLatestFieldNumber;
const int FileSystemStoragePathSourceConfig_ServableVersionPolicy::kAllFieldNumber;
const int FileSystemStoragePathSourceConfig_ServableVersionPolicy::kSpecificFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig_ServableVersionPolicy::FileSystemStoragePathSourceConfig_ServableVersionPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
}
FileSystemStoragePathSourceConfig_ServableVersionPolicy::FileSystemStoragePathSourceConfig_ServableVersionPolicy(const FileSystemStoragePathSourceConfig_ServableVersionPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_policy_choice();
  switch (from.policy_choice_case()) {
    case kLatest: {
      mutable_latest()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::MergeFrom(from.latest());
      break;
    }
    case kAll: {
      mutable_all()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::MergeFrom(from.all());
      break;
    }
    case kSpecific: {
      mutable_specific()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::MergeFrom(from.specific());
      break;
    }
    case POLICY_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::SharedCtor() {
  clear_has_policy_choice();
}

FileSystemStoragePathSourceConfig_ServableVersionPolicy::~FileSystemStoragePathSourceConfig_ServableVersionPolicy() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::SharedDtor() {
  if (has_policy_choice()) {
    clear_policy_choice();
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig_ServableVersionPolicy::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig_ServableVersionPolicy& FileSystemStoragePathSourceConfig_ServableVersionPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableVersionPolicy.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig_ServableVersionPolicy::clear_policy_choice() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  switch (policy_choice_case()) {
    case kLatest: {
      delete policy_choice_.latest_;
      break;
    }
    case kAll: {
      delete policy_choice_.all_;
      break;
    }
    case kSpecific: {
      delete policy_choice_.specific_;
      break;
    }
    case POLICY_CHOICE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = POLICY_CHOICE_NOT_SET;
}


void FileSystemStoragePathSourceConfig_ServableVersionPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_policy_choice();
  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest latest = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All all = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific specific = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_specific()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest latest = 100;
  if (has_latest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->_internal_latest(), output);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All all = 101;
  if (has_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->_internal_all(), output);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific specific = 102;
  if (has_specific()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, this->_internal_specific(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig_ServableVersionPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest latest = 100;
  if (has_latest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->_internal_latest(), deterministic, target);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All all = 101;
  if (has_all()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->_internal_all(), deterministic, target);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific specific = 102;
  if (has_specific()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, this->_internal_specific(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  return target;
}

size_t FileSystemStoragePathSourceConfig_ServableVersionPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (policy_choice_case()) {
    // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Latest latest = 100;
    case kLatest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_choice_.latest_);
      break;
    }
    // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.All all = 101;
    case kAll: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_choice_.all_);
      break;
    }
    // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy.Specific specific = 102;
    case kSpecific: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_choice_.specific_);
      break;
    }
    case POLICY_CHOICE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig_ServableVersionPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig_ServableVersionPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::MergeFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.policy_choice_case()) {
    case kLatest: {
      mutable_latest()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest::MergeFrom(from.latest());
      break;
    }
    case kAll: {
      mutable_all()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All::MergeFrom(from.all());
      break;
    }
    case kSpecific: {
      mutable_specific()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific::MergeFrom(from.specific());
      break;
    }
    case POLICY_CHOICE_NOT_SET: {
      break;
    }
  }
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::CopyFrom(const FileSystemStoragePathSourceConfig_ServableVersionPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig_ServableVersionPolicy::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig_ServableVersionPolicy::Swap(FileSystemStoragePathSourceConfig_ServableVersionPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig_ServableVersionPolicy::InternalSwap(FileSystemStoragePathSourceConfig_ServableVersionPolicy* other) {
  using std::swap;
  swap(policy_choice_, other->policy_choice_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig_ServableVersionPolicy::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSystemStoragePathSourceConfig_ServableToMonitor::InitAsDefaultInstance() {
  ::tensorflow::serving::_FileSystemStoragePathSourceConfig_ServableToMonitor_default_instance_._instance.get_mutable()->servable_version_policy_ = const_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy*>(
      ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSystemStoragePathSourceConfig_ServableToMonitor::kServableNameFieldNumber;
const int FileSystemStoragePathSourceConfig_ServableToMonitor::kBasePathFieldNumber;
const int FileSystemStoragePathSourceConfig_ServableToMonitor::kServableVersionPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig_ServableToMonitor::FileSystemStoragePathSourceConfig_ServableToMonitor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
}
FileSystemStoragePathSourceConfig_ServableToMonitor::FileSystemStoragePathSourceConfig_ServableToMonitor(const FileSystemStoragePathSourceConfig_ServableToMonitor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servable_name().size() > 0) {
    servable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servable_name_);
  }
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_path().size() > 0) {
    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  if (from.has_servable_version_policy()) {
    servable_version_policy_ = new ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy(*from.servable_version_policy_);
  } else {
    servable_version_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::SharedCtor() {
  servable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servable_version_policy_ = NULL;
}

FileSystemStoragePathSourceConfig_ServableToMonitor::~FileSystemStoragePathSourceConfig_ServableToMonitor() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::SharedDtor() {
  servable_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete servable_version_policy_;
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig_ServableToMonitor::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig_ServableToMonitor& FileSystemStoragePathSourceConfig_ServableToMonitor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig_ServableToMonitor.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig_ServableToMonitor::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && servable_version_policy_ != NULL) {
    delete servable_version_policy_;
  }
  servable_version_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig_ServableToMonitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string servable_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servable_name().data(), static_cast<int>(this->servable_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.servable_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_path().data(), static_cast<int>(this->base_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.base_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy servable_version_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_servable_version_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string servable_name = 1;
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), static_cast<int>(this->servable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.servable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servable_name(), output);
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base_path(), output);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy servable_version_policy = 4;
  if (this->has_servable_version_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_servable_version_policy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig_ServableToMonitor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string servable_name = 1;
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), static_cast<int>(this->servable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.servable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servable_name(), target);
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor.base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_path(), target);
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy servable_version_policy = 4;
  if (this->has_servable_version_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_servable_version_policy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  return target;
}

size_t FileSystemStoragePathSourceConfig_ServableToMonitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string servable_name = 1;
  if (this->servable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servable_name());
  }

  // string base_path = 2;
  if (this->base_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_path());
  }

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy servable_version_policy = 4;
  if (this->has_servable_version_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *servable_version_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig_ServableToMonitor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig_ServableToMonitor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::MergeFrom(const FileSystemStoragePathSourceConfig_ServableToMonitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servable_name().size() > 0) {

    servable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servable_name_);
  }
  if (from.base_path().size() > 0) {

    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  if (from.has_servable_version_policy()) {
    mutable_servable_version_policy()->::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy::MergeFrom(from.servable_version_policy());
  }
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::CopyFrom(const FileSystemStoragePathSourceConfig_ServableToMonitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig_ServableToMonitor::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig_ServableToMonitor::Swap(FileSystemStoragePathSourceConfig_ServableToMonitor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig_ServableToMonitor::InternalSwap(FileSystemStoragePathSourceConfig_ServableToMonitor* other) {
  using std::swap;
  servable_name_.Swap(&other->servable_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  base_path_.Swap(&other->base_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(servable_version_policy_, other->servable_version_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig_ServableToMonitor::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileSystemStoragePathSourceConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileSystemStoragePathSourceConfig::kServablesFieldNumber;
const int FileSystemStoragePathSourceConfig::kServableNameFieldNumber;
const int FileSystemStoragePathSourceConfig::kBasePathFieldNumber;
const int FileSystemStoragePathSourceConfig::kFileSystemPollWaitSecondsFieldNumber;
const int FileSystemStoragePathSourceConfig::kFailIfZeroVersionsAtStartupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileSystemStoragePathSourceConfig::FileSystemStoragePathSourceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.FileSystemStoragePathSourceConfig)
}
FileSystemStoragePathSourceConfig::FileSystemStoragePathSourceConfig(const FileSystemStoragePathSourceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      servables_(from.servables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servable_name().size() > 0) {
    servable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servable_name_);
  }
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_path().size() > 0) {
    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  ::memcpy(&file_system_poll_wait_seconds_, &from.file_system_poll_wait_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&fail_if_zero_versions_at_startup_) -
    reinterpret_cast<char*>(&file_system_poll_wait_seconds_)) + sizeof(fail_if_zero_versions_at_startup_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.FileSystemStoragePathSourceConfig)
}

void FileSystemStoragePathSourceConfig::SharedCtor() {
  servable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_system_poll_wait_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fail_if_zero_versions_at_startup_) -
      reinterpret_cast<char*>(&file_system_poll_wait_seconds_)) + sizeof(fail_if_zero_versions_at_startup_));
}

FileSystemStoragePathSourceConfig::~FileSystemStoragePathSourceConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.FileSystemStoragePathSourceConfig)
  SharedDtor();
}

void FileSystemStoragePathSourceConfig::SharedDtor() {
  servable_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileSystemStoragePathSourceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileSystemStoragePathSourceConfig::descriptor() {
  ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileSystemStoragePathSourceConfig& FileSystemStoragePathSourceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::scc_info_FileSystemStoragePathSourceConfig.base);
  return *internal_default_instance();
}


void FileSystemStoragePathSourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servables_.Clear();
  servable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_system_poll_wait_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fail_if_zero_versions_at_startup_) -
      reinterpret_cast<char*>(&file_system_poll_wait_seconds_)) + sizeof(fail_if_zero_versions_at_startup_));
  _internal_metadata_.Clear();
}

bool FileSystemStoragePathSourceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string servable_name = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servable_name().data(), static_cast<int>(this->servable_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.FileSystemStoragePathSourceConfig.servable_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_path = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_path().data(), static_cast<int>(this->base_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.FileSystemStoragePathSourceConfig.base_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 file_system_poll_wait_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_system_poll_wait_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fail_if_zero_versions_at_startup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fail_if_zero_versions_at_startup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.FileSystemStoragePathSourceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.FileSystemStoragePathSourceConfig)
  return false;
#undef DO_
}

void FileSystemStoragePathSourceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string servable_name = 1 [deprecated = true];
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), static_cast<int>(this->servable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.servable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servable_name(), output);
  }

  // string base_path = 2 [deprecated = true];
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base_path(), output);
  }

  // int64 file_system_poll_wait_seconds = 3;
  if (this->file_system_poll_wait_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->file_system_poll_wait_seconds(), output);
  }

  // bool fail_if_zero_versions_at_startup = 4;
  if (this->fail_if_zero_versions_at_startup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fail_if_zero_versions_at_startup(), output);
  }

  // repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->servables(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.FileSystemStoragePathSourceConfig)
}

::google::protobuf::uint8* FileSystemStoragePathSourceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string servable_name = 1 [deprecated = true];
  if (this->servable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servable_name().data(), static_cast<int>(this->servable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.servable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servable_name(), target);
  }

  // string base_path = 2 [deprecated = true];
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.FileSystemStoragePathSourceConfig.base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_path(), target);
  }

  // int64 file_system_poll_wait_seconds = 3;
  if (this->file_system_poll_wait_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->file_system_poll_wait_seconds(), target);
  }

  // bool fail_if_zero_versions_at_startup = 4;
  if (this->fail_if_zero_versions_at_startup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fail_if_zero_versions_at_startup(), target);
  }

  // repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->servables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.FileSystemStoragePathSourceConfig)
  return target;
}

size_t FileSystemStoragePathSourceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->servables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servables(static_cast<int>(i)));
    }
  }

  // string servable_name = 1 [deprecated = true];
  if (this->servable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servable_name());
  }

  // string base_path = 2 [deprecated = true];
  if (this->base_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_path());
  }

  // int64 file_system_poll_wait_seconds = 3;
  if (this->file_system_poll_wait_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_system_poll_wait_seconds());
  }

  // bool fail_if_zero_versions_at_startup = 4;
  if (this->fail_if_zero_versions_at_startup() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileSystemStoragePathSourceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const FileSystemStoragePathSourceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileSystemStoragePathSourceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.FileSystemStoragePathSourceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.FileSystemStoragePathSourceConfig)
    MergeFrom(*source);
  }
}

void FileSystemStoragePathSourceConfig::MergeFrom(const FileSystemStoragePathSourceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servables_.MergeFrom(from.servables_);
  if (from.servable_name().size() > 0) {

    servable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servable_name_);
  }
  if (from.base_path().size() > 0) {

    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  if (from.file_system_poll_wait_seconds() != 0) {
    set_file_system_poll_wait_seconds(from.file_system_poll_wait_seconds());
  }
  if (from.fail_if_zero_versions_at_startup() != 0) {
    set_fail_if_zero_versions_at_startup(from.fail_if_zero_versions_at_startup());
  }
}

void FileSystemStoragePathSourceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystemStoragePathSourceConfig::CopyFrom(const FileSystemStoragePathSourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.FileSystemStoragePathSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystemStoragePathSourceConfig::IsInitialized() const {
  return true;
}

void FileSystemStoragePathSourceConfig::Swap(FileSystemStoragePathSourceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileSystemStoragePathSourceConfig::InternalSwap(FileSystemStoragePathSourceConfig* other) {
  using std::swap;
  CastToBase(&servables_)->InternalSwap(CastToBase(&other->servables_));
  servable_name_.Swap(&other->servable_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  base_path_.Swap(&other->base_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_system_poll_wait_seconds_, other->file_system_poll_wait_seconds_);
  swap(fail_if_zero_versions_at_startup_, other->fail_if_zero_versions_at_startup_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileSystemStoragePathSourceConfig::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fsources_2fstorage_5fpath_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Latest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_All >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy_Specific >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableToMonitor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::FileSystemStoragePathSourceConfig* Arena::CreateMaybeMessage< ::tensorflow::serving::FileSystemStoragePathSourceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::serving::FileSystemStoragePathSourceConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
