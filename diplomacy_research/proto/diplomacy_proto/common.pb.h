// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_proto/common.proto

#ifndef PROTOBUF_INCLUDED_diplomacy_5fproto_2fcommon_2eproto
#define PROTOBUF_INCLUDED_diplomacy_5fproto_2fcommon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5fproto_2fcommon_2eproto 

namespace protobuf_diplomacy_5fproto_2fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_diplomacy_5fproto_2fcommon_2eproto
namespace diplomacy_proto {
class BytesList;
class BytesListDefaultTypeInternal;
extern BytesListDefaultTypeInternal _BytesList_default_instance_;
class FloatList;
class FloatListDefaultTypeInternal;
extern FloatListDefaultTypeInternal _FloatList_default_instance_;
class Int64List;
class Int64ListDefaultTypeInternal;
extern Int64ListDefaultTypeInternal _Int64List_default_instance_;
class IntList;
class IntListDefaultTypeInternal;
extern IntListDefaultTypeInternal _IntList_default_instance_;
class MapStringList;
class MapStringListDefaultTypeInternal;
extern MapStringListDefaultTypeInternal _MapStringList_default_instance_;
class MapStringList_ValueEntry_DoNotUse;
class MapStringList_ValueEntry_DoNotUseDefaultTypeInternal;
extern MapStringList_ValueEntry_DoNotUseDefaultTypeInternal _MapStringList_ValueEntry_DoNotUse_default_instance_;
class StringList;
class StringListDefaultTypeInternal;
extern StringListDefaultTypeInternal _StringList_default_instance_;
}  // namespace diplomacy_proto
namespace google {
namespace protobuf {
template<> ::diplomacy_proto::BytesList* Arena::CreateMaybeMessage<::diplomacy_proto::BytesList>(Arena*);
template<> ::diplomacy_proto::FloatList* Arena::CreateMaybeMessage<::diplomacy_proto::FloatList>(Arena*);
template<> ::diplomacy_proto::Int64List* Arena::CreateMaybeMessage<::diplomacy_proto::Int64List>(Arena*);
template<> ::diplomacy_proto::IntList* Arena::CreateMaybeMessage<::diplomacy_proto::IntList>(Arena*);
template<> ::diplomacy_proto::MapStringList* Arena::CreateMaybeMessage<::diplomacy_proto::MapStringList>(Arena*);
template<> ::diplomacy_proto::MapStringList_ValueEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::MapStringList_ValueEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::StringList* Arena::CreateMaybeMessage<::diplomacy_proto::StringList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace diplomacy_proto {

// ===================================================================

class StringList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.StringList) */ {
 public:
  StringList();
  virtual ~StringList();

  StringList(const StringList& from);

  inline StringList& operator=(const StringList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringList(StringList&& from) noexcept
    : StringList() {
    *this = ::std::move(from);
  }

  inline StringList& operator=(StringList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringList* internal_default_instance() {
    return reinterpret_cast<const StringList*>(
               &_StringList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(StringList* other);
  void Swap(StringList* other);
  friend void swap(StringList& a, StringList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringList* New() const final {
    return CreateMaybeMessage<StringList>(NULL);
  }

  StringList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringList& from);
  void MergeFrom(const StringList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringList* other);
  protected:
  explicit StringList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const char* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.StringList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BytesList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.BytesList) */ {
 public:
  BytesList();
  virtual ~BytesList();

  BytesList(const BytesList& from);

  inline BytesList& operator=(const BytesList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BytesList(BytesList&& from) noexcept
    : BytesList() {
    *this = ::std::move(from);
  }

  inline BytesList& operator=(BytesList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BytesList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BytesList* internal_default_instance() {
    return reinterpret_cast<const BytesList*>(
               &_BytesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(BytesList* other);
  void Swap(BytesList* other);
  friend void swap(BytesList& a, BytesList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BytesList* New() const final {
    return CreateMaybeMessage<BytesList>(NULL);
  }

  BytesList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BytesList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BytesList& from);
  void MergeFrom(const BytesList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BytesList* other);
  protected:
  explicit BytesList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.BytesList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.FloatList) */ {
 public:
  FloatList();
  virtual ~FloatList();

  FloatList(const FloatList& from);

  inline FloatList& operator=(const FloatList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatList(FloatList&& from) noexcept
    : FloatList() {
    *this = ::std::move(from);
  }

  inline FloatList& operator=(FloatList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatList* internal_default_instance() {
    return reinterpret_cast<const FloatList*>(
               &_FloatList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(FloatList* other);
  void Swap(FloatList* other);
  friend void swap(FloatList& a, FloatList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatList* New() const final {
    return CreateMaybeMessage<FloatList>(NULL);
  }

  FloatList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatList& from);
  void MergeFrom(const FloatList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatList* other);
  protected:
  explicit FloatList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float value = 1 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField< float >&
      value() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.FloatList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< float > value_;
  mutable int _value_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.IntList) */ {
 public:
  IntList();
  virtual ~IntList();

  IntList(const IntList& from);

  inline IntList& operator=(const IntList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntList(IntList&& from) noexcept
    : IntList() {
    *this = ::std::move(from);
  }

  inline IntList& operator=(IntList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntList* internal_default_instance() {
    return reinterpret_cast<const IntList*>(
               &_IntList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(IntList* other);
  void Swap(IntList* other);
  friend void swap(IntList& a, IntList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntList* New() const final {
    return CreateMaybeMessage<IntList>(NULL);
  }

  IntList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntList& from);
  void MergeFrom(const IntList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntList* other);
  protected:
  explicit IntList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 value = 1 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value(int index) const;
  void set_value(int index, ::google::protobuf::int32 value);
  void add_value(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.IntList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_;
  mutable int _value_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.Int64List) */ {
 public:
  Int64List();
  virtual ~Int64List();

  Int64List(const Int64List& from);

  inline Int64List& operator=(const Int64List& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64List(Int64List&& from) noexcept
    : Int64List() {
    *this = ::std::move(from);
  }

  inline Int64List& operator=(Int64List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64List& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64List* internal_default_instance() {
    return reinterpret_cast<const Int64List*>(
               &_Int64List_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(Int64List* other);
  void Swap(Int64List* other);
  friend void swap(Int64List& a, Int64List& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64List* New() const final {
    return CreateMaybeMessage<Int64List>(NULL);
  }

  Int64List* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64List>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64List& from);
  void MergeFrom(const Int64List& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64List* other);
  protected:
  explicit Int64List(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 value = 1 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value(int index) const;
  void set_value(int index, ::google::protobuf::int64 value);
  void add_value(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      value() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.Int64List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > value_;
  mutable int _value_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapStringList_ValueEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapStringList_ValueEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapStringList_ValueEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  MapStringList_ValueEntry_DoNotUse();
  MapStringList_ValueEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapStringList_ValueEntry_DoNotUse& other);
  static const MapStringList_ValueEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapStringList_ValueEntry_DoNotUse*>(&_MapStringList_ValueEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapStringList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.MapStringList) */ {
 public:
  MapStringList();
  virtual ~MapStringList();

  MapStringList(const MapStringList& from);

  inline MapStringList& operator=(const MapStringList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapStringList(MapStringList&& from) noexcept
    : MapStringList() {
    *this = ::std::move(from);
  }

  inline MapStringList& operator=(MapStringList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapStringList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapStringList* internal_default_instance() {
    return reinterpret_cast<const MapStringList*>(
               &_MapStringList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(MapStringList* other);
  void Swap(MapStringList* other);
  friend void swap(MapStringList& a, MapStringList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapStringList* New() const final {
    return CreateMaybeMessage<MapStringList>(NULL);
  }

  MapStringList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapStringList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapStringList& from);
  void MergeFrom(const MapStringList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapStringList* other);
  protected:
  explicit MapStringList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .diplomacy_proto.StringList> value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      value() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.MapStringList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      MapStringList_ValueEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringList

// repeated string value = 1;
inline int StringList::value_size() const {
  return value_.size();
}
inline void StringList::clear_value() {
  value_.Clear();
}
inline const ::std::string& StringList::value(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.StringList.value)
  return value_.Get(index);
}
inline ::std::string* StringList::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.StringList.value)
  return value_.Mutable(index);
}
inline void StringList::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.StringList.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringList::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.StringList.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringList::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.StringList.value)
}
inline void StringList::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.StringList.value)
}
inline ::std::string* StringList::add_value() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.StringList.value)
  return value_.Add();
}
inline void StringList::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.StringList.value)
}
#if LANG_CXX11
inline void StringList::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.StringList.value)
}
#endif
inline void StringList::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.StringList.value)
}
inline void StringList::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.StringList.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringList::value() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.StringList.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.StringList.value)
  return &value_;
}

// -------------------------------------------------------------------

// BytesList

// repeated bytes value = 1;
inline int BytesList::value_size() const {
  return value_.size();
}
inline void BytesList::clear_value() {
  value_.Clear();
}
inline const ::std::string& BytesList::value(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.BytesList.value)
  return value_.Get(index);
}
inline ::std::string* BytesList::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.BytesList.value)
  return value_.Mutable(index);
}
inline void BytesList::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.BytesList.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BytesList::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.BytesList.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BytesList::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.BytesList.value)
}
inline void BytesList::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.BytesList.value)
}
inline ::std::string* BytesList::add_value() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.BytesList.value)
  return value_.Add();
}
inline void BytesList::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.BytesList.value)
}
#if LANG_CXX11
inline void BytesList::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.BytesList.value)
}
#endif
inline void BytesList::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.BytesList.value)
}
inline void BytesList::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.BytesList.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesList::value() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.BytesList.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BytesList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.BytesList.value)
  return &value_;
}

// -------------------------------------------------------------------

// FloatList

// repeated float value = 1 [packed = true];
inline int FloatList::value_size() const {
  return value_.size();
}
inline void FloatList::clear_value() {
  value_.Clear();
}
inline float FloatList::value(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.FloatList.value)
  return value_.Get(index);
}
inline void FloatList::set_value(int index, float value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.FloatList.value)
}
inline void FloatList::add_value(float value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.FloatList.value)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatList::value() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.FloatList.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.FloatList.value)
  return &value_;
}

// -------------------------------------------------------------------

// IntList

// repeated int32 value = 1 [packed = true];
inline int IntList::value_size() const {
  return value_.size();
}
inline void IntList::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int32 IntList::value(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.IntList.value)
  return value_.Get(index);
}
inline void IntList::set_value(int index, ::google::protobuf::int32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.IntList.value)
}
inline void IntList::add_value(::google::protobuf::int32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.IntList.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntList::value() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.IntList.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.IntList.value)
  return &value_;
}

// -------------------------------------------------------------------

// Int64List

// repeated int64 value = 1 [packed = true];
inline int Int64List::value_size() const {
  return value_.size();
}
inline void Int64List::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int64 Int64List::value(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Int64List.value)
  return value_.Get(index);
}
inline void Int64List::set_value(int index, ::google::protobuf::int64 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.Int64List.value)
}
inline void Int64List::add_value(::google::protobuf::int64 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.Int64List.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64List::value() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.Int64List.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64List::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.Int64List.value)
  return &value_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MapStringList

// map<string, .diplomacy_proto.StringList> value = 1;
inline int MapStringList::value_size() const {
  return value_.size();
}
inline void MapStringList::clear_value() {
  value_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
MapStringList::value() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.MapStringList.value)
  return value_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
MapStringList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.MapStringList.value)
  return value_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace diplomacy_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_diplomacy_5fproto_2fcommon_2eproto
